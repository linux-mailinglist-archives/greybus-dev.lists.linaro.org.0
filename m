Return-Path: <greybus-dev-bounces@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 52FE82EAE14
	for <lists+greybus-dev@lfdr.de>; Tue,  5 Jan 2021 16:18:32 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 735E366723
	for <lists+greybus-dev@lfdr.de>; Tue,  5 Jan 2021 15:18:31 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 67B7A608ED; Tue,  5 Jan 2021 15:18:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 9D0FA66723;
	Tue,  5 Jan 2021 15:18:10 +0000 (UTC)
X-Original-To: greybus-dev@lists.linaro.org
Delivered-To: greybus-dev@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 4D538608ED
 for <greybus-dev@lists.linaro.org>; Tue,  5 Jan 2021 15:18:08 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 3D59B66729; Tue,  5 Jan 2021 15:18:08 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by lists.linaro.org (Postfix) with ESMTPS id 2F310608ED
 for <greybus-dev@lists.linaro.org>; Tue,  5 Jan 2021 15:17:55 +0000 (UTC)
Received: by mail.kernel.org (Postfix) with ESMTPSA id E5ECD22B49;
 Tue,  5 Jan 2021 15:17:53 +0000 (UTC)
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: greybus-dev@lists.linaro.org
Date: Tue,  5 Jan 2021 16:19:03 +0100
Message-Id: <20210105151903.1761635-2-gregkh@linuxfoundation.org>
X-Mailer: git-send-email 2.30.0
In-Reply-To: <20210105151903.1761635-1-gregkh@linuxfoundation.org>
References: <20210105151903.1761635-1-gregkh@linuxfoundation.org>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: devel@driverdev.osuosl.org, Alex Elder <elder@kernel.org>,
 linus-kernel@vger.kernel.org, Johan Hovold <johan@kernel.org>
Subject: [greybus-dev] [PATCH 2/2] greybus: vibrator: rip out custom sysfs
	api
X-BeenThere: greybus-dev@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/greybus-dev/>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: greybus-dev-bounces@lists.linaro.org
Sender: "greybus-dev" <greybus-dev-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

Tm8gbmVlZCBmb3IgYSBjdXN0b20gc3lzZnMgYXBpIGZvciB0aGUgZ3JleWJ1cyB2aWJyYXRvciBk
cml2ZXIgbm93IHRoYXQKaXQgaXMgaG9va2VkIHVwIHRvIHRoZSBrZXJuZWwncyBpbnB1dCBsYXll
ciwgc28gcmlwIGl0IG91dC4KCkNjOiBKb2hhbiBIb3ZvbGQgPGpvaGFuQGtlcm5lbC5vcmc+CkNj
OiBBbGV4IEVsZGVyIDxlbGRlckBrZXJuZWwub3JnPgpTaWduZWQtb2ZmLWJ5OiBHcmVnIEtyb2Fo
LUhhcnRtYW4gPGdyZWdraEBsaW51eGZvdW5kYXRpb24ub3JnPgotLS0KIGRyaXZlcnMvc3RhZ2lu
Zy9ncmV5YnVzL3ZpYnJhdG9yLmMgfCAxMjUgKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0K
IDEgZmlsZSBjaGFuZ2VkLCA1IGluc2VydGlvbnMoKyksIDEyMCBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy92aWJyYXRvci5jIGIvZHJpdmVycy9zdGFn
aW5nL2dyZXlidXMvdmlicmF0b3IuYwppbmRleCA5NDExMGNhZGI1YmQuLmQ5M2M4ZjdlMWJkNiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvdmlicmF0b3IuYworKysgYi9kcml2
ZXJzL3N0YWdpbmcvZ3JleWJ1cy92aWJyYXRvci5jCkBAIC0xOSw5ICsxOSw2IEBACiBzdHJ1Y3Qg
Z2JfdmlicmF0b3JfZGV2aWNlIHsKIAlzdHJ1Y3QgZ2JfY29ubmVjdGlvbgkqY29ubmVjdGlvbjsK
IAlzdHJ1Y3QgaW5wdXRfZGV2CSppbnB1dDsKLQlzdHJ1Y3QgZGV2aWNlCQkqZGV2OwotCWludAkJ
CW1pbm9yOwkJLyogdmlicmF0b3IgbWlub3IgbnVtYmVyICovCi0Jc3RydWN0IGRlbGF5ZWRfd29y
ayAgICAgZGVsYXllZF93b3JrOwogCWJvb2wJCQlydW5uaW5nOwogCWJvb2wJCQlvbjsKIAlzdHJ1
Y3Qgd29ya19zdHJ1Y3QJcGxheV93b3JrOwpAQCAtNDUsNyArNDIsNyBAQCBzdGF0aWMgaW50IHR1
cm5fb2ZmKHN0cnVjdCBnYl92aWJyYXRvcl9kZXZpY2UgKnZpYikKIAlyZXR1cm4gcmV0OwogfQog
Ci1zdGF0aWMgaW50IHR1cm5fb24oc3RydWN0IGdiX3ZpYnJhdG9yX2RldmljZSAqdmliLCB1MTYg
dGltZW91dF9tcykKK3N0YXRpYyBpbnQgdHVybl9vbihzdHJ1Y3QgZ2JfdmlicmF0b3JfZGV2aWNl
ICp2aWIpCiB7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlID0gdmliLT5jb25uZWN0aW9uLT5i
dW5kbGU7CiAJaW50IHJldDsKQEAgLTU0LDEwICs1MSw2IEBAIHN0YXRpYyBpbnQgdHVybl9vbihz
dHJ1Y3QgZ2JfdmlicmF0b3JfZGV2aWNlICp2aWIsIHUxNiB0aW1lb3V0X21zKQogCWlmIChyZXQp
CiAJCXJldHVybiByZXQ7CiAKLQkvKiBWaWJyYXRvciB3YXMgc3dpdGNoZWQgT04gZWFybGllciAq
LwotCWlmIChjYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJnZpYi0+ZGVsYXllZF93b3JrKSkKLQkJ
dHVybl9vZmYodmliKTsKLQogCXJldCA9IGdiX29wZXJhdGlvbl9zeW5jKHZpYi0+Y29ubmVjdGlv
biwgR0JfVklCUkFUT1JfVFlQRV9PTiwKIAkJCQlOVUxMLCAwLCBOVUxMLCAwKTsKIAlpZiAocmV0
KSB7CkBAIC02Niw4ICs1OSw2IEBAIHN0YXRpYyBpbnQgdHVybl9vbihzdHJ1Y3QgZ2JfdmlicmF0
b3JfZGV2aWNlICp2aWIsIHUxNiB0aW1lb3V0X21zKQogCX0KIAogCXZpYi0+b24gPSB0cnVlOwot
CXNjaGVkdWxlX2RlbGF5ZWRfd29yaygmdmliLT5kZWxheWVkX3dvcmssIG1zZWNzX3RvX2ppZmZp
ZXModGltZW91dF9tcykpOwotCiAJcmV0dXJuIDA7CiB9CiAKQEAgLTc5LDcgKzcwLDcgQEAgc3Rh
dGljIHZvaWQgZ2JfdmlicmF0b3JfcGxheV93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykK
IAlpZiAodmliLT5ydW5uaW5nKQogCQl0dXJuX29mZih2aWIpOwogCWVsc2UKLQkJdHVybl9vbih2
aWIsIDEwMCk7CisJCXR1cm5fb24odmliKTsKIH0KIAogc3RhdGljIGludCBnYl92aWJyYXRvcl9w
bGF5X2VmZmVjdChzdHJ1Y3QgaW5wdXRfZGV2ICppbnB1dCwgdm9pZCAqZGF0YSwKQEAgLTEwMSw2
OCArOTIsMTcgQEAgc3RhdGljIHZvaWQgZ2JfdmlicmF0b3JfY2xvc2Uoc3RydWN0IGlucHV0X2Rl
diAqaW5wdXQpCiB7CiAJc3RydWN0IGdiX3ZpYnJhdG9yX2RldmljZSAqdmliID0gaW5wdXRfZ2V0
X2RydmRhdGEoaW5wdXQpOwogCi0JY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZ2aWItPmRlbGF5
ZWRfd29yayk7CiAJY2FuY2VsX3dvcmtfc3luYygmdmliLT5wbGF5X3dvcmspOwogCXR1cm5fb2Zm
KHZpYik7CiAJdmliLT5ydW5uaW5nID0gZmFsc2U7CiB9CiAKLXN0YXRpYyB2b2lkIGdiX3ZpYnJh
dG9yX3dvcmtlcihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCi17Ci0Jc3RydWN0IGRlbGF5ZWRf
d29yayAqZGVsYXllZF93b3JrID0gdG9fZGVsYXllZF93b3JrKHdvcmspOwotCXN0cnVjdCBnYl92
aWJyYXRvcl9kZXZpY2UgKnZpYiA9Ci0JCWNvbnRhaW5lcl9vZihkZWxheWVkX3dvcmssCi0JCQkg
ICAgIHN0cnVjdCBnYl92aWJyYXRvcl9kZXZpY2UsCi0JCQkgICAgIGRlbGF5ZWRfd29yayk7Ci0K
LQl0dXJuX29mZih2aWIpOwotfQotCi1zdGF0aWMgc3NpemVfdCB0aW1lb3V0X3N0b3JlKHN0cnVj
dCBkZXZpY2UgKmRldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsCi0JCQkgICAgIGNv
bnN0IGNoYXIgKmJ1Ziwgc2l6ZV90IGNvdW50KQotewotCXN0cnVjdCBnYl92aWJyYXRvcl9kZXZp
Y2UgKnZpYiA9IGRldl9nZXRfZHJ2ZGF0YShkZXYpOwotCXVuc2lnbmVkIGxvbmcgdmFsOwotCWlu
dCByZXR2YWw7Ci0KLQlyZXR2YWwgPSBrc3RydG91bChidWYsIDEwLCAmdmFsKTsKLQlpZiAocmV0
dmFsIDwgMCkgewotCQlkZXZfZXJyKGRldiwgImNvdWxkIG5vdCBwYXJzZSB0aW1lb3V0IHZhbHVl
ICVkXG4iLCByZXR2YWwpOwotCQlyZXR1cm4gcmV0dmFsOwotCX0KLQotCWlmICh2YWwpCi0JCXJl
dHZhbCA9IHR1cm5fb24odmliLCAodTE2KXZhbCk7Ci0JZWxzZQotCQlyZXR2YWwgPSB0dXJuX29m
Zih2aWIpOwotCWlmIChyZXR2YWwpCi0JCXJldHVybiByZXR2YWw7Ci0KLQlyZXR1cm4gY291bnQ7
Ci19Ci1zdGF0aWMgREVWSUNFX0FUVFJfV08odGltZW91dCk7Ci0KLXN0YXRpYyBzdHJ1Y3QgYXR0
cmlidXRlICp2aWJyYXRvcl9hdHRyc1tdID0gewotCSZkZXZfYXR0cl90aW1lb3V0LmF0dHIsCi0J
TlVMTCwKLX07Ci1BVFRSSUJVVEVfR1JPVVBTKHZpYnJhdG9yKTsKLQotc3RhdGljIHN0cnVjdCBj
bGFzcyB2aWJyYXRvcl9jbGFzcyA9IHsKLQkubmFtZQkJPSAidmlicmF0b3IiLAotCS5vd25lcgkJ
PSBUSElTX01PRFVMRSwKLQkuZGV2X2dyb3Vwcwk9IHZpYnJhdG9yX2dyb3VwcywKLX07Ci0KLXN0
YXRpYyBERUZJTkVfSURBKG1pbm9ycyk7Ci0KIHN0YXRpYyBpbnQgZ2JfdmlicmF0b3JfcHJvYmUo
c3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlLAogCQkJICAgICBjb25zdCBzdHJ1Y3QgZ3JleWJ1c19i
dW5kbGVfaWQgKmlkKQogewogCXN0cnVjdCBncmV5YnVzX2Rlc2NyaXB0b3JfY3BvcnQgKmNwb3J0
X2Rlc2M7CiAJc3RydWN0IGdiX2Nvbm5lY3Rpb24gKmNvbm5lY3Rpb247CiAJc3RydWN0IGdiX3Zp
YnJhdG9yX2RldmljZSAqdmliOwotCXN0cnVjdCBkZXZpY2UgKmRldjsKIAlpbnQgcmV0dmFsOwog
CiAJaWYgKGJ1bmRsZS0+bnVtX2Nwb3J0cyAhPSAxKQpAQCAtMTkyLDI2ICsxMzIsNiBAQCBzdGF0
aWMgaW50IGdiX3ZpYnJhdG9yX3Byb2JlKHN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZSwKIAlpZiAo
cmV0dmFsKQogCQlnb3RvIGVycl9jb25uZWN0aW9uX2Rlc3Ryb3k7CiAKLQkvKgotCSAqIEZvciBu
b3cgd2UgY3JlYXRlIGEgZGV2aWNlIGluIHN5c2ZzIGZvciB0aGUgdmlicmF0b3IsIGJ1dCBvZGRz
IGFyZQotCSAqIHRoZXJlIGlzIGEgInJlYWwiIGRldmljZSBzb21ld2hlcmUgaW4gdGhlIGtlcm5l
bCBmb3IgdGhpcywgYnV0IEkKLQkgKiBjYW4ndCBmaW5kIGl0IGF0IHRoZSBtb21lbnQuLi4KLQkg
Ki8KLQl2aWItPm1pbm9yID0gaWRhX3NpbXBsZV9nZXQoJm1pbm9ycywgMCwgMCwgR0ZQX0tFUk5F
TCk7Ci0JaWYgKHZpYi0+bWlub3IgPCAwKSB7Ci0JCXJldHZhbCA9IHZpYi0+bWlub3I7Ci0JCWdv
dG8gZXJyX2Nvbm5lY3Rpb25fZGlzYWJsZTsKLQl9Ci0JZGV2ID0gZGV2aWNlX2NyZWF0ZSgmdmli
cmF0b3JfY2xhc3MsICZidW5kbGUtPmRldiwKLQkJCSAgICBNS0RFVigwLCAwKSwgdmliLCAidmli
cmF0b3IlZCIsIHZpYi0+bWlub3IpOwotCWlmIChJU19FUlIoZGV2KSkgewotCQlyZXR2YWwgPSAt
RUlOVkFMOwotCQlnb3RvIGVycl9pZGFfcmVtb3ZlOwotCX0KLQl2aWItPmRldiA9IGRldjsKLQot
CUlOSVRfREVMQVlFRF9XT1JLKCZ2aWItPmRlbGF5ZWRfd29yaywgZ2JfdmlicmF0b3Jfd29ya2Vy
KTsKLQogCUlOSVRfV09SSygmdmliLT5wbGF5X3dvcmssIGdiX3ZpYnJhdG9yX3BsYXlfd29yayk7
CiAJdmliLT5pbnB1dC0+bmFtZSA9ICJncmV5YnVzLXZpYnJhdG9yIjsKIAl2aWItPmlucHV0LT5j
bG9zZSA9IGdiX3ZpYnJhdG9yX2Nsb3NlOwpAQCAtMjI0LDE2ICsxNDQsMTIgQEAgc3RhdGljIGlu
dCBnYl92aWJyYXRvcl9wcm9iZShzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGUsCiAJcmV0dmFsID0g
aW5wdXRfZmZfY3JlYXRlX21lbWxlc3ModmliLT5pbnB1dCwgTlVMTCwKIAkJCQkJIGdiX3ZpYnJh
dG9yX3BsYXlfZWZmZWN0KTsKIAlpZiAocmV0dmFsKQotCQlnb3RvIGVycl9kZXZpY2VfcmVtb3Zl
OworCQlnb3RvIGVycl9jb25uZWN0aW9uX2Rpc2FibGU7CiAKIAlnYl9wbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChidW5kbGUpOwogCiAJcmV0dXJuIDA7CiAKLWVycl9kZXZpY2VfcmVtb3ZlOgot
CWRldmljZV91bnJlZ2lzdGVyKHZpYi0+ZGV2KTsKLWVycl9pZGFfcmVtb3ZlOgotCWlkYV9zaW1w
bGVfcmVtb3ZlKCZtaW5vcnMsIHZpYi0+bWlub3IpOwogZXJyX2Nvbm5lY3Rpb25fZGlzYWJsZToK
IAlnYl9jb25uZWN0aW9uX2Rpc2FibGUoY29ubmVjdGlvbik7CiBlcnJfY29ubmVjdGlvbl9kZXN0
cm95OgpAQCAtMjUzLDExICsxNjksOCBAQCBzdGF0aWMgdm9pZCBnYl92aWJyYXRvcl9kaXNjb25u
ZWN0KHN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZSkKIAlpZiAocmV0KQogCQlnYl9wbV9ydW50aW1l
X2dldF9ub3Jlc3VtZShidW5kbGUpOwogCi0JaWYgKGNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygm
dmliLT5kZWxheWVkX3dvcmspKQotCQl0dXJuX29mZih2aWIpOworCXR1cm5fb2ZmKHZpYik7CiAK
LQlkZXZpY2VfdW5yZWdpc3Rlcih2aWItPmRldik7Ci0JaWRhX3NpbXBsZV9yZW1vdmUoJm1pbm9y
cywgdmliLT5taW5vcik7CiAJZ2JfY29ubmVjdGlvbl9kaXNhYmxlKHZpYi0+Y29ubmVjdGlvbik7
CiAJZ2JfY29ubmVjdGlvbl9kZXN0cm95KHZpYi0+Y29ubmVjdGlvbik7CiAJa2ZyZWUodmliKTsK
QEAgLTI3NSwzNCArMTg4LDYgQEAgc3RhdGljIHN0cnVjdCBncmV5YnVzX2RyaXZlciBnYl92aWJy
YXRvcl9kcml2ZXIgPSB7CiAJLmRpc2Nvbm5lY3QJPSBnYl92aWJyYXRvcl9kaXNjb25uZWN0LAog
CS5pZF90YWJsZQk9IGdiX3ZpYnJhdG9yX2lkX3RhYmxlLAogfTsKLQotc3RhdGljIF9faW5pdCBp
bnQgZ2JfdmlicmF0b3JfaW5pdCh2b2lkKQotewotCWludCByZXR2YWw7Ci0KLQlyZXR2YWwgPSBj
bGFzc19yZWdpc3RlcigmdmlicmF0b3JfY2xhc3MpOwotCWlmIChyZXR2YWwpCi0JCXJldHVybiBy
ZXR2YWw7Ci0KLQlyZXR2YWwgPSBncmV5YnVzX3JlZ2lzdGVyKCZnYl92aWJyYXRvcl9kcml2ZXIp
OwotCWlmIChyZXR2YWwpCi0JCWdvdG8gZXJyX2NsYXNzX3VucmVnaXN0ZXI7Ci0KLQlyZXR1cm4g
MDsKLQotZXJyX2NsYXNzX3VucmVnaXN0ZXI6Ci0JY2xhc3NfdW5yZWdpc3RlcigmdmlicmF0b3Jf
Y2xhc3MpOwotCi0JcmV0dXJuIHJldHZhbDsKLX0KLW1vZHVsZV9pbml0KGdiX3ZpYnJhdG9yX2lu
aXQpOwotCi1zdGF0aWMgX19leGl0IHZvaWQgZ2JfdmlicmF0b3JfZXhpdCh2b2lkKQotewotCWdy
ZXlidXNfZGVyZWdpc3RlcigmZ2JfdmlicmF0b3JfZHJpdmVyKTsKLQljbGFzc191bnJlZ2lzdGVy
KCZ2aWJyYXRvcl9jbGFzcyk7Ci0JaWRhX2Rlc3Ryb3koJm1pbm9ycyk7Ci19Ci1tb2R1bGVfZXhp
dChnYl92aWJyYXRvcl9leGl0KTsKK21vZHVsZV9ncmV5YnVzX2RyaXZlcihnYl92aWJyYXRvcl9k
cml2ZXIpOwogCiBNT0RVTEVfTElDRU5TRSgiR1BMIHYyIik7Ci0tIAoyLjMwLjAKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmdyZXlidXMtZGV2IG1haWxp
bmcgbGlzdApncmV5YnVzLWRldkBsaXN0cy5saW5hcm8ub3JnCmh0dHBzOi8vbGlzdHMubGluYXJv
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2dyZXlidXMtZGV2Cg==
