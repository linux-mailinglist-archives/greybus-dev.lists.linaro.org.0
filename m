Return-Path: <greybus-dev-bounces@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 38C041EB51D
	for <lists+greybus-dev@lfdr.de>; Tue,  2 Jun 2020 07:24:40 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 5DA6861915
	for <lists+greybus-dev@lfdr.de>; Tue,  2 Jun 2020 05:24:39 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 4EF6D6192C; Tue,  2 Jun 2020 05:24:39 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,DKIM_ADSP_CUSTOM_MED,
	FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE,RCVD_IN_MSPIKE_H3,
	RCVD_IN_MSPIKE_WL,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id BB870619D0;
	Tue,  2 Jun 2020 05:23:19 +0000 (UTC)
X-Original-To: greybus-dev@lists.linaro.org
Delivered-To: greybus-dev@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 13A1E618F4
 for <greybus-dev@lists.linaro.org>; Tue,  2 Jun 2020 05:22:52 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 0686361915; Tue,  2 Jun 2020 05:22:52 +0000 (UTC)
Received: from mail-pf1-f196.google.com (mail-pf1-f196.google.com
 [209.85.210.196])
 by lists.linaro.org (Postfix) with ESMTPS id A2C2E618F4
 for <greybus-dev@lists.linaro.org>; Tue,  2 Jun 2020 05:22:20 +0000 (UTC)
Received: by mail-pf1-f196.google.com with SMTP id d66so4522644pfd.6
 for <greybus-dev@lists.linaro.org>; Mon, 01 Jun 2020 22:22:20 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=WY3St8+SWf4wEhHBKrMkn8Xlor+pIsruZlmu3rGaWJM=;
 b=GMai0McSgnaNNprpnahuAsHRqbiSZFhyOm25xpFPUccorJiNdmd0XjlbugziSTsmVS
 xbjJPIIuuz7evV3fRv8+59nW1OlrJHx2m0kmChylXY6tcXQag17FDLCAcxwRo7SCP9wS
 dbVcIBBtdNgoqowdSZ7JtYLSlDPHP4hHoZN3NNynA1jnjLTjxFP67PYQYnOmUw8UclM5
 92/kRUxPZ0hqFHxZ0efX70R+aNGvq1APfiPLqvJ8ShPteoNmjTIjogvBHcCz5tZMhhIl
 cQZkZuG0rVTCCC+Se9jsg4ZshTBwKxq588hvxpKO98Du2M9/EXUoRk9irTNhESbJz2fb
 4DCw==
X-Gm-Message-State: AOAM530hLshBYXUSoKAnFJRJQ0Xvc8rsSFX4FxxgwYdfKfQAEyLTN4/i
 IFaPEJJTmbXd/TpeNZJW1P4=
X-Google-Smtp-Source: ABdhPJw/uZAxw/xGEynFE19YqUSgqA6mgBmdHzhCB//p+E/r9QBgWC0X99sSYkRQWUWKWqRRBHGJzQ==
X-Received: by 2002:a63:3347:: with SMTP id z68mr23499297pgz.61.1591075339674; 
 Mon, 01 Jun 2020 22:22:19 -0700 (PDT)
Received: from cvds-vagarw7.iind.intel.com ([192.55.55.41])
 by smtp.googlemail.com with ESMTPSA id f18sm1004764pga.75.2020.06.01.22.22.09
 (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
 Mon, 01 Jun 2020 22:22:19 -0700 (PDT)
From: Vaibhav Agarwal <vaibhav.sr@gmail.com>
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Alex Elder <elder@kernel.org>, Johan Hovold <johan@kernel.org>,
 Mark Greer <mgreer@animalcreek.com>, Takashi Iwai <tiwai@suse.com>,
 Jaroslav Kysela <perex@perex.cz>, Mark Brown <broonie@kernel.org>,
 Liam Girdwood <lgirdwood@gmail.com>
Date: Tue,  2 Jun 2020 10:51:13 +0530
Message-Id: <6131fec4cf9e18dbf70fa7f992de9d588299ee18.1591040859.git.vaibhav.sr@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <cover.1591040859.git.vaibhav.sr@gmail.com>
References: <cover.1591040859.git.vaibhav.sr@gmail.com>
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: devel@driverdev.osuosl.org, alsa-devel@alsa-project.org,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 linux-kernel@vger.kernel.org, greybus-dev@lists.linaro.org
Subject: [greybus-dev] [RESEND PATCH v1 4/6] staging: greybus: audio:
	Resolve compilation error in topology parser
X-BeenThere: greybus-dev@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/greybus-dev/>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: greybus-dev-bounces@lists.linaro.org
Sender: "greybus-dev" <greybus-dev-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

Rml4IGNvbXBpbGF0aW9uIGVycm9ycyBmb3IgR0IgQXVkaW8gdG9wb2xvZ3kgcGFyc2VyIGNvZGUg
d2l0aCByZWNlbnQKa2VybmVsIHZlcnNpb25zLgoKU2lnbmVkLW9mZi1ieTogVmFpYmhhdiBBZ2Fy
d2FsIDx2YWliaGF2LnNyQGdtYWlsLmNvbT4KLS0tCiBkcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9h
dWRpb190b3BvbG9neS5jIHwgMTMwICsrKysrKysrKysrLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwgNjkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYyBiL2RyaXZlcnMvc3RhZ2luZy9n
cmV5YnVzL2F1ZGlvX3RvcG9sb2d5LmMKaW5kZXggNGFjMzBhY2NmMjI2Li43ZDVlODczNDFhNWMg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL2F1ZGlvX3RvcG9sb2d5LmMKKysr
IGIvZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYwpAQCAtNSw4ICs1LDgg
QEAKICAqIENvcHlyaWdodCAyMDE1LTIwMTYgTGluYXJvIEx0ZC4KICAqLwogCisjaW5jbHVkZSA8
bGludXgvZ3JleWJ1cy5oPgogI2luY2x1ZGUgImF1ZGlvX2NvZGVjLmgiCi0jaW5jbHVkZSAiZ3Jl
eWJ1c19wcm90b2NvbHMuaCIKIAogI2RlZmluZSBHQkFVRElPX0lOVkFMSURfSUQJMHhGRgogCkBA
IC0xNjUsMTUgKzE2NSwxNSBAQCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfY3RsX2luZm8oc3Ry
dWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0
YTsKIAlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5mbyAqaW5mbzsKIAlzdHJ1Y3QgZ2JhdWRp
b19tb2R1bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHNu
ZF9rY29udHJvbF9jaGlwKGtjb250cm9sKTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpn
YmNvZGVjID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7CisJc3RydWN0IHNuZF9z
b2NfY29tcG9uZW50ICpjb21wID0gc25kX3NvY19rY29udHJvbF9jb21wb25lbnQoa2NvbnRyb2wp
OworCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb21wb25lbnRfZ2V0
X2RydmRhdGEoY29tcCk7CiAKLQlkZXZfZGJnKGNvZGVjLT5kZXYsICJFbnRlcmVkICVzOiVzXG4i
LCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOworCWRldl9kYmcoY29tcC0+ZGV2LCAiRW50
ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKIAlkYXRhID0gKHN0
cnVjdCBnYmF1ZGlvX2N0bF9wdnQgKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKIAlpbmZvID0g
KHN0cnVjdCBnYl9hdWRpb19jdGxfZWxlbV9pbmZvICopZGF0YS0+aW5mbzsKIAogCWlmICghaW5m
bykgewotCQlkZXZfZXJyKGNvZGVjLT5kZXYsICJOVUxMIGluZm8gZm9yICVzXG4iLCB1aW5mby0+
aWQubmFtZSk7CisJCWRldl9lcnIoY29tcC0+ZGV2LCAiTlVMTCBpbmZvIGZvciAlc1xuIiwgdWlu
Zm8tPmlkLm5hbWUpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKQEAgLTE5Myw3ICsxOTMsNyBA
QCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfY3RsX2luZm8oc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJCXVpbmZvLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1zID0gbWF4OwogCQlpZiAo
dWluZm8tPnZhbHVlLmVudW1lcmF0ZWQuaXRlbSA+IG1heCAtIDEpCiAJCQl1aW5mby0+dmFsdWUu
ZW51bWVyYXRlZC5pdGVtID0gbWF4IC0gMTsKLQkJbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2Jj
b2RlYywga2NvbnRyb2wtPmlkLm5hbWUpOworCQltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYiwg
a2NvbnRyb2wtPmlkLm5hbWUpOwogCQlpZiAoIW1vZHVsZSkKIAkJCXJldHVybiAtRUlOVkFMOwog
CQluYW1lID0gZ2JhdWRpb19tYXBfY29udHJvbGlkKG1vZHVsZSwgZGF0YS0+Y3RsX2lkLApAQCAt
MjAxLDcgKzIwMSw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxfaW5mbyhzdHJ1Y3Qg
c25kX2tjb250cm9sICprY29udHJvbCwKIAkJc3RybGNweSh1aW5mby0+dmFsdWUuZW51bWVyYXRl
ZC5uYW1lLCBuYW1lLCBOQU1FX1NJWkUpOwogCQlicmVhazsKIAlkZWZhdWx0OgotCQlkZXZfZXJy
KGNvZGVjLT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczprY29udHJvbFxuIiwKKwkJZGV2
X2Vycihjb21wLT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczprY29udHJvbFxuIiwKIAkJ
CWluZm8tPnR5cGUsIGtjb250cm9sLT5pZC5uYW1lKTsKIAkJYnJlYWs7CiAJfQpAQCAtMjE2LDEx
ICsyMTYsMTEgQEAgc3RhdGljIGludCBnYmNvZGVjX21peGVyX2N0bF9nZXQoc3RydWN0IHNuZF9r
Y29udHJvbCAqa2NvbnRyb2wsCiAJc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0YTsKIAlzdHJ1
Y3QgZ2JfYXVkaW9fY3RsX2VsZW1fdmFsdWUgZ2J2YWx1ZTsKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1
bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHNuZF9rY29u
dHJvbF9jaGlwKGtjb250cm9sKTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNu
ZF9zb2NfY29kZWNfZ2V0X2RydmRhdGEoY29kZWMpOworCXN0cnVjdCBzbmRfc29jX2NvbXBvbmVu
dCAqY29tcCA9IHNuZF9zb2Nfa2NvbnRyb2xfY29tcG9uZW50KGtjb250cm9sKTsKKwlzdHJ1Y3Qg
Z2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29tcG9uZW50X2dldF9kcnZkYXRhKGNv
bXApOwogCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZTsKIAotCWRldl9kYmcoY29kZWMtPmRldiwg
IkVudGVyZWQgJXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CisJZGV2X2Ri
Zyhjb21wLT5kZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5h
bWUpOwogCW1vZHVsZSA9IGZpbmRfZ2JfbW9kdWxlKGdiLCBrY29udHJvbC0+aWQubmFtZSk7CiAJ
aWYgKCFtb2R1bGUpCiAJCXJldHVybiAtRUlOVkFMOwpAQCAtMjM5LDcgKzIzOSw3IEBAIHN0YXRp
YyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9s
LAogCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7CiAKIAlpZiAocmV0KSB7
Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAl
c1xuIiwgcmV0LAorCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvbXAtPmRldiwgIiVkOkVycm9yIGlu
ICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUp
OwogCQlyZXR1cm4gcmV0OwogCX0KQEAgLTI2Miw3ICsyNjIsNyBAQCBzdGF0aWMgaW50IGdiY29k
ZWNfbWl4ZXJfY3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAkJCQlsZTMy
X3RvX2NwdShnYnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVsxXSk7CiAJCWJyZWFrOwogCWRl
ZmF1bHQ6Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkludmFsaWQgdHlwZTogJWQgZm9yICVzOmtj
b250cm9sXG4iLAorCQlkZXZfZXJyKGNvbXAtPmRldiwgIkludmFsaWQgdHlwZTogJWQgZm9yICVz
Omtjb250cm9sXG4iLAogCQkJaW5mby0+dHlwZSwga2NvbnRyb2wtPmlkLm5hbWUpOwogCQlyZXQg
PSAtRUlOVkFMOwogCQlicmVhazsKQEAgLTI3OCwxMSArMjc4LDExIEBAIHN0YXRpYyBpbnQgZ2Jj
b2RlY19taXhlcl9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCXN0cnVj
dCBnYmF1ZGlvX2N0bF9wdnQgKmRhdGE7CiAJc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX3ZhbHVl
IGdidmFsdWU7CiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKLQlzdHJ1Y3Qg
c25kX3NvY19jb2RlYyAqY29kZWMgPSBzbmRfa2NvbnRyb2xfY2hpcChrY29udHJvbCk7Ci0Jc3Ry
dWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBzbmRfc29jX2NvZGVjX2dldF9kcnZkYXRhKGNv
ZGVjKTsKKwlzdHJ1Y3Qgc25kX3NvY19jb21wb25lbnQgKmNvbXAgPSBzbmRfc29jX2tjb250cm9s
X2NvbXBvbmVudChrY29udHJvbCk7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBz
bmRfc29jX2NvbXBvbmVudF9nZXRfZHJ2ZGF0YShjb21wKTsKIAlzdHJ1Y3QgZ2JfYnVuZGxlICpi
dW5kbGU7CiAKLQlkZXZfZGJnKGNvZGVjLT5kZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNf
Xywga2NvbnRyb2wtPmlkLm5hbWUpOworCWRldl9kYmcoY29tcC0+ZGV2LCAiRW50ZXJlZCAlczol
c1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKIAltb2R1bGUgPSBmaW5kX2diX21v
ZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwogCWlmICghbW9kdWxlKQogCQlyZXR1cm4gLUVJ
TlZBTDsKQEAgLTMwOSw3ICszMDksNyBAQCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfY3RsX3B1
dChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAkJCQljcHVfdG9fbGUzMih1Y29udHJv
bC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzFdKTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKLQkJZGV2
X2Vycihjb2RlYy0+ZGV2LCAiSW52YWxpZCB0eXBlOiAlZCBmb3IgJXM6a2NvbnRyb2xcbiIsCisJ
CWRldl9lcnIoY29tcC0+ZGV2LCAiSW52YWxpZCB0eXBlOiAlZCBmb3IgJXM6a2NvbnRyb2xcbiIs
CiAJCQlpbmZvLT50eXBlLCBrY29udHJvbC0+aWQubmFtZSk7CiAJCXJldCA9IC1FSU5WQUw7CiAJ
CWJyZWFrOwpAQCAtMzI4LDcgKzMyOCw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxf
cHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCWdiX3BtX3J1bnRpbWVfcHV0X2F1
dG9zdXNwZW5kKGJ1bmRsZSk7CiAKIAlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQo
Y29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAorCQlkZXZfZXJyX3Jh
dGVsaW1pdGVkKGNvbXAtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAogCQkJ
CSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwogCX0KIApAQCAtMzUyLDExICszNTIs
NyBAQCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfaW5mbyhzdHJ1Y3Qgc25kX2tj
b250cm9sICprY29udHJvbCwKIAlpbnQgcGxhdGZvcm1fbWF4LCBwbGF0Zm9ybV9taW47CiAJc3Ry
dWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0YTsKIAlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5m
byAqaW5mbzsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldF9saXN0ICp3bGlzdCA9IHNuZF9r
Y29udHJvbF9jaGlwKGtjb250cm9sKTsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqd2lk
Z2V0ID0gd2xpc3QtPndpZGdldHNbMF07Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0g
d2lkZ2V0LT5jb2RlYzsKIAotCWRldl9kYmcoY29kZWMtPmRldiwgIkVudGVyZWQgJXM6JXNcbiIs
IF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CiAJZGF0YSA9IChzdHJ1Y3QgZ2JhdWRpb19j
dGxfcHZ0ICopa2NvbnRyb2wtPnByaXZhdGVfdmFsdWU7CiAJaW5mbyA9IChzdHJ1Y3QgZ2JfYXVk
aW9fY3RsX2VsZW1faW5mbyAqKWRhdGEtPmluZm87CiAKQEAgLTM4NywxMSArMzgzLDExIEBAIHN0
YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9nZXQoc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKIAlzdHJ1Y3Qg
c25kX3NvY19kYXBtX3dpZGdldF9saXN0ICp3bGlzdCA9IHNuZF9rY29udHJvbF9jaGlwKGtjb250
cm9sKTsKIAlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqd2lkZ2V0ID0gd2xpc3QtPndpZGdl
dHNbMF07Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lkZ2V0LT5jb2RlYzsKLQlz
dHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2RydmRhdGEo
Y29kZWMpOworCXN0cnVjdCBkZXZpY2UgKmNvZGVjX2RldiA9IHdpZGdldC0+ZGFwbS0+ZGV2Owor
CXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gZGV2X2dldF9kcnZkYXRhKGNvZGVjX2Rl
dik7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwogCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAi
RW50ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKKwlkZXZfZGJn
KGNvZGVjX2RldiwgIkVudGVyZWQgJXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFt
ZSk7CiAJbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKIAlp
ZiAoIW1vZHVsZSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC00MTUsNyArNDExLDcgQEAgc3RhdGlj
IGludCBnYmNvZGVjX21peGVyX2RhcG1fY3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29u
dHJvbCwKIAlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChidW5kbGUpOwogCiAJaWYgKHJl
dCkgewotCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsICIlZDpFcnJvciBpbiAlcyBm
b3IgJXNcbiIsIHJldCwKKwkJZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlY19kZXYsICIlZDpFcnJv
ciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKIAkJCQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5u
YW1lKTsKIAkJcmV0dXJuIHJldDsKIAl9CkBAIC00MjksNyArNDI1LDcgQEAgc3RhdGljIGludCBn
YmNvZGVjX21peGVyX2RhcG1fY3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwK
IHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJv
bCAqa2NvbnRyb2wsCiAJCQkJICAgICAgc3RydWN0IHNuZF9jdGxfZWxlbV92YWx1ZSAqdWNvbnRy
b2wpCiB7Ci0JaW50IHJldCwgd2ksIG1heCwgY29ubmVjdDsKKwlpbnQgcmV0LCB3aSwgbWF4Owog
CXVuc2lnbmVkIGludCBtYXNrLCB2YWw7CiAJc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8g
KmluZm87CiAJc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0YTsKQEAgLTQzNywxMSArNDMzLDEy
IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29u
dHJvbCAqa2NvbnRyb2wsCiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKIAlz
dHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldF9saXN0ICp3bGlzdCA9IHNuZF9rY29udHJvbF9jaGlw
KGtjb250cm9sKTsKIAlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqd2lkZ2V0ID0gd2xpc3Qt
PndpZGdldHNbMF07Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lkZ2V0LT5jb2Rl
YzsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2Ry
dmRhdGEoY29kZWMpOworCXN0cnVjdCBkZXZpY2UgKmNvZGVjX2RldiA9IHdpZGdldC0+ZGFwbS0+
ZGV2OworCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gZGV2X2dldF9kcnZkYXRhKGNv
ZGVjX2Rldik7CisJc3RydWN0IHNuZF9zb2NfZGFwbV91cGRhdGUgKnVwZGF0ZSA9IE5VTEw7CiAJ
c3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwogCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAiRW50ZXJl
ZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKKwlkZXZfZGJnKGNvZGVj
X2RldiwgIkVudGVyZWQgJXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CiAJ
bW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKIAlpZiAoIW1v
ZHVsZSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC00NTgsMTcgKzQ1NSwxMyBAQCBzdGF0aWMgaW50
IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9s
LAogCW1heCA9IGxlMzJfdG9fY3B1KGluZm8tPnZhbHVlLmludGVnZXIubWF4KTsKIAltYXNrID0g
KDEgPDwgZmxzKG1heCkpIC0gMTsKIAl2YWwgPSB1Y29udHJvbC0+dmFsdWUuaW50ZWdlci52YWx1
ZVswXSAmIG1hc2s7Ci0JY29ubmVjdCA9ICEhdmFsOwogCiAJLyogdXBkYXRlIHVjb250cm9sICov
CiAJaWYgKGdidmFsdWUudmFsdWUuaW50ZWdlcl92YWx1ZVswXSAhPSB2YWwpIHsKIAkJZm9yICh3
aSA9IDA7IHdpIDwgd2xpc3QtPm51bV93aWRnZXRzOyB3aSsrKSB7CiAJCQl3aWRnZXQgPSB3bGlz
dC0+d2lkZ2V0c1t3aV07Ci0KLQkJCXdpZGdldC0+dmFsdWUgPSB2YWw7Ci0JCQl3aWRnZXQtPmRh
cG0tPnVwZGF0ZSA9IE5VTEw7Ci0JCQlzbmRfc29jX2RhcG1fbWl4ZXJfdXBkYXRlX3Bvd2VyKHdp
ZGdldCwga2NvbnRyb2wsCi0JCQkJCQkJY29ubmVjdCk7CisJCQlzbmRfc29jX2RhcG1fbWl4ZXJf
dXBkYXRlX3Bvd2VyKHdpZGdldC0+ZGFwbSwga2NvbnRyb2wsCisJCQkJCQkJdmFsLCB1cGRhdGUp
OwogCQl9CiAJCWdidmFsdWUudmFsdWUuaW50ZWdlcl92YWx1ZVswXSA9CiAJCQljcHVfdG9fbGUz
Mih1Y29udHJvbC0+dmFsdWUuaW50ZWdlci52YWx1ZVswXSk7CkBAIC00ODQsNyArNDc3LDcgQEAg
c3RhdGljIGludCBnYmNvZGVjX21peGVyX2RhcG1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250cm9s
ICprY29udHJvbCwKIAkJZ2JfcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKIAog
CQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsCisJCQlkZXZf
ZXJyX3JhdGVsaW1pdGVkKGNvZGVjX2RldiwKIAkJCQkJICAgICIlZDpFcnJvciBpbiAlcyBmb3Ig
JXNcbiIsIHJldCwKIAkJCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CiAJCQly
ZXR1cm4gcmV0OwpAQCAtNTUzLDExICs1NDYsMTEgQEAgc3RhdGljIGludCBnYmNvZGVjX2VudW1f
Y3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAkJCQlzdHJ1Y3Qgc25kX2N0
bF9lbGVtX3ZhbHVlICp1Y29udHJvbCkKIHsKIAlpbnQgcmV0LCBjdGxfaWQ7Ci0Jc3RydWN0IHNu
ZF9zb2NfY29kZWMgKmNvZGVjID0gc25kX2tjb250cm9sX2NoaXAoa2NvbnRyb2wpOworCXN0cnVj
dCBzbmRfc29jX2NvbXBvbmVudCAqY29tcCA9IHNuZF9zb2Nfa2NvbnRyb2xfY29tcG9uZW50KGtj
b250cm9sKTsKKwlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29tcG9u
ZW50X2dldF9kcnZkYXRhKGNvbXApOwogCXN0cnVjdCBzb2NfZW51bSAqZSA9IChzdHJ1Y3Qgc29j
X2VudW0gKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKIAlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2Vs
ZW1fdmFsdWUgZ2J2YWx1ZTsKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwot
CXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0
YShjb2RlYyk7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwogCiAJbW9kdWxlID0gZmluZF9n
Yl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKQEAgLTU4MCw3ICs1NzMsNyBAQCBzdGF0
aWMgaW50IGdiY29kZWNfZW51bV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9s
LAogCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7CiAKIAlpZiAocmV0KSB7
Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAl
c1xuIiwgcmV0LAorCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvbXAtPmRldiwgIiVkOkVycm9yIGlu
ICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUp
OwogCQlyZXR1cm4gcmV0OwogCX0KQEAgLTU5OCwxMSArNTkxLDExIEBAIHN0YXRpYyBpbnQgZ2Jj
b2RlY19lbnVtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJCQkJc3Ry
dWN0IHNuZF9jdGxfZWxlbV92YWx1ZSAqdWNvbnRyb2wpCiB7CiAJaW50IHJldCwgY3RsX2lkOwot
CXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHNuZF9rY29udHJvbF9jaGlwKGtjb250cm9s
KTsKKwlzdHJ1Y3Qgc25kX3NvY19jb21wb25lbnQgKmNvbXAgPSBzbmRfc29jX2tjb250cm9sX2Nv
bXBvbmVudChrY29udHJvbCk7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBzbmRf
c29jX2NvbXBvbmVudF9nZXRfZHJ2ZGF0YShjb21wKTsKIAlzdHJ1Y3Qgc29jX2VudW0gKmUgPSAo
c3RydWN0IHNvY19lbnVtICopa2NvbnRyb2wtPnByaXZhdGVfdmFsdWU7CiAJc3RydWN0IGdiX2F1
ZGlvX2N0bF9lbGVtX3ZhbHVlIGdidmFsdWU7CiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8g
Km1vZHVsZTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNf
Z2V0X2RydmRhdGEoY29kZWMpOwogCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZTsKIAogCW1vZHVs
ZSA9IGZpbmRfZ2JfbW9kdWxlKGdiLCBrY29udHJvbC0+aWQubmFtZSk7CkBAIC02MTMsMTMgKzYw
NiwxMyBAQCBzdGF0aWMgaW50IGdiY29kZWNfZW51bV9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRy
b2wgKmtjb250cm9sLAogCWlmIChjdGxfaWQgPCAwKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWlm
ICh1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzBdID4gZS0+bWF4IC0gMSkKKwlpZiAo
dWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVswXSA+IGUtPml0ZW1zIC0gMSkKIAkJcmV0
dXJuIC1FSU5WQUw7CiAJZ2J2YWx1ZS52YWx1ZS5lbnVtZXJhdGVkX2l0ZW1bMF0gPQogCQljcHVf
dG9fbGUzMih1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzBdKTsKIAogCWlmIChlLT5z
aGlmdF9sICE9IGUtPnNoaWZ0X3IpIHsKLQkJaWYgKHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVk
Lml0ZW1bMV0gPiBlLT5tYXggLSAxKQorCQlpZiAodWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQu
aXRlbVsxXSA+IGUtPml0ZW1zIC0gMSkKIAkJCXJldHVybiAtRUlOVkFMOwogCQlnYnZhbHVlLnZh
bHVlLmVudW1lcmF0ZWRfaXRlbVsxXSA9CiAJCQljcHVfdG9fbGUzMih1Y29udHJvbC0+dmFsdWUu
ZW51bWVyYXRlZC5pdGVtWzFdKTsKQEAgLTYzNyw4ICs2MzAsOCBAQCBzdGF0aWMgaW50IGdiY29k
ZWNfZW51bV9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCWdiX3BtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7CiAKIAlpZiAocmV0KSB7Ci0JCWRldl9lcnJf
cmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAot
CQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOworCQlkZXZfZXJyX3JhdGVsaW1p
dGVkKGNvbXAtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwKKwkJCQkgICAgcmV0LCBf
X2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwogCX0KIAogCXJldHVybiByZXQ7CkBAIC02NTks
MTMgKzY1MiwxMyBAQCBzdGF0aWMgaW50IGdiYXVkaW9fdHBsZ19jcmVhdGVfZW51bV9rY3RsKHN0
cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICpnYiwKIAlnYl9lbnVtID0gJmN0bC0+aW5mby52YWx1
ZS5lbnVtZXJhdGVkOwogCiAJLyogc2luY2UgY291bnQ9MSwgYW5kIHJlZyBpcyBkdW1teSAqLwot
CWdiZS0+bWF4ID0gbGUzMl90b19jcHUoZ2JfZW51bS0+aXRlbXMpOworCWdiZS0+aXRlbXMgPSBs
ZTMyX3RvX2NwdShnYl9lbnVtLT5pdGVtcyk7CiAJZ2JlLT50ZXh0cyA9IGdiX2dlbmVyYXRlX2Vu
dW1fc3RyaW5ncyhnYiwgZ2JfZW51bSk7CiAKIAkvKiBkZWJ1ZyBlbnVtIGluZm8gKi8KLQlkZXZf
ZGJnKGdiLT5kZXYsICJNYXg6JWQsIG5hbWVfbGVuZ3RoOiVkXG4iLCBnYmUtPm1heCwKKwlkZXZf
ZGJnKGdiLT5kZXYsICJNYXg6JWQsIG5hbWVfbGVuZ3RoOiVkXG4iLCBnYmUtPml0ZW1zLAogCQls
ZTE2X3RvX2NwdShnYl9lbnVtLT5uYW1lc19sZW5ndGgpKTsKLQlmb3IgKGkgPSAwOyBpIDwgZ2Jl
LT5tYXg7IGkrKykKKwlmb3IgKGkgPSAwOyBpIDwgZ2JlLT5pdGVtczsgaSsrKQogCQlkZXZfZGJn
KGdiLT5kZXYsICJzcmNbJWRdOiAlc1xuIiwgaSwgZ2JlLT50ZXh0c1tpXSk7CiAKIAkqa2N0bCA9
IChzdHJ1Y3Qgc25kX2tjb250cm9sX25ldykKQEAgLTcyMCw4ICs3MTMsOCBAQCBzdGF0aWMgaW50
IGdiY29kZWNfZW51bV9kYXBtX2N0bF9nZXQoc3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2ws
CiAJc3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQgKndpZGdldCA9IHdsaXN0LT53aWRnZXRzWzBd
OwogCXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7CiAJc3RydWN0IGdiX2F1ZGlv
X2N0bF9lbGVtX3ZhbHVlIGdidmFsdWU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0g
d2lkZ2V0LT5jb2RlYzsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2Nf
Y29kZWNfZ2V0X2RydmRhdGEoY29kZWMpOworCXN0cnVjdCBkZXZpY2UgKmNvZGVjX2RldiA9IHdp
ZGdldC0+ZGFwbS0+ZGV2OworCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gZGV2X2dl
dF9kcnZkYXRhKGNvZGVjX2Rldik7CiAJc3RydWN0IHNvY19lbnVtICplID0gKHN0cnVjdCBzb2Nf
ZW51bSAqKWtjb250cm9sLT5wcml2YXRlX3ZhbHVlOwogCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRs
ZTsKIApAQCAtNzQ1LDcgKzczOCw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1fY3Rs
X2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAlnYl9wbV9ydW50aW1lX3B1dF9h
dXRvc3VzcGVuZChidW5kbGUpOwogCiAJaWYgKHJldCkgewotCQlkZXZfZXJyX3JhdGVsaW1pdGVk
KGNvZGVjLT5kZXYsICIlZDpFcnJvciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKKwkJZGV2X2Vycl9y
YXRlbGltaXRlZChjb2RlY19kZXYsICIlZDpFcnJvciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKIAkJ
CQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKIAkJcmV0dXJuIHJldDsKIAl9CkBA
IC03NjgsMTIgKzc2MSwxMyBAQCBzdGF0aWMgaW50IGdiY29kZWNfZW51bV9kYXBtX2N0bF9wdXQo
c3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJc3RydWN0IHNuZF9zb2NfZGFwbV93aWRn
ZXQgKndpZGdldCA9IHdsaXN0LT53aWRnZXRzWzBdOwogCXN0cnVjdCBnYl9hdWRpb19jdGxfZWxl
bV92YWx1ZSBnYnZhbHVlOwogCXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7Ci0J
c3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lkZ2V0LT5jb2RlYzsKLQlzdHJ1Y3QgZ2Jh
dWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2RydmRhdGEoY29kZWMpOwor
CXN0cnVjdCBkZXZpY2UgKmNvZGVjX2RldiA9IHdpZGdldC0+ZGFwbS0+ZGV2OworCXN0cnVjdCBn
YmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gZGV2X2dldF9kcnZkYXRhKGNvZGVjX2Rldik7CiAJc3Ry
dWN0IHNvY19lbnVtICplID0gKHN0cnVjdCBzb2NfZW51bSAqKWtjb250cm9sLT5wcml2YXRlX3Zh
bHVlOwogCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZTsKKwlzdHJ1Y3Qgc25kX3NvY19kYXBtX3Vw
ZGF0ZSAqdXBkYXRlID0gTlVMTDsKIAotCWlmICh1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5p
dGVtWzBdID4gZS0+bWF4IC0gMSkKKwlpZiAodWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRl
bVswXSA+IGUtPml0ZW1zIC0gMSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAltb2R1bGUgPSBmaW5k
X2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwpAQCAtNzk3LDcgKzc5MSw3IEBAIHN0
YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250cm9sICpr
Y29udHJvbCwKIAlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChidW5kbGUpOwogCiAJaWYg
KHJldCkgewotCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsICIlZDpFcnJvciBpbiAl
cyBmb3IgJXNcbiIsIHJldCwKKwkJZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlY19kZXYsICIlZDpF
cnJvciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKIAkJCQkgICAgX19mdW5jX18sIGtjb250cm9sLT5p
ZC5uYW1lKTsKIAkJcmV0dXJuIHJldDsKIAl9CkBAIC04MTQsNyArODA4LDcgQEAgc3RhdGljIGlu
dCBnYmNvZGVjX2VudW1fZGFwbV9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9s
LAogCX0KIAogCWlmIChlLT5zaGlmdF9sICE9IGUtPnNoaWZ0X3IpIHsKLQkJaWYgKHVjb250cm9s
LT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMV0gPiBlLT5tYXggLSAxKQorCQlpZiAodWNvbnRyb2wt
PnZhbHVlLmVudW1lcmF0ZWQuaXRlbVsxXSA+IGUtPml0ZW1zIC0gMSkKIAkJCXJldHVybiAtRUlO
VkFMOwogCQl2YWwgfD0gdWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVsxXSA8PCBlLT5z
aGlmdF9yOwogCQltYXNrIHw9IGUtPm1hc2sgPDwgZS0+c2hpZnRfcjsKQEAgLTgzNywxNiArODMx
LDE0IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tj
b250cm9sICprY29udHJvbCwKIAkJZ2JfcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxl
KTsKIAogCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsCisJ
CQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjX2RldiwKIAkJCQkJICAgICIlZDpFcnJvciBpbiAl
cyBmb3IgJXNcbiIsIHJldCwKIAkJCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7
CiAJCX0KIAkJZm9yICh3aSA9IDA7IHdpIDwgd2xpc3QtPm51bV93aWRnZXRzOyB3aSsrKSB7CiAJ
CQl3aWRnZXQgPSB3bGlzdC0+d2lkZ2V0c1t3aV07Ci0KLQkJCXdpZGdldC0+dmFsdWUgPSB2YWw7
Ci0JCQl3aWRnZXQtPmRhcG0tPnVwZGF0ZSA9IE5VTEw7Ci0JCQlzbmRfc29jX2RhcG1fbXV4X3Vw
ZGF0ZV9wb3dlcih3aWRnZXQsIGtjb250cm9sLCBtdXgsIGUpOworCQkJc25kX3NvY19kYXBtX211
eF91cGRhdGVfcG93ZXIod2lkZ2V0LT5kYXBtLCBrY29udHJvbCwKKwkJCQkJCSAgICAgIHZhbCwg
ZSwgdXBkYXRlKTsKIAkJfQogCX0KIApAQCAtODY4LDEzICs4NjAsMTMgQEAgc3RhdGljIGludCBn
YmF1ZGlvX3RwbGdfY3JlYXRlX2VudW1fY3RsKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICpn
YiwKIAlnYl9lbnVtID0gJmN0bC0+aW5mby52YWx1ZS5lbnVtZXJhdGVkOwogCiAJLyogc2luY2Ug
Y291bnQ9MSwgYW5kIHJlZyBpcyBkdW1teSAqLwotCWdiZS0+bWF4ID0gbGUzMl90b19jcHUoZ2Jf
ZW51bS0+aXRlbXMpOworCWdiZS0+aXRlbXMgPSBsZTMyX3RvX2NwdShnYl9lbnVtLT5pdGVtcyk7
CiAJZ2JlLT50ZXh0cyA9IGdiX2dlbmVyYXRlX2VudW1fc3RyaW5ncyhnYiwgZ2JfZW51bSk7CiAK
IAkvKiBkZWJ1ZyBlbnVtIGluZm8gKi8KLQlkZXZfZGJnKGdiLT5kZXYsICJNYXg6JWQsIG5hbWVf
bGVuZ3RoOiVkXG4iLCBnYmUtPm1heCwKKwlkZXZfZGJnKGdiLT5kZXYsICJNYXg6JWQsIG5hbWVf
bGVuZ3RoOiVkXG4iLCBnYmUtPml0ZW1zLAogCQlsZTE2X3RvX2NwdShnYl9lbnVtLT5uYW1lc19s
ZW5ndGgpKTsKLQlmb3IgKGkgPSAwOyBpIDwgZ2JlLT5tYXg7IGkrKykKKwlmb3IgKGkgPSAwOyBp
IDwgZ2JlLT5pdGVtczsgaSsrKQogCQlkZXZfZGJnKGdiLT5kZXYsICJzcmNbJWRdOiAlc1xuIiwg
aSwgZ2JlLT50ZXh0c1tpXSk7CiAKIAkqa2N0bCA9IChzdHJ1Y3Qgc25kX2tjb250cm9sX25ldykK
QEAgLTkzNSwxMiArOTI3LDEyIEBAIHN0YXRpYyBpbnQgZ2JhdWRpb193aWRnZXRfZXZlbnQoc3Ry
dWN0IHNuZF9zb2NfZGFwbV93aWRnZXQgKncsCiB7CiAJaW50IHdpZDsKIAlpbnQgcmV0OwotCXN0
cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHctPmNvZGVjOwotCXN0cnVjdCBnYmF1ZGlvX2Nv
ZGVjX2luZm8gKmdiY29kZWMgPSBzbmRfc29jX2NvZGVjX2dldF9kcnZkYXRhKGNvZGVjKTsKKwlz
dHJ1Y3QgZGV2aWNlICpjb2RlY19kZXYgPSB3LT5kYXBtLT5kZXY7CisJc3RydWN0IGdiYXVkaW9f
Y29kZWNfaW5mbyAqZ2Jjb2RlYyA9IGRldl9nZXRfZHJ2ZGF0YShjb2RlY19kZXYpOwogCXN0cnVj
dCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxl
OwogCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAiJXMgJXMgJWRcbiIsIF9fZnVuY19fLCB3LT5uYW1l
LCBldmVudCk7CisJZGV2X2RiZyhjb2RlY19kZXYsICIlcyAlcyAlZFxuIiwgX19mdW5jX18sIHct
Pm5hbWUsIGV2ZW50KTsKIAogCS8qIEZpbmQgcmVsZXZhbnQgbW9kdWxlICovCiAJbW9kdWxlID0g
ZmluZF9nYl9tb2R1bGUoZ2Jjb2RlYywgdy0+bmFtZSk7CkBAIC05NTAsNyArOTQyLDcgQEAgc3Rh
dGljIGludCBnYmF1ZGlvX3dpZGdldF9ldmVudChzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAq
dywKIAkvKiBtYXAgbmFtZSB0byB3aWRnZXQgaWQgKi8KIAl3aWQgPSBnYmF1ZGlvX21hcF93aWRn
ZXRuYW1lKG1vZHVsZSwgdy0+bmFtZSk7CiAJaWYgKHdpZCA8IDApIHsKLQkJZGV2X2Vycihjb2Rl
Yy0+ZGV2LCAiSW52YWxpZCB3aWRnZXQgbmFtZTolc1xuIiwgdy0+bmFtZSk7CisJCWRldl9lcnIo
Y29kZWNfZGV2LCAiSW52YWxpZCB3aWRnZXQgbmFtZTolc1xuIiwgdy0+bmFtZSk7CiAJCXJldHVy
biAtRUlOVkFMOwogCX0KIApAQCAtOTczLDcgKzk2NSw3IEBAIHN0YXRpYyBpbnQgZ2JhdWRpb193
aWRnZXRfZXZlbnQoc3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQgKncsCiAJCWJyZWFrOwogCX0K
IAlpZiAocmV0KQotCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsCisJCWRldl9lcnJf
cmF0ZWxpbWl0ZWQoY29kZWNfZGV2LAogCQkJCSAgICAiJWQ6IHdpZGdldCwgZXZlbnQ6JWQgZmFp
bGVkOiVkXG4iLCB3aWQsCiAJCQkJICAgIGV2ZW50LCByZXQpOwogCi0tIAoyLjI2LjIKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCmdyZXlidXMtZGV2IG1h
aWxpbmcgbGlzdApncmV5YnVzLWRldkBsaXN0cy5saW5hcm8ub3JnCmh0dHBzOi8vbGlzdHMubGlu
YXJvLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2dyZXlidXMtZGV2Cg==
