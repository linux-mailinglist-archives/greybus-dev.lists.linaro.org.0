Return-Path: <greybus-dev-bounces@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 02D921D6B5F
	for <lists+greybus-dev@lfdr.de>; Sun, 17 May 2020 19:20:02 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 253966083B
	for <lists+greybus-dev@lfdr.de>; Sun, 17 May 2020 17:20:01 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 19E4060866; Sun, 17 May 2020 17:20:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,DKIM_ADSP_CUSTOM_MED,
	FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,RCVD_IN_MSPIKE_H3,
	RCVD_IN_MSPIKE_WL,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id A694A60DD0;
	Sun, 17 May 2020 17:18:59 +0000 (UTC)
X-Original-To: greybus-dev@lists.linaro.org
Delivered-To: greybus-dev@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 997C3607F9
 for <greybus-dev@lists.linaro.org>; Sun, 17 May 2020 17:18:48 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 888E16094E; Sun, 17 May 2020 17:18:48 +0000 (UTC)
Received: from mail-pl1-f196.google.com (mail-pl1-f196.google.com
 [209.85.214.196])
 by lists.linaro.org (Postfix) with ESMTPS id A60506083B
 for <greybus-dev@lists.linaro.org>; Sun, 17 May 2020 17:18:08 +0000 (UTC)
Received: by mail-pl1-f196.google.com with SMTP id f15so3178520plr.3
 for <greybus-dev@lists.linaro.org>; Sun, 17 May 2020 10:18:08 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:in-reply-to:references;
 bh=6CUGp4WjdnQ3LuIcb0IdKCrKwR/TmCSik43rIlrbJgQ=;
 b=TfD/ltd9/aGYyla1ObF8WddpglpW4YspDsmtSRm9u45wnwg/bsr6ruy0qfF618wppb
 FjDjLsZ+usMVLFIK75fLXJB5sU/hirAOhGNp7sG9B9Ryrk7UoWR0QFI0qkV6miw8/ifS
 rijK/lWn+rcVW3Q2YbIIaOvl2nWzTmmplssh40ItPQHMoGeKF9x4bazdkVSInoAZE2Jk
 AZ+jsUY9/ZfLfESx+XjrTKneJtsd3sJHb5k7OpZ+QukLWICLuBPDJq6Td8uCEp80Gzjm
 tHm8iCv9cGJCXyezX+bU8MU7AXQAyHGqd9nP3mDzf06hyePP7+UALYS3Aip2c5zA2Yyq
 V3SA==
X-Gm-Message-State: AOAM533CpFFWR0tntAe6zexfrO8mXWuMKOGXGR8D2NfO0JX3MsnjqdlO
 3UlMII+SEwKzOGdhKqnnkpo=
X-Google-Smtp-Source: ABdhPJyG/ta1akzxYW2mBGpDfEHGnnDIL0etFZ6SE2nh7YwV/AMduWX/m2jY0ICvL0v2rpuUk5Fvtg==
X-Received: by 2002:a17:902:c406:: with SMTP id
 k6mr12249441plk.203.1589735887739; 
 Sun, 17 May 2020 10:18:07 -0700 (PDT)
Received: from cvds-vagarw7.iind.intel.com (fmdmzpr03-ext.fm.intel.com.
 [192.55.54.38])
 by smtp.googlemail.com with ESMTPSA id n69sm6513900pjc.8.2020.05.17.10.18.00
 (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
 Sun, 17 May 2020 10:18:07 -0700 (PDT)
From: Vaibhav Agarwal <vaibhav.sr@gmail.com>
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Alex Elder <elder@kernel.org>, Johan Hovold <johan@kernel.org>,
 Mark Greer <mgreer@animalcreek.com>
Date: Sun, 17 May 2020 22:47:19 +0530
Message-Id: <6131fec4cf9e18dbf70fa7f992de9d588299ee18.1589734179.git.vaibhav.sr@gmail.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <cover.1589734179.git.vaibhav.sr@gmail.com>
References: <cover.1589734179.git.vaibhav.sr@gmail.com>
In-Reply-To: <cover.1589734179.git.vaibhav.sr@gmail.com>
References: <cover.1589734179.git.vaibhav.sr@gmail.com>
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: devel@driverdev.osuosl.org, greybus-dev@lists.linaro.org,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 linux-kernel@vger.kernel.org
Subject: [greybus-dev] [PATCH V1 4/6] staging: greybus: audio: Resolve
	compilation error in topology parser
X-BeenThere: greybus-dev@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/greybus-dev/>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: greybus-dev-bounces@lists.linaro.org
Sender: "greybus-dev" <greybus-dev-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

Rml4IGNvbXBpbGF0aW9uIGVycm9ycyBmb3IgR0IgQXVkaW8gdG9wb2xvZ3kgcGFyc2VyIGNvZGUg
d2l0aCByZWNlbnQKa2VybmVsIHZlcnNpb25zLgoKU2lnbmVkLW9mZi1ieTogVmFpYmhhdiBBZ2Fy
d2FsIDx2YWliaGF2LnNyQGdtYWlsLmNvbT4KLS0tCiBkcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9h
dWRpb190b3BvbG9neS5jIHwgMTMwICsrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0KIDEg
ZmlsZSBjaGFuZ2VkLCA2MSBpbnNlcnRpb25zKCspLCA2OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9hdWRpb190b3BvbG9neS5jIGIvZHJpdmVycy9z
dGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYwppbmRleCA0YWMzMGFjY2YyMjYuLjdkNWU4
NzM0MWE1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xv
Z3kuYworKysgYi9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9hdWRpb190b3BvbG9neS5jCkBAIC01
LDggKzUsOCBAQAogICogQ29weXJpZ2h0IDIwMTUtMjAxNiBMaW5hcm8gTHRkLgogICovCiAKKyNp
bmNsdWRlIDxsaW51eC9ncmV5YnVzLmg+CiAjaW5jbHVkZSAiYXVkaW9fY29kZWMuaCIKLSNpbmNs
dWRlICJncmV5YnVzX3Byb3RvY29scy5oIgogCiAjZGVmaW5lIEdCQVVESU9fSU5WQUxJRF9JRAkw
eEZGCiAKQEAgLTE2NSwxNSArMTY1LDE1IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxf
aW5mbyhzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAlzdHJ1Y3QgZ2JhdWRpb19jdGxf
cHZ0ICpkYXRhOwogCXN0cnVjdCBnYl9hdWRpb19jdGxfZWxlbV9pbmZvICppbmZvOwogCXN0cnVj
dCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNv
ZGVjID0gc25kX2tjb250cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVj
X2luZm8gKmdiY29kZWMgPSBzbmRfc29jX2NvZGVjX2dldF9kcnZkYXRhKGNvZGVjKTsKKwlzdHJ1
Y3Qgc25kX3NvY19jb21wb25lbnQgKmNvbXAgPSBzbmRfc29jX2tjb250cm9sX2NvbXBvbmVudChr
Y29udHJvbCk7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBzbmRfc29jX2NvbXBv
bmVudF9nZXRfZHJ2ZGF0YShjb21wKTsKIAotCWRldl9kYmcoY29kZWMtPmRldiwgIkVudGVyZWQg
JXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CisJZGV2X2RiZyhjb21wLT5k
ZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwogCWRh
dGEgPSAoc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqKWtjb250cm9sLT5wcml2YXRlX3ZhbHVlOwog
CWluZm8gPSAoc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8gKilkYXRhLT5pbmZvOwogCiAJ
aWYgKCFpbmZvKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIk5VTEwgaW5mbyBmb3IgJXNcbiIs
IHVpbmZvLT5pZC5uYW1lKTsKKwkJZGV2X2Vycihjb21wLT5kZXYsICJOVUxMIGluZm8gZm9yICVz
XG4iLCB1aW5mby0+aWQubmFtZSk7CiAJCXJldHVybiAtRUlOVkFMOwogCX0KIApAQCAtMTkzLDcg
KzE5Myw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxfaW5mbyhzdHJ1Y3Qgc25kX2tj
b250cm9sICprY29udHJvbCwKIAkJdWluZm8tPnZhbHVlLmVudW1lcmF0ZWQuaXRlbXMgPSBtYXg7
CiAJCWlmICh1aW5mby0+dmFsdWUuZW51bWVyYXRlZC5pdGVtID4gbWF4IC0gMSkKIAkJCXVpbmZv
LT52YWx1ZS5lbnVtZXJhdGVkLml0ZW0gPSBtYXggLSAxOwotCQltb2R1bGUgPSBmaW5kX2diX21v
ZHVsZShnYmNvZGVjLCBrY29udHJvbC0+aWQubmFtZSk7CisJCW1vZHVsZSA9IGZpbmRfZ2JfbW9k
dWxlKGdiLCBrY29udHJvbC0+aWQubmFtZSk7CiAJCWlmICghbW9kdWxlKQogCQkJcmV0dXJuIC1F
SU5WQUw7CiAJCW5hbWUgPSBnYmF1ZGlvX21hcF9jb250cm9saWQobW9kdWxlLCBkYXRhLT5jdGxf
aWQsCkBAIC0yMDEsNyArMjAxLDcgQEAgc3RhdGljIGludCBnYmNvZGVjX21peGVyX2N0bF9pbmZv
KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCQlzdHJsY3B5KHVpbmZvLT52YWx1ZS5l
bnVtZXJhdGVkLm5hbWUsIG5hbWUsIE5BTUVfU0laRSk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6Ci0J
CWRldl9lcnIoY29kZWMtPmRldiwgIkludmFsaWQgdHlwZTogJWQgZm9yICVzOmtjb250cm9sXG4i
LAorCQlkZXZfZXJyKGNvbXAtPmRldiwgIkludmFsaWQgdHlwZTogJWQgZm9yICVzOmtjb250cm9s
XG4iLAogCQkJaW5mby0+dHlwZSwga2NvbnRyb2wtPmlkLm5hbWUpOwogCQlicmVhazsKIAl9CkBA
IC0yMTYsMTEgKzIxNiwxMSBAQCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfY3RsX2dldChzdHJ1
Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAlzdHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0ICpkYXRh
OwogCXN0cnVjdCBnYl9hdWRpb19jdGxfZWxlbV92YWx1ZSBnYnZhbHVlOwogCXN0cnVjdCBnYmF1
ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0g
c25kX2tjb250cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8g
KmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7CisJc3RydWN0IHNuZF9zb2Nf
Y29tcG9uZW50ICpjb21wID0gc25kX3NvY19rY29udHJvbF9jb21wb25lbnQoa2NvbnRyb2wpOwor
CXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb21wb25lbnRfZ2V0X2Ry
dmRhdGEoY29tcCk7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwogCi0JZGV2X2RiZyhjb2Rl
Yy0+ZGV2LCAiRW50ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsK
KwlkZXZfZGJnKGNvbXAtPmRldiwgIkVudGVyZWQgJXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJv
bC0+aWQubmFtZSk7CiAJbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5u
YW1lKTsKIAlpZiAoIW1vZHVsZSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC0yMzksNyArMjM5LDcg
QEAgc3RhdGljIGludCBnYmNvZGVjX21peGVyX2N0bF9nZXQoc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJZ2JfcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKIAogCWlm
IChyZXQpIHsKLQkJZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlYy0+ZGV2LCAiJWQ6RXJyb3IgaW4g
JXMgZm9yICVzXG4iLCByZXQsCisJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29tcC0+ZGV2LCAiJWQ6
RXJyb3IgaW4gJXMgZm9yICVzXG4iLCByZXQsCiAJCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+
aWQubmFtZSk7CiAJCXJldHVybiByZXQ7CiAJfQpAQCAtMjYyLDcgKzI2Miw3IEBAIHN0YXRpYyBp
bnQgZ2Jjb2RlY19taXhlcl9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAog
CQkJCWxlMzJfdG9fY3B1KGdidmFsdWUudmFsdWUuZW51bWVyYXRlZF9pdGVtWzFdKTsKIAkJYnJl
YWs7CiAJZGVmYXVsdDoKLQkJZGV2X2Vycihjb2RlYy0+ZGV2LCAiSW52YWxpZCB0eXBlOiAlZCBm
b3IgJXM6a2NvbnRyb2xcbiIsCisJCWRldl9lcnIoY29tcC0+ZGV2LCAiSW52YWxpZCB0eXBlOiAl
ZCBmb3IgJXM6a2NvbnRyb2xcbiIsCiAJCQlpbmZvLT50eXBlLCBrY29udHJvbC0+aWQubmFtZSk7
CiAJCXJldCA9IC1FSU5WQUw7CiAJCWJyZWFrOwpAQCAtMjc4LDExICsyNzgsMTEgQEAgc3RhdGlj
IGludCBnYmNvZGVjX21peGVyX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2ws
CiAJc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0YTsKIAlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2Vs
ZW1fdmFsdWUgZ2J2YWx1ZTsKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwot
CXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHNuZF9rY29udHJvbF9jaGlwKGtjb250cm9s
KTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2Ry
dmRhdGEoY29kZWMpOworCXN0cnVjdCBzbmRfc29jX2NvbXBvbmVudCAqY29tcCA9IHNuZF9zb2Nf
a2NvbnRyb2xfY29tcG9uZW50KGtjb250cm9sKTsKKwlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZv
ICpnYiA9IHNuZF9zb2NfY29tcG9uZW50X2dldF9kcnZkYXRhKGNvbXApOwogCXN0cnVjdCBnYl9i
dW5kbGUgKmJ1bmRsZTsKIAotCWRldl9kYmcoY29kZWMtPmRldiwgIkVudGVyZWQgJXM6JXNcbiIs
IF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CisJZGV2X2RiZyhjb21wLT5kZXYsICJFbnRl
cmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwogCW1vZHVsZSA9IGZp
bmRfZ2JfbW9kdWxlKGdiLCBrY29udHJvbC0+aWQubmFtZSk7CiAJaWYgKCFtb2R1bGUpCiAJCXJl
dHVybiAtRUlOVkFMOwpAQCAtMzA5LDcgKzMwOSw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhl
cl9jdGxfcHV0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCQkJCWNwdV90b19sZTMy
KHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMV0pOwogCQlicmVhazsKIAlkZWZhdWx0
OgotCQlkZXZfZXJyKGNvZGVjLT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczprY29udHJv
bFxuIiwKKwkJZGV2X2Vycihjb21wLT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczprY29u
dHJvbFxuIiwKIAkJCWluZm8tPnR5cGUsIGtjb250cm9sLT5pZC5uYW1lKTsKIAkJcmV0ID0gLUVJ
TlZBTDsKIAkJYnJlYWs7CkBAIC0zMjgsNyArMzI4LDcgQEAgc3RhdGljIGludCBnYmNvZGVjX21p
eGVyX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJZ2JfcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKIAogCWlmIChyZXQpIHsKLQkJZGV2X2Vycl9yYXRl
bGltaXRlZChjb2RlYy0+ZGV2LCAiJWQ6RXJyb3IgaW4gJXMgZm9yICVzXG4iLCByZXQsCisJCWRl
dl9lcnJfcmF0ZWxpbWl0ZWQoY29tcC0+ZGV2LCAiJWQ6RXJyb3IgaW4gJXMgZm9yICVzXG4iLCBy
ZXQsCiAJCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CiAJfQogCkBAIC0zNTIs
MTEgKzM1Miw3IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9pbmZvKHN0cnVj
dCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCWludCBwbGF0Zm9ybV9tYXgsIHBsYXRmb3JtX21p
bjsKIAlzdHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0ICpkYXRhOwogCXN0cnVjdCBnYl9hdWRpb19jdGxf
ZWxlbV9pbmZvICppbmZvOwotCXN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0X2xpc3QgKndsaXN0
ID0gc25kX2tjb250cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0cnVjdCBzbmRfc29jX2RhcG1fd2lk
Z2V0ICp3aWRnZXQgPSB3bGlzdC0+d2lkZ2V0c1swXTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAq
Y29kZWMgPSB3aWRnZXQtPmNvZGVjOwogCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAiRW50ZXJlZCAl
czolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKIAlkYXRhID0gKHN0cnVjdCBn
YmF1ZGlvX2N0bF9wdnQgKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKIAlpbmZvID0gKHN0cnVj
dCBnYl9hdWRpb19jdGxfZWxlbV9pbmZvICopZGF0YS0+aW5mbzsKIApAQCAtMzg3LDExICszODMs
MTEgQEAgc3RhdGljIGludCBnYmNvZGVjX21peGVyX2RhcG1fY3RsX2dldChzdHJ1Y3Qgc25kX2tj
b250cm9sICprY29udHJvbCwKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwog
CXN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0X2xpc3QgKndsaXN0ID0gc25kX2tjb250cm9sX2No
aXAoa2NvbnRyb2wpOwogCXN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0ICp3aWRnZXQgPSB3bGlz
dC0+d2lkZ2V0c1swXTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSB3aWRnZXQtPmNv
ZGVjOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRf
ZHJ2ZGF0YShjb2RlYyk7CisJc3RydWN0IGRldmljZSAqY29kZWNfZGV2ID0gd2lkZ2V0LT5kYXBt
LT5kZXY7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBkZXZfZ2V0X2RydmRhdGEo
Y29kZWNfZGV2KTsKIAlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGU7CiAKLQlkZXZfZGJnKGNvZGVj
LT5kZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwor
CWRldl9kYmcoY29kZWNfZGV2LCAiRW50ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9s
LT5pZC5uYW1lKTsKIAltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5h
bWUpOwogCWlmICghbW9kdWxlKQogCQlyZXR1cm4gLUVJTlZBTDsKQEAgLTQxNSw3ICs0MTEsNyBA
QCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRy
b2wgKmtjb250cm9sLAogCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7CiAK
IAlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9y
IGluICVzIGZvciAlc1xuIiwgcmV0LAorCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjX2Rldiwg
IiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCSAgICBfX2Z1bmNfXywga2NvbnRy
b2wtPmlkLm5hbWUpOwogCQlyZXR1cm4gcmV0OwogCX0KQEAgLTQyOSw3ICs0MjUsNyBAQCBzdGF0
aWMgaW50IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtj
b250cm9sLAogc3RhdGljIGludCBnYmNvZGVjX21peGVyX2RhcG1fY3RsX3B1dChzdHJ1Y3Qgc25k
X2tjb250cm9sICprY29udHJvbCwKIAkJCQkgICAgICBzdHJ1Y3Qgc25kX2N0bF9lbGVtX3ZhbHVl
ICp1Y29udHJvbCkKIHsKLQlpbnQgcmV0LCB3aSwgbWF4LCBjb25uZWN0OworCWludCByZXQsIHdp
LCBtYXg7CiAJdW5zaWduZWQgaW50IG1hc2ssIHZhbDsKIAlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2Vs
ZW1faW5mbyAqaW5mbzsKIAlzdHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0ICpkYXRhOwpAQCAtNDM3LDEx
ICs0MzMsMTIgQEAgc3RhdGljIGludCBnYmNvZGVjX21peGVyX2RhcG1fY3RsX3B1dChzdHJ1Y3Qg
c25kX2tjb250cm9sICprY29udHJvbCwKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9k
dWxlOwogCXN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0X2xpc3QgKndsaXN0ID0gc25kX2tjb250
cm9sX2NoaXAoa2NvbnRyb2wpOwogCXN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0ICp3aWRnZXQg
PSB3bGlzdC0+d2lkZ2V0c1swXTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSB3aWRn
ZXQtPmNvZGVjOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2Rl
Y19nZXRfZHJ2ZGF0YShjb2RlYyk7CisJc3RydWN0IGRldmljZSAqY29kZWNfZGV2ID0gd2lkZ2V0
LT5kYXBtLT5kZXY7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBkZXZfZ2V0X2Ry
dmRhdGEoY29kZWNfZGV2KTsKKwlzdHJ1Y3Qgc25kX3NvY19kYXBtX3VwZGF0ZSAqdXBkYXRlID0g
TlVMTDsKIAlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGU7CiAKLQlkZXZfZGJnKGNvZGVjLT5kZXYs
ICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOworCWRldl9k
YmcoY29kZWNfZGV2LCAiRW50ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5u
YW1lKTsKIAltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwog
CWlmICghbW9kdWxlKQogCQlyZXR1cm4gLUVJTlZBTDsKQEAgLTQ1OCwxNyArNDU1LDEzIEBAIHN0
YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJbWF4ID0gbGUzMl90b19jcHUoaW5mby0+dmFsdWUuaW50ZWdlci5tYXgpOwog
CW1hc2sgPSAoMSA8PCBmbHMobWF4KSkgLSAxOwogCXZhbCA9IHVjb250cm9sLT52YWx1ZS5pbnRl
Z2VyLnZhbHVlWzBdICYgbWFzazsKLQljb25uZWN0ID0gISF2YWw7CiAKIAkvKiB1cGRhdGUgdWNv
bnRyb2wgKi8KIAlpZiAoZ2J2YWx1ZS52YWx1ZS5pbnRlZ2VyX3ZhbHVlWzBdICE9IHZhbCkgewog
CQlmb3IgKHdpID0gMDsgd2kgPCB3bGlzdC0+bnVtX3dpZGdldHM7IHdpKyspIHsKIAkJCXdpZGdl
dCA9IHdsaXN0LT53aWRnZXRzW3dpXTsKLQotCQkJd2lkZ2V0LT52YWx1ZSA9IHZhbDsKLQkJCXdp
ZGdldC0+ZGFwbS0+dXBkYXRlID0gTlVMTDsKLQkJCXNuZF9zb2NfZGFwbV9taXhlcl91cGRhdGVf
cG93ZXIod2lkZ2V0LCBrY29udHJvbCwKLQkJCQkJCQljb25uZWN0KTsKKwkJCXNuZF9zb2NfZGFw
bV9taXhlcl91cGRhdGVfcG93ZXIod2lkZ2V0LT5kYXBtLCBrY29udHJvbCwKKwkJCQkJCQl2YWws
IHVwZGF0ZSk7CiAJCX0KIAkJZ2J2YWx1ZS52YWx1ZS5pbnRlZ2VyX3ZhbHVlWzBdID0KIAkJCWNw
dV90b19sZTMyKHVjb250cm9sLT52YWx1ZS5pbnRlZ2VyLnZhbHVlWzBdKTsKQEAgLTQ4NCw3ICs0
NzcsNyBAQCBzdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfcHV0KHN0cnVjdCBzbmRf
a2NvbnRyb2wgKmtjb250cm9sLAogCQlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChidW5k
bGUpOwogCiAJCWlmIChyZXQpIHsKLQkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwK
KwkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWNfZGV2LAogCQkJCQkgICAgIiVkOkVycm9yIGlu
ICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1l
KTsKIAkJCXJldHVybiByZXQ7CkBAIC01NTMsMTEgKzU0NiwxMSBAQCBzdGF0aWMgaW50IGdiY29k
ZWNfZW51bV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCQkJCXN0cnVj
dCBzbmRfY3RsX2VsZW1fdmFsdWUgKnVjb250cm9sKQogewogCWludCByZXQsIGN0bF9pZDsKLQlz
dHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSBzbmRfa2NvbnRyb2xfY2hpcChrY29udHJvbCk7
CisJc3RydWN0IHNuZF9zb2NfY29tcG9uZW50ICpjb21wID0gc25kX3NvY19rY29udHJvbF9jb21w
b25lbnQoa2NvbnRyb2wpOworCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3Nv
Y19jb21wb25lbnRfZ2V0X2RydmRhdGEoY29tcCk7CiAJc3RydWN0IHNvY19lbnVtICplID0gKHN0
cnVjdCBzb2NfZW51bSAqKWtjb250cm9sLT5wcml2YXRlX3ZhbHVlOwogCXN0cnVjdCBnYl9hdWRp
b19jdGxfZWxlbV92YWx1ZSBnYnZhbHVlOwogCXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICpt
b2R1bGU7Ci0Jc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBzbmRfc29jX2NvZGVjX2dl
dF9kcnZkYXRhKGNvZGVjKTsKIAlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGU7CiAKIAltb2R1bGUg
PSBmaW5kX2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwpAQCAtNTgwLDcgKzU3Myw3
IEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2N0bF9nZXQoc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJZ2JfcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKIAogCWlm
IChyZXQpIHsKLQkJZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlYy0+ZGV2LCAiJWQ6RXJyb3IgaW4g
JXMgZm9yICVzXG4iLCByZXQsCisJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29tcC0+ZGV2LCAiJWQ6
RXJyb3IgaW4gJXMgZm9yICVzXG4iLCByZXQsCiAJCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+
aWQubmFtZSk7CiAJCXJldHVybiByZXQ7CiAJfQpAQCAtNTk4LDExICs1OTEsMTEgQEAgc3RhdGlj
IGludCBnYmNvZGVjX2VudW1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwK
IAkJCQlzdHJ1Y3Qgc25kX2N0bF9lbGVtX3ZhbHVlICp1Y29udHJvbCkKIHsKIAlpbnQgcmV0LCBj
dGxfaWQ7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gc25kX2tjb250cm9sX2NoaXAo
a2NvbnRyb2wpOworCXN0cnVjdCBzbmRfc29jX2NvbXBvbmVudCAqY29tcCA9IHNuZF9zb2Nfa2Nv
bnRyb2xfY29tcG9uZW50KGtjb250cm9sKTsKKwlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpn
YiA9IHNuZF9zb2NfY29tcG9uZW50X2dldF9kcnZkYXRhKGNvbXApOwogCXN0cnVjdCBzb2NfZW51
bSAqZSA9IChzdHJ1Y3Qgc29jX2VudW0gKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKIAlzdHJ1
Y3QgZ2JfYXVkaW9fY3RsX2VsZW1fdmFsdWUgZ2J2YWx1ZTsKIAlzdHJ1Y3QgZ2JhdWRpb19tb2R1
bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3Nv
Y19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwog
CiAJbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKQEAgLTYx
MywxMyArNjA2LDEzIEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2N0bF9wdXQoc3RydWN0IHNu
ZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJaWYgKGN0bF9pZCA8IDApCiAJCXJldHVybiAtRUlOVkFM
OwogCi0JaWYgKHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMF0gPiBlLT5tYXggLSAx
KQorCWlmICh1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzBdID4gZS0+aXRlbXMgLSAx
KQogCQlyZXR1cm4gLUVJTlZBTDsKIAlnYnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVswXSA9
CiAJCWNwdV90b19sZTMyKHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMF0pOwogCiAJ
aWYgKGUtPnNoaWZ0X2wgIT0gZS0+c2hpZnRfcikgewotCQlpZiAodWNvbnRyb2wtPnZhbHVlLmVu
dW1lcmF0ZWQuaXRlbVsxXSA+IGUtPm1heCAtIDEpCisJCWlmICh1Y29udHJvbC0+dmFsdWUuZW51
bWVyYXRlZC5pdGVtWzFdID4gZS0+aXRlbXMgLSAxKQogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCWdi
dmFsdWUudmFsdWUuZW51bWVyYXRlZF9pdGVtWzFdID0KIAkJCWNwdV90b19sZTMyKHVjb250cm9s
LT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMV0pOwpAQCAtNjM3LDggKzYzMCw4IEBAIHN0YXRpYyBp
bnQgZ2Jjb2RlY19lbnVtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCiAJ
Z2JfcG1fcnVudGltZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKIAogCWlmIChyZXQpIHsKLQkJ
ZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlYy0+ZGV2LCAiJWQ6RXJyb3IgaW4gJXMgZm9yICVzXG4i
LCByZXQsCi0JCQkJICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CisJCWRldl9lcnJf
cmF0ZWxpbWl0ZWQoY29tcC0+ZGV2LCAiJWQ6RXJyb3IgaW4gJXMgZm9yICVzXG4iLAorCQkJCSAg
ICByZXQsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7CiAJfQogCiAJcmV0dXJuIHJldDsK
QEAgLTY1OSwxMyArNjUyLDEzIEBAIHN0YXRpYyBpbnQgZ2JhdWRpb190cGxnX2NyZWF0ZV9lbnVt
X2tjdGwoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKmdiLAogCWdiX2VudW0gPSAmY3RsLT5p
bmZvLnZhbHVlLmVudW1lcmF0ZWQ7CiAKIAkvKiBzaW5jZSBjb3VudD0xLCBhbmQgcmVnIGlzIGR1
bW15ICovCi0JZ2JlLT5tYXggPSBsZTMyX3RvX2NwdShnYl9lbnVtLT5pdGVtcyk7CisJZ2JlLT5p
dGVtcyA9IGxlMzJfdG9fY3B1KGdiX2VudW0tPml0ZW1zKTsKIAlnYmUtPnRleHRzID0gZ2JfZ2Vu
ZXJhdGVfZW51bV9zdHJpbmdzKGdiLCBnYl9lbnVtKTsKIAogCS8qIGRlYnVnIGVudW0gaW5mbyAq
LwotCWRldl9kYmcoZ2ItPmRldiwgIk1heDolZCwgbmFtZV9sZW5ndGg6JWRcbiIsIGdiZS0+bWF4
LAorCWRldl9kYmcoZ2ItPmRldiwgIk1heDolZCwgbmFtZV9sZW5ndGg6JWRcbiIsIGdiZS0+aXRl
bXMsCiAJCWxlMTZfdG9fY3B1KGdiX2VudW0tPm5hbWVzX2xlbmd0aCkpOwotCWZvciAoaSA9IDA7
IGkgPCBnYmUtPm1heDsgaSsrKQorCWZvciAoaSA9IDA7IGkgPCBnYmUtPml0ZW1zOyBpKyspCiAJ
CWRldl9kYmcoZ2ItPmRldiwgInNyY1slZF06ICVzXG4iLCBpLCBnYmUtPnRleHRzW2ldKTsKIAog
CSprY3RsID0gKHN0cnVjdCBzbmRfa2NvbnRyb2xfbmV3KQpAQCAtNzIwLDggKzcxMyw4IEBAIHN0
YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1fY3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICpr
Y29udHJvbCwKIAlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqd2lkZ2V0ID0gd2xpc3QtPndp
ZGdldHNbMF07CiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKIAlzdHJ1Y3Qg
Z2JfYXVkaW9fY3RsX2VsZW1fdmFsdWUgZ2J2YWx1ZTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAq
Y29kZWMgPSB3aWRnZXQtPmNvZGVjOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0g
c25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7CisJc3RydWN0IGRldmljZSAqY29kZWNf
ZGV2ID0gd2lkZ2V0LT5kYXBtLT5kZXY7CisJc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2Ig
PSBkZXZfZ2V0X2RydmRhdGEoY29kZWNfZGV2KTsKIAlzdHJ1Y3Qgc29jX2VudW0gKmUgPSAoc3Ry
dWN0IHNvY19lbnVtICopa2NvbnRyb2wtPnByaXZhdGVfdmFsdWU7CiAJc3RydWN0IGdiX2J1bmRs
ZSAqYnVuZGxlOwogCkBAIC03NDUsNyArNzM4LDcgQEAgc3RhdGljIGludCBnYmNvZGVjX2VudW1f
ZGFwbV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCWdiX3BtX3J1bnRp
bWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7CiAKIAlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0
ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAorCQlk
ZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjX2RldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwg
cmV0LAogCQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwogCQlyZXR1cm4gcmV0
OwogCX0KQEAgLTc2OCwxMiArNzYxLDEzIEBAIHN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1f
Y3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKIAlzdHJ1Y3Qgc25kX3NvY19k
YXBtX3dpZGdldCAqd2lkZ2V0ID0gd2xpc3QtPndpZGdldHNbMF07CiAJc3RydWN0IGdiX2F1ZGlv
X2N0bF9lbGVtX3ZhbHVlIGdidmFsdWU7CiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1v
ZHVsZTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSB3aWRnZXQtPmNvZGVjOwotCXN0
cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShj
b2RlYyk7CisJc3RydWN0IGRldmljZSAqY29kZWNfZGV2ID0gd2lkZ2V0LT5kYXBtLT5kZXY7CisJ
c3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBkZXZfZ2V0X2RydmRhdGEoY29kZWNfZGV2
KTsKIAlzdHJ1Y3Qgc29jX2VudW0gKmUgPSAoc3RydWN0IHNvY19lbnVtICopa2NvbnRyb2wtPnBy
aXZhdGVfdmFsdWU7CiAJc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOworCXN0cnVjdCBzbmRfc29j
X2RhcG1fdXBkYXRlICp1cGRhdGUgPSBOVUxMOwogCi0JaWYgKHVjb250cm9sLT52YWx1ZS5lbnVt
ZXJhdGVkLml0ZW1bMF0gPiBlLT5tYXggLSAxKQorCWlmICh1Y29udHJvbC0+dmFsdWUuZW51bWVy
YXRlZC5pdGVtWzBdID4gZS0+aXRlbXMgLSAxKQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCW1vZHVs
ZSA9IGZpbmRfZ2JfbW9kdWxlKGdiLCBrY29udHJvbC0+aWQubmFtZSk7CkBAIC03OTcsNyArNzkx
LDcgQEAgc3RhdGljIGludCBnYmNvZGVjX2VudW1fZGFwbV9jdGxfcHV0KHN0cnVjdCBzbmRfa2Nv
bnRyb2wgKmtjb250cm9sLAogCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7
CiAKIAlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVy
cm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAorCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjX2Rl
diwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCSAgICBfX2Z1bmNfXywga2Nv
bnRyb2wtPmlkLm5hbWUpOwogCQlyZXR1cm4gcmV0OwogCX0KQEAgLTgxNCw3ICs4MDgsNyBAQCBz
dGF0aWMgaW50IGdiY29kZWNfZW51bV9kYXBtX2N0bF9wdXQoc3RydWN0IHNuZF9rY29udHJvbCAq
a2NvbnRyb2wsCiAJfQogCiAJaWYgKGUtPnNoaWZ0X2wgIT0gZS0+c2hpZnRfcikgewotCQlpZiAo
dWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVsxXSA+IGUtPm1heCAtIDEpCisJCWlmICh1
Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzFdID4gZS0+aXRlbXMgLSAxKQogCQkJcmV0
dXJuIC1FSU5WQUw7CiAJCXZhbCB8PSB1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzFd
IDw8IGUtPnNoaWZ0X3I7CiAJCW1hc2sgfD0gZS0+bWFzayA8PCBlLT5zaGlmdF9yOwpAQCAtODM3
LDE2ICs4MzEsMTQgQEAgc3RhdGljIGludCBnYmNvZGVjX2VudW1fZGFwbV9jdGxfcHV0KHN0cnVj
dCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAogCQlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVu
ZChidW5kbGUpOwogCiAJCWlmIChyZXQpIHsKLQkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMt
PmRldiwKKwkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWNfZGV2LAogCQkJCQkgICAgIiVkOkVy
cm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAogCQkJCQkgICAgX19mdW5jX18sIGtjb250cm9sLT5p
ZC5uYW1lKTsKIAkJfQogCQlmb3IgKHdpID0gMDsgd2kgPCB3bGlzdC0+bnVtX3dpZGdldHM7IHdp
KyspIHsKIAkJCXdpZGdldCA9IHdsaXN0LT53aWRnZXRzW3dpXTsKLQotCQkJd2lkZ2V0LT52YWx1
ZSA9IHZhbDsKLQkJCXdpZGdldC0+ZGFwbS0+dXBkYXRlID0gTlVMTDsKLQkJCXNuZF9zb2NfZGFw
bV9tdXhfdXBkYXRlX3Bvd2VyKHdpZGdldCwga2NvbnRyb2wsIG11eCwgZSk7CisJCQlzbmRfc29j
X2RhcG1fbXV4X3VwZGF0ZV9wb3dlcih3aWRnZXQtPmRhcG0sIGtjb250cm9sLAorCQkJCQkJICAg
ICAgdmFsLCBlLCB1cGRhdGUpOwogCQl9CiAJfQogCkBAIC04NjgsMTMgKzg2MCwxMyBAQCBzdGF0
aWMgaW50IGdiYXVkaW9fdHBsZ19jcmVhdGVfZW51bV9jdGwoc3RydWN0IGdiYXVkaW9fbW9kdWxl
X2luZm8gKmdiLAogCWdiX2VudW0gPSAmY3RsLT5pbmZvLnZhbHVlLmVudW1lcmF0ZWQ7CiAKIAkv
KiBzaW5jZSBjb3VudD0xLCBhbmQgcmVnIGlzIGR1bW15ICovCi0JZ2JlLT5tYXggPSBsZTMyX3Rv
X2NwdShnYl9lbnVtLT5pdGVtcyk7CisJZ2JlLT5pdGVtcyA9IGxlMzJfdG9fY3B1KGdiX2VudW0t
Pml0ZW1zKTsKIAlnYmUtPnRleHRzID0gZ2JfZ2VuZXJhdGVfZW51bV9zdHJpbmdzKGdiLCBnYl9l
bnVtKTsKIAogCS8qIGRlYnVnIGVudW0gaW5mbyAqLwotCWRldl9kYmcoZ2ItPmRldiwgIk1heDol
ZCwgbmFtZV9sZW5ndGg6JWRcbiIsIGdiZS0+bWF4LAorCWRldl9kYmcoZ2ItPmRldiwgIk1heDol
ZCwgbmFtZV9sZW5ndGg6JWRcbiIsIGdiZS0+aXRlbXMsCiAJCWxlMTZfdG9fY3B1KGdiX2VudW0t
Pm5hbWVzX2xlbmd0aCkpOwotCWZvciAoaSA9IDA7IGkgPCBnYmUtPm1heDsgaSsrKQorCWZvciAo
aSA9IDA7IGkgPCBnYmUtPml0ZW1zOyBpKyspCiAJCWRldl9kYmcoZ2ItPmRldiwgInNyY1slZF06
ICVzXG4iLCBpLCBnYmUtPnRleHRzW2ldKTsKIAogCSprY3RsID0gKHN0cnVjdCBzbmRfa2NvbnRy
b2xfbmV3KQpAQCAtOTM1LDEyICs5MjcsMTIgQEAgc3RhdGljIGludCBnYmF1ZGlvX3dpZGdldF9l
dmVudChzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqdywKIHsKIAlpbnQgd2lkOwogCWludCBy
ZXQ7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gdy0+Y29kZWM7Ci0Jc3RydWN0IGdi
YXVkaW9fY29kZWNfaW5mbyAqZ2Jjb2RlYyA9IHNuZF9zb2NfY29kZWNfZ2V0X2RydmRhdGEoY29k
ZWMpOworCXN0cnVjdCBkZXZpY2UgKmNvZGVjX2RldiA9IHctPmRhcG0tPmRldjsKKwlzdHJ1Y3Qg
Z2JhdWRpb19jb2RlY19pbmZvICpnYmNvZGVjID0gZGV2X2dldF9kcnZkYXRhKGNvZGVjX2Rldik7
CiAJc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKIAlzdHJ1Y3QgZ2JfYnVuZGxl
ICpidW5kbGU7CiAKLQlkZXZfZGJnKGNvZGVjLT5kZXYsICIlcyAlcyAlZFxuIiwgX19mdW5jX18s
IHctPm5hbWUsIGV2ZW50KTsKKwlkZXZfZGJnKGNvZGVjX2RldiwgIiVzICVzICVkXG4iLCBfX2Z1
bmNfXywgdy0+bmFtZSwgZXZlbnQpOwogCiAJLyogRmluZCByZWxldmFudCBtb2R1bGUgKi8KIAlt
b2R1bGUgPSBmaW5kX2diX21vZHVsZShnYmNvZGVjLCB3LT5uYW1lKTsKQEAgLTk1MCw3ICs5NDIs
NyBAQCBzdGF0aWMgaW50IGdiYXVkaW9fd2lkZ2V0X2V2ZW50KHN0cnVjdCBzbmRfc29jX2RhcG1f
d2lkZ2V0ICp3LAogCS8qIG1hcCBuYW1lIHRvIHdpZGdldCBpZCAqLwogCXdpZCA9IGdiYXVkaW9f
bWFwX3dpZGdldG5hbWUobW9kdWxlLCB3LT5uYW1lKTsKIAlpZiAod2lkIDwgMCkgewotCQlkZXZf
ZXJyKGNvZGVjLT5kZXYsICJJbnZhbGlkIHdpZGdldCBuYW1lOiVzXG4iLCB3LT5uYW1lKTsKKwkJ
ZGV2X2Vycihjb2RlY19kZXYsICJJbnZhbGlkIHdpZGdldCBuYW1lOiVzXG4iLCB3LT5uYW1lKTsK
IAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCkBAIC05NzMsNyArOTY1LDcgQEAgc3RhdGljIGludCBn
YmF1ZGlvX3dpZGdldF9ldmVudChzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqdywKIAkJYnJl
YWs7CiAJfQogCWlmIChyZXQpCi0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwKKwkJ
ZGV2X2Vycl9yYXRlbGltaXRlZChjb2RlY19kZXYsCiAJCQkJICAgICIlZDogd2lkZ2V0LCBldmVu
dDolZCBmYWlsZWQ6JWRcbiIsIHdpZCwKIAkJCQkgICAgZXZlbnQsIHJldCk7CiAKLS0gCjIuNy40
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpncmV5YnVz
LWRldiBtYWlsaW5nIGxpc3QKZ3JleWJ1cy1kZXZAbGlzdHMubGluYXJvLm9yZwpodHRwczovL2xp
c3RzLmxpbmFyby5vcmcvbWFpbG1hbi9saXN0aW5mby9ncmV5YnVzLWRldgo=
