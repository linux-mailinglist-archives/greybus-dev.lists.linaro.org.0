Return-Path: <greybus-dev-bounces@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 46E0F1CD5B9
	for <lists+greybus-dev@lfdr.de>; Mon, 11 May 2020 11:53:15 +0200 (CEST)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 5FCFD60696
	for <lists+greybus-dev@lfdr.de>; Mon, 11 May 2020 09:53:14 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id 5294D617CC; Mon, 11 May 2020 09:53:14 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_BLOCKED,SPF_HELO_NONE autolearn=disabled version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 7B12A6183D;
	Mon, 11 May 2020 09:50:42 +0000 (UTC)
X-Original-To: greybus-dev@lists.linaro.org
Delivered-To: greybus-dev@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 41A0F60BD7
 for <greybus-dev@lists.linaro.org>; Thu,  7 May 2020 21:29:36 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 213BB61957; Thu,  7 May 2020 21:29:36 +0000 (UTC)
Received: from relay12.mail.gandi.net (relay12.mail.gandi.net [217.70.178.232])
 by lists.linaro.org (Postfix) with ESMTPS id A8FB060BD7
 for <greybus-dev@lists.linaro.org>; Thu,  7 May 2020 21:29:28 +0000 (UTC)
Received: from localhost (lfbn-lyo-1-9-35.w86-202.abo.wanadoo.fr
 [86.202.105.35])
 (Authenticated sender: alexandre.belloni@bootlin.com)
 by relay12.mail.gandi.net (Postfix) with ESMTPSA id 73FB7200005;
 Thu,  7 May 2020 21:29:26 +0000 (UTC)
From: Alexandre Belloni <alexandre.belloni@bootlin.com>
To: Johan Hovold <johan@kernel.org>, Alex Elder <elder@kernel.org>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Vaibhav Agarwal <vaibhav.sr@gmail.com>, Mark Greer <mgreer@animalcreek.com>
Date: Thu,  7 May 2020 23:29:11 +0200
Message-Id: <20200507212912.599433-1-alexandre.belloni@bootlin.com>
X-Mailer: git-send-email 2.26.2
MIME-Version: 1.0
X-Virus-Scanned: ClamAV using ClamSMTP
X-Mailman-Approved-At: Mon, 11 May 2020 09:50:40 +0000
Cc: devel@driverdev.osuosl.org, greybus-dev@lists.linaro.org,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 linux-kernel@vger.kernel.org
Subject: [greybus-dev] [PATCH] greybus: audio: remove unused code
X-BeenThere: greybus-dev@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/greybus-dev/>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: greybus-dev-bounces@lists.linaro.org
Sender: "greybus-dev" <greybus-dev-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

R1JFWUJVU19BVURJT19NU004OTk0IGlzIG5vdCBhbiBleGlzdGluZyBjb25maWd1cmF0aW9uIG9w
dGlvbiBhbmQgYXMKcmVwb3J0ZWQgaW4gU2VwdGVtYmVyIDIwMTYsIGl0IGRlcGVuZHMgb24gYW4g
Im91dC1vZi10cmVlIHF1YWxjb21tIGF1ZGlvCmRyaXZlciIuIFRoaXMgZHJpdmVyIG5ldmVyIG1h
ZGUgaXQgdXBzdHJlYW0uCgpodHRwczovL2xvcmUua2VybmVsLm9yZy9sa21sLzIwMTYwOTIxMDcz
OTA1LkdBMzEyNjNAa3JvYWguY29tLwoKTW9yZW92ZXIsIHRoZXJlIGRvZXNuJ3Qgc2VlbSB0byBi
ZSBhbnkgaW50ZXJlc3QgaW4gYWN0dWFsbHkgZml4aW5nIHRoZQpkcml2ZXIgYXMgaXQgdXNlcyBB
U29DIEFQSXMgdGhhdCBoYXZlIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBrZXJuZWwgaW4gMjAxOAph
cyBzaG93biBieSBpdHMgdXNlIG9mIHNuZF9zb2NfcmVnaXN0ZXJfY29kZWMgYW5kCnNuZF9zb2Nf
Y29kZWNfZ2V0X2RydmRhdGEsIHJlbW92ZWQgaW4gY29tbWl0IDk5OWY3ZjVhZjhlYiAoIkFTb0M6
IHJlbW92ZQpDb2RlYyByZWxhdGVkIGNvZGUiKS4KClNpZ25lZC1vZmYtYnk6IEFsZXhhbmRyZSBC
ZWxsb25pIDxhbGV4YW5kcmUuYmVsbG9uaUBib290bGluLmNvbT4KLS0tCiBkcml2ZXJzL3N0YWdp
bmcvZ3JleWJ1cy9NYWtlZmlsZSAgICAgICAgIHwgICAgNCAtCiBkcml2ZXJzL3N0YWdpbmcvZ3Jl
eWJ1cy9hdWRpb19jb2RlYy5jICAgIHwgMTEwMyAtLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL3N0
YWdpbmcvZ3JleWJ1cy9hdWRpb19tb2R1bGUuYyAgIHwgIDQ3OCAtLS0tLS0tCiBkcml2ZXJzL3N0
YWdpbmcvZ3JleWJ1cy9hdWRpb190b3BvbG9neS5jIHwgMTQ0OCAtLS0tLS0tLS0tLS0tLS0tLS0t
LS0tCiA0IGZpbGVzIGNoYW5nZWQsIDMwMzMgZGVsZXRpb25zKC0pCiBkZWxldGUgbW9kZSAxMDA2
NDQgZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fY29kZWMuYwogZGVsZXRlIG1vZGUgMTAw
NjQ0IGRyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL2F1ZGlvX21vZHVsZS5jCiBkZWxldGUgbW9kZSAx
MDA2NDQgZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYwoKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL01ha2VmaWxlIGIvZHJpdmVycy9zdGFnaW5nL2dy
ZXlidXMvTWFrZWZpbGUKaW5kZXggNjI3ZTQ0ZjJhOTgzLi5hZjg4NTgzY2RjMjAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL01ha2VmaWxlCisrKyBiL2RyaXZlcnMvc3RhZ2lu
Zy9ncmV5YnVzL01ha2VmaWxlCkBAIC0yNyw4ICsyNyw2IEBAIG9iai0kKENPTkZJR19HUkVZQlVT
X1JBVykJKz0gZ2ItcmF3Lm8KIG9iai0kKENPTkZJR19HUkVZQlVTX1ZJQlJBVE9SKQkrPSBnYi12
aWJyYXRvci5vCiAKICMgR3JleWJ1cyBBdWRpbyBpcyBhIGJ1bmNoIG9mIG1vZHVsZXMKLWdiLWF1
ZGlvLW1vZHVsZS15CTo9IGF1ZGlvX21vZHVsZS5vIGF1ZGlvX3RvcG9sb2d5Lm8KLWdiLWF1ZGlv
LWNvZGVjLXkJOj0gYXVkaW9fY29kZWMubwogZ2ItYXVkaW8tZ2IteQkJOj0gYXVkaW9fZ2Iubwog
Z2ItYXVkaW8tYXBicmlkZ2VhLXkJOj0gYXVkaW9fYXBicmlkZ2VhLm8KIGdiLWF1ZGlvLW1hbmFn
ZXIteQk6PSBhdWRpb19tYW5hZ2VyLm8gYXVkaW9fbWFuYWdlcl9tb2R1bGUubwpAQCAtNDAsOCAr
MzgsNiBAQCBnYi1hdWRpby1tYW5hZ2VyLXkJOj0gYXVkaW9fbWFuYWdlci5vIGF1ZGlvX21hbmFn
ZXJfbW9kdWxlLm8KICNjY2ZsYWdzLXkgKz0gLURHQl9BVURJT19NQU5BR0VSX1NZU0ZTCiAjZW5k
aWYKIAotb2JqLSQoQ09ORklHX0dSRVlCVVNfQVVESU9fTVNNODk5NCkJKz0gZ2ItYXVkaW8tY29k
ZWMubwotb2JqLSQoQ09ORklHX0dSRVlCVVNfQVVESU9fTVNNODk5NCkJKz0gZ2ItYXVkaW8tbW9k
dWxlLm8KIG9iai0kKENPTkZJR19HUkVZQlVTX0FVRElPKQkJKz0gZ2ItYXVkaW8tZ2Iubwogb2Jq
LSQoQ09ORklHX0dSRVlCVVNfQVVESU8pCQkrPSBnYi1hdWRpby1hcGJyaWRnZWEubwogb2JqLSQo
Q09ORklHX0dSRVlCVVNfQVVESU8pCQkrPSBnYi1hdWRpby1tYW5hZ2VyLm8KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL2F1ZGlvX2NvZGVjLmMgYi9kcml2ZXJzL3N0YWdpbmcv
Z3JleWJ1cy9hdWRpb19jb2RlYy5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwODc0
NmM4NWRlYTYuLjAwMDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9hdWRp
b19jb2RlYy5jCisrKyAvZGV2L251bGwKQEAgLTEsMTEwMyArMCwwIEBACi0vLyBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMAotLyoKLSAqIEFQQnJpZGdlIEFMU0EgU29DIGR1bW15IGNv
ZGVjIGRyaXZlcgotICogQ29weXJpZ2h0IDIwMTYgR29vZ2xlIEluYy4KLSAqIENvcHlyaWdodCAy
MDE2IExpbmFybyBMdGQuCi0gKi8KLSNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KLSNpbmNsdWRl
IDxsaW51eC9tb2R1bGUuaD4KLSNpbmNsdWRlIDxsaW51eC9wbV9ydW50aW1lLmg+Ci0jaW5jbHVk
ZSA8c291bmQvc29jLmg+Ci0jaW5jbHVkZSA8c291bmQvcGNtX3BhcmFtcy5oPgotI2luY2x1ZGUg
PHVhcGkvbGludXgvaW5wdXQuaD4KLQotI2luY2x1ZGUgImF1ZGlvX2NvZGVjLmgiCi0jaW5jbHVk
ZSAiYXVkaW9fYXBicmlkZ2VhLmgiCi0jaW5jbHVkZSAiYXVkaW9fbWFuYWdlci5oIgotCi1zdGF0
aWMgc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2Jjb2RlYzsKLQotc3RhdGljIHN0cnVjdCBn
YmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqCi1maW5kX2RhdGEoc3RydWN0IGdiYXVkaW9fbW9kdWxl
X2luZm8gKm1vZHVsZSwgaW50IGlkKQotewotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVjdGlv
biAqZGF0YTsKLQotCWxpc3RfZm9yX2VhY2hfZW50cnkoZGF0YSwgJm1vZHVsZS0+ZGF0YV9saXN0
LCBsaXN0KSB7Ci0JCWlmIChpZCA9PSBkYXRhLT5pZCkKLQkJCXJldHVybiBkYXRhOwotCX0KLQly
ZXR1cm4gTlVMTDsKLX0KLQotc3RhdGljIHN0cnVjdCBnYmF1ZGlvX3N0cmVhbV9wYXJhbXMgKgot
ZmluZF9kYWlfc3RyZWFtX3BhcmFtcyhzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpjb2RlYywg
aW50IGlkLCBpbnQgc3RyZWFtKQotewotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2RhaSAqZGFpOwot
Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeShkYWksICZjb2RlYy0+ZGFpX2xpc3QsIGxpc3QpIHsKLQkJ
aWYgKGRhaS0+aWQgPT0gaWQpCi0JCQlyZXR1cm4gJmRhaS0+cGFyYW1zW3N0cmVhbV07Ci0JfQot
CXJldHVybiBOVUxMOwotfQotCi1zdGF0aWMgaW50IGdiYXVkaW9fbW9kdWxlX2VuYWJsZV90eChz
dHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpjb2RlYywKLQkJCQkgICAgc3RydWN0IGdiYXVkaW9f
bW9kdWxlX2luZm8gKm1vZHVsZSwgaW50IGlkKQotewotCWludCBtb2R1bGVfc3RhdGUsIHJldCA9
IDA7Ci0JdTE2IGRhdGFfY3BvcnQsIGkyc19wb3J0LCBjcG9ydGlkOwotCXU4IHNpZ19iaXRzLCBj
aGFubmVsczsKLQl1MzIgZm9ybWF0LCByYXRlOwotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVj
dGlvbiAqZGF0YTsKLQlzdHJ1Y3QgZ2JhdWRpb19zdHJlYW1fcGFyYW1zICpwYXJhbXM7Ci0KLQkv
KiBmaW5kIHRoZSBkYWkgKi8KLQlkYXRhID0gZmluZF9kYXRhKG1vZHVsZSwgaWQpOwotCWlmICgh
ZGF0YSkgewotCQlkZXZfZXJyKG1vZHVsZS0+ZGV2LCAiJWQ6REFUQSBjb25uZWN0aW9uIG1pc3Np
bmdcbiIsIGlkKTsKLQkJcmV0dXJuIC1FTk9ERVY7Ci0JfQotCW1vZHVsZV9zdGF0ZSA9IGRhdGEt
PnN0YXRlW1NORFJWX1BDTV9TVFJFQU1fUExBWUJBQ0tdOwotCi0JcGFyYW1zID0gZmluZF9kYWlf
c3RyZWFtX3BhcmFtcyhjb2RlYywgaWQsIFNORFJWX1BDTV9TVFJFQU1fUExBWUJBQ0spOwotCWlm
ICghcGFyYW1zKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0byBmZXRjaCBkYWlf
c3RyZWFtIHBvaW50ZXJcbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQkvKiByZWdpc3Rl
ciBjcG9ydCAqLwotCWlmIChtb2R1bGVfc3RhdGUgPCBHQkFVRElPX0NPREVDX1NUQVJUVVApIHsK
LQkJaTJzX3BvcnQgPSAwOwkvKiBmaXhlZCBmb3Igbm93ICovCi0JCWNwb3J0aWQgPSBkYXRhLT5j
b25uZWN0aW9uLT5oZF9jcG9ydF9pZDsKLQkJcmV0ID0gZ2JfYXVkaW9fYXBicmlkZ2VhX3JlZ2lz
dGVyX2Nwb3J0KGRhdGEtPmNvbm5lY3Rpb24sCi0JCQkJCQlpMnNfcG9ydCwgY3BvcnRpZCwKLQkJ
CQkJCUFVRElPX0FQQlJJREdFQV9ESVJFQ1RJT05fVFgpOwotCQlpZiAocmV0KSB7Ci0JCQlkZXZf
ZXJyX3JhdGVsaW1pdGVkKG1vZHVsZS0+ZGV2LAotCQkJCQkgICAgInJlZ19jcG9ydCBmYWlsZWQ6
JWRcbiIsIHJldCk7Ci0JCQlyZXR1cm4gcmV0OwotCQl9Ci0JCWRhdGEtPnN0YXRlW1NORFJWX1BD
TV9TVFJFQU1fUExBWUJBQ0tdID0KLQkJCUdCQVVESU9fQ09ERUNfU1RBUlRVUDsKLQkJZGV2X2Ri
Zyhtb2R1bGUtPmRldiwgIkR5bmFtaWMgUmVnaXN0ZXIgJWQgREFJXG4iLCBjcG9ydGlkKTsKLQl9
Ci0KLQkvKiBod19wYXJhbXMgKi8KLQlpZiAobW9kdWxlX3N0YXRlIDwgR0JBVURJT19DT0RFQ19I
V1BBUkFNUykgewotCQlmb3JtYXQgPSBwYXJhbXMtPmZvcm1hdDsKLQkJY2hhbm5lbHMgPSBwYXJh
bXMtPmNoYW5uZWxzOwotCQlyYXRlID0gcGFyYW1zLT5yYXRlOwotCQlzaWdfYml0cyA9IHBhcmFt
cy0+c2lnX2JpdHM7Ci0JCWRhdGFfY3BvcnQgPSBkYXRhLT5jb25uZWN0aW9uLT5pbnRmX2Nwb3J0
X2lkOwotCQlyZXQgPSBnYl9hdWRpb19nYl9zZXRfcGNtKG1vZHVsZS0+bWdtdF9jb25uZWN0aW9u
LCBkYXRhX2Nwb3J0LAotCQkJCQkgIGZvcm1hdCwgcmF0ZSwgY2hhbm5lbHMsIHNpZ19iaXRzKTsK
LQkJaWYgKHJldCkgewotCQkJZGV2X2Vycl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwgInNldF9w
Y20gZmFpbGVkOiVkXG4iLAotCQkJCQkgICAgcmV0KTsKLQkJCXJldHVybiByZXQ7Ci0JCX0KLQkJ
ZGF0YS0+c3RhdGVbU05EUlZfUENNX1NUUkVBTV9QTEFZQkFDS10gPQotCQkJR0JBVURJT19DT0RF
Q19IV1BBUkFNUzsKLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwgIkR5bmFtaWMgaHdfcGFyYW1zICVk
IERBSVxuIiwgZGF0YV9jcG9ydCk7Ci0JfQotCi0JLyogcHJlcGFyZSAqLwotCWlmIChtb2R1bGVf
c3RhdGUgPCBHQkFVRElPX0NPREVDX1BSRVBBUkUpIHsKLQkJZGF0YV9jcG9ydCA9IGRhdGEtPmNv
bm5lY3Rpb24tPmludGZfY3BvcnRfaWQ7Ci0JCXJldCA9IGdiX2F1ZGlvX2diX3NldF90eF9kYXRh
X3NpemUobW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sCi0JCQkJCQkgICBkYXRhX2Nwb3J0LCAxOTIp
OwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyX3JhdGVsaW1pdGVkKG1vZHVsZS0+ZGV2LAotCQkJ
CQkgICAgInNldF90eF9kYXRhX3NpemUgZmFpbGVkOiVkXG4iLAotCQkJCQkgICAgcmV0KTsKLQkJ
CXJldHVybiByZXQ7Ci0JCX0KLQkJcmV0ID0gZ2JfYXVkaW9fZ2JfYWN0aXZhdGVfdHgobW9kdWxl
LT5tZ210X2Nvbm5lY3Rpb24sCi0JCQkJCSAgICAgIGRhdGFfY3BvcnQpOwotCQlpZiAocmV0KSB7
Ci0JCQlkZXZfZXJyX3JhdGVsaW1pdGVkKG1vZHVsZS0+ZGV2LAotCQkJCQkgICAgImFjdGl2YXRl
X3R4IGZhaWxlZDolZFxuIiwgcmV0KTsKLQkJCXJldHVybiByZXQ7Ci0JCX0KLQkJZGF0YS0+c3Rh
dGVbU05EUlZfUENNX1NUUkVBTV9QTEFZQkFDS10gPQotCQkJR0JBVURJT19DT0RFQ19QUkVQQVJF
OwotCQlkZXZfZGJnKG1vZHVsZS0+ZGV2LCAiRHluYW1pYyBwcmVwYXJlICVkIERBSVxuIiwgZGF0
YV9jcG9ydCk7Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2JhdWRpb19tb2R1
bGVfZGlzYWJsZV90eChzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlLCBpbnQgaWQp
Ci17Ci0JaW50IHJldDsKLQl1MTYgZGF0YV9jcG9ydCwgY3BvcnRpZCwgaTJzX3BvcnQ7Ci0JaW50
IG1vZHVsZV9zdGF0ZTsKLQlzdHJ1Y3QgZ2JhdWRpb19kYXRhX2Nvbm5lY3Rpb24gKmRhdGE7Ci0K
LQkvKiBmaW5kIHRoZSBkYWkgKi8KLQlkYXRhID0gZmluZF9kYXRhKG1vZHVsZSwgaWQpOwotCWlm
ICghZGF0YSkgewotCQlkZXZfZXJyKG1vZHVsZS0+ZGV2LCAiJWQ6REFUQSBjb25uZWN0aW9uIG1p
c3NpbmdcbiIsIGlkKTsKLQkJcmV0dXJuIC1FTk9ERVY7Ci0JfQotCW1vZHVsZV9zdGF0ZSA9IGRh
dGEtPnN0YXRlW1NORFJWX1BDTV9TVFJFQU1fUExBWUJBQ0tdOwotCi0JaWYgKG1vZHVsZV9zdGF0
ZSA+IEdCQVVESU9fQ09ERUNfSFdQQVJBTVMpIHsKLQkJZGF0YV9jcG9ydCA9IGRhdGEtPmNvbm5l
Y3Rpb24tPmludGZfY3BvcnRfaWQ7Ci0JCXJldCA9IGdiX2F1ZGlvX2diX2RlYWN0aXZhdGVfdHgo
bW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sCi0JCQkJCQlkYXRhX2Nwb3J0KTsKLQkJaWYgKHJldCkg
ewotCQkJZGV2X2Vycl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwKLQkJCQkJICAgICJkZWFjdGl2
YXRlX3R4IGZhaWxlZDolZFxuIiwgcmV0KTsKLQkJCXJldHVybiByZXQ7Ci0JCX0KLQkJZGV2X2Ri
Zyhtb2R1bGUtPmRldiwgIkR5bmFtaWMgZGVhY3RpdmF0ZSAlZCBEQUlcbiIsIGRhdGFfY3BvcnQp
OwotCQlkYXRhLT5zdGF0ZVtTTkRSVl9QQ01fU1RSRUFNX1BMQVlCQUNLXSA9Ci0JCQlHQkFVRElP
X0NPREVDX0hXUEFSQU1TOwotCX0KLQotCWlmIChtb2R1bGVfc3RhdGUgPiBHQkFVRElPX0NPREVD
X1NIVVRET1dOKSB7Ci0JCWkyc19wb3J0ID0gMDsJLyogZml4ZWQgZm9yIG5vdyAqLwotCQljcG9y
dGlkID0gZGF0YS0+Y29ubmVjdGlvbi0+aGRfY3BvcnRfaWQ7Ci0JCXJldCA9IGdiX2F1ZGlvX2Fw
YnJpZGdlYV91bnJlZ2lzdGVyX2Nwb3J0KGRhdGEtPmNvbm5lY3Rpb24sCi0JCQkJCQlpMnNfcG9y
dCwgY3BvcnRpZCwKLQkJCQkJCUFVRElPX0FQQlJJREdFQV9ESVJFQ1RJT05fVFgpOwotCQlpZiAo
cmV0KSB7Ci0JCQlkZXZfZXJyX3JhdGVsaW1pdGVkKG1vZHVsZS0+ZGV2LAotCQkJCQkgICAgInVu
cmVnaXN0ZXJfY3BvcnQgZmFpbGVkOiVkXG4iLAotCQkJCQkgICAgcmV0KTsKLQkJCXJldHVybiBy
ZXQ7Ci0JCX0KLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwgIkR5bmFtaWMgVW5yZWdpc3RlciAlZCBE
QUlcbiIsIGNwb3J0aWQpOwotCQlkYXRhLT5zdGF0ZVtTTkRSVl9QQ01fU1RSRUFNX1BMQVlCQUNL
XSA9Ci0JCQlHQkFVRElPX0NPREVDX1NIVVRET1dOOwotCX0KLQotCXJldHVybiAwOwotfQotCi1z
dGF0aWMgaW50IGdiYXVkaW9fbW9kdWxlX2VuYWJsZV9yeChzdHJ1Y3QgZ2JhdWRpb19jb2RlY19p
bmZvICpjb2RlYywKLQkJCQkgICAgc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSwg
aW50IGlkKQotewotCWludCBtb2R1bGVfc3RhdGUsIHJldCA9IDA7Ci0JdTE2IGRhdGFfY3BvcnQs
IGkyc19wb3J0LCBjcG9ydGlkOwotCXU4IHNpZ19iaXRzLCBjaGFubmVsczsKLQl1MzIgZm9ybWF0
LCByYXRlOwotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGF0YTsKLQlzdHJ1Y3Qg
Z2JhdWRpb19zdHJlYW1fcGFyYW1zICpwYXJhbXM7Ci0KLQkvKiBmaW5kIHRoZSBkYWkgKi8KLQlk
YXRhID0gZmluZF9kYXRhKG1vZHVsZSwgaWQpOwotCWlmICghZGF0YSkgewotCQlkZXZfZXJyKG1v
ZHVsZS0+ZGV2LCAiJWQ6REFUQSBjb25uZWN0aW9uIG1pc3NpbmdcbiIsIGlkKTsKLQkJcmV0dXJu
IC1FTk9ERVY7Ci0JfQotCW1vZHVsZV9zdGF0ZSA9IGRhdGEtPnN0YXRlW1NORFJWX1BDTV9TVFJF
QU1fQ0FQVFVSRV07Ci0KLQlwYXJhbXMgPSBmaW5kX2RhaV9zdHJlYW1fcGFyYW1zKGNvZGVjLCBp
ZCwgU05EUlZfUENNX1NUUkVBTV9DQVBUVVJFKTsKLQlpZiAoIXBhcmFtcykgewotCQlkZXZfZXJy
KGNvZGVjLT5kZXYsICJGYWlsZWQgdG8gZmV0Y2ggZGFpX3N0cmVhbSBwb2ludGVyXG4iKTsKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JLyogcmVnaXN0ZXIgY3BvcnQgKi8KLQlpZiAobW9kdWxl
X3N0YXRlIDwgR0JBVURJT19DT0RFQ19TVEFSVFVQKSB7Ci0JCWkyc19wb3J0ID0gMDsJLyogZml4
ZWQgZm9yIG5vdyAqLwotCQljcG9ydGlkID0gZGF0YS0+Y29ubmVjdGlvbi0+aGRfY3BvcnRfaWQ7
Ci0JCXJldCA9IGdiX2F1ZGlvX2FwYnJpZGdlYV9yZWdpc3Rlcl9jcG9ydChkYXRhLT5jb25uZWN0
aW9uLAotCQkJCQkJaTJzX3BvcnQsIGNwb3J0aWQsCi0JCQkJCQlBVURJT19BUEJSSURHRUFfRElS
RUNUSU9OX1JYKTsKLQkJaWYgKHJldCkgewotCQkJZGV2X2Vycl9yYXRlbGltaXRlZChtb2R1bGUt
PmRldiwKLQkJCQkJICAgICJyZWdfY3BvcnQgZmFpbGVkOiVkXG4iLCByZXQpOwotCQkJcmV0dXJu
IHJldDsKLQkJfQotCQlkYXRhLT5zdGF0ZVtTTkRSVl9QQ01fU1RSRUFNX0NBUFRVUkVdID0KLQkJ
CUdCQVVESU9fQ09ERUNfU1RBUlRVUDsKLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwgIkR5bmFtaWMg
UmVnaXN0ZXIgJWQgREFJXG4iLCBjcG9ydGlkKTsKLQl9Ci0KLQkvKiBod19wYXJhbXMgKi8KLQlp
ZiAobW9kdWxlX3N0YXRlIDwgR0JBVURJT19DT0RFQ19IV1BBUkFNUykgewotCQlmb3JtYXQgPSBw
YXJhbXMtPmZvcm1hdDsKLQkJY2hhbm5lbHMgPSBwYXJhbXMtPmNoYW5uZWxzOwotCQlyYXRlID0g
cGFyYW1zLT5yYXRlOwotCQlzaWdfYml0cyA9IHBhcmFtcy0+c2lnX2JpdHM7Ci0JCWRhdGFfY3Bv
cnQgPSBkYXRhLT5jb25uZWN0aW9uLT5pbnRmX2Nwb3J0X2lkOwotCQlyZXQgPSBnYl9hdWRpb19n
Yl9zZXRfcGNtKG1vZHVsZS0+bWdtdF9jb25uZWN0aW9uLCBkYXRhX2Nwb3J0LAotCQkJCQkgIGZv
cm1hdCwgcmF0ZSwgY2hhbm5lbHMsIHNpZ19iaXRzKTsKLQkJaWYgKHJldCkgewotCQkJZGV2X2Vy
cl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwgInNldF9wY20gZmFpbGVkOiVkXG4iLAotCQkJCQkg
ICAgcmV0KTsKLQkJCXJldHVybiByZXQ7Ci0JCX0KLQkJZGF0YS0+c3RhdGVbU05EUlZfUENNX1NU
UkVBTV9DQVBUVVJFXSA9Ci0JCQlHQkFVRElPX0NPREVDX0hXUEFSQU1TOwotCQlkZXZfZGJnKG1v
ZHVsZS0+ZGV2LCAiRHluYW1pYyBod19wYXJhbXMgJWQgREFJXG4iLCBkYXRhX2Nwb3J0KTsKLQl9
Ci0KLQkvKiBwcmVwYXJlICovCi0JaWYgKG1vZHVsZV9zdGF0ZSA8IEdCQVVESU9fQ09ERUNfUFJF
UEFSRSkgewotCQlkYXRhX2Nwb3J0ID0gZGF0YS0+Y29ubmVjdGlvbi0+aW50Zl9jcG9ydF9pZDsK
LQkJcmV0ID0gZ2JfYXVkaW9fZ2Jfc2V0X3J4X2RhdGFfc2l6ZShtb2R1bGUtPm1nbXRfY29ubmVj
dGlvbiwKLQkJCQkJCSAgIGRhdGFfY3BvcnQsIDE5Mik7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9l
cnJfcmF0ZWxpbWl0ZWQobW9kdWxlLT5kZXYsCi0JCQkJCSAgICAic2V0X3J4X2RhdGFfc2l6ZSBm
YWlsZWQ6JWRcbiIsCi0JCQkJCSAgICByZXQpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCQlyZXQg
PSBnYl9hdWRpb19nYl9hY3RpdmF0ZV9yeChtb2R1bGUtPm1nbXRfY29ubmVjdGlvbiwKLQkJCQkJ
ICAgICAgZGF0YV9jcG9ydCk7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQo
bW9kdWxlLT5kZXYsCi0JCQkJCSAgICAiYWN0aXZhdGVfcnggZmFpbGVkOiVkXG4iLCByZXQpOwot
CQkJcmV0dXJuIHJldDsKLQkJfQotCQlkYXRhLT5zdGF0ZVtTTkRSVl9QQ01fU1RSRUFNX0NBUFRV
UkVdID0KLQkJCUdCQVVESU9fQ09ERUNfUFJFUEFSRTsKLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwg
IkR5bmFtaWMgcHJlcGFyZSAlZCBEQUlcbiIsIGRhdGFfY3BvcnQpOwotCX0KLQotCXJldHVybiAw
OwotfQotCi1zdGF0aWMgaW50IGdiYXVkaW9fbW9kdWxlX2Rpc2FibGVfcngoc3RydWN0IGdiYXVk
aW9fbW9kdWxlX2luZm8gKm1vZHVsZSwgaW50IGlkKQotewotCWludCByZXQ7Ci0JdTE2IGRhdGFf
Y3BvcnQsIGNwb3J0aWQsIGkyc19wb3J0OwotCWludCBtb2R1bGVfc3RhdGU7Ci0Jc3RydWN0IGdi
YXVkaW9fZGF0YV9jb25uZWN0aW9uICpkYXRhOwotCi0JLyogZmluZCB0aGUgZGFpICovCi0JZGF0
YSA9IGZpbmRfZGF0YShtb2R1bGUsIGlkKTsKLQlpZiAoIWRhdGEpIHsKLQkJZGV2X2Vycihtb2R1
bGUtPmRldiwgIiVkOkRBVEEgY29ubmVjdGlvbiBtaXNzaW5nXG4iLCBpZCk7Ci0JCXJldHVybiAt
RU5PREVWOwotCX0KLQltb2R1bGVfc3RhdGUgPSBkYXRhLT5zdGF0ZVtTTkRSVl9QQ01fU1RSRUFN
X0NBUFRVUkVdOwotCi0JaWYgKG1vZHVsZV9zdGF0ZSA+IEdCQVVESU9fQ09ERUNfSFdQQVJBTVMp
IHsKLQkJZGF0YV9jcG9ydCA9IGRhdGEtPmNvbm5lY3Rpb24tPmludGZfY3BvcnRfaWQ7Ci0JCXJl
dCA9IGdiX2F1ZGlvX2diX2RlYWN0aXZhdGVfcngobW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sCi0J
CQkJCQlkYXRhX2Nwb3J0KTsKLQkJaWYgKHJldCkgewotCQkJZGV2X2Vycl9yYXRlbGltaXRlZCht
b2R1bGUtPmRldiwKLQkJCQkJICAgICJkZWFjdGl2YXRlX3J4IGZhaWxlZDolZFxuIiwgcmV0KTsK
LQkJCXJldHVybiByZXQ7Ci0JCX0KLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwgIkR5bmFtaWMgZGVh
Y3RpdmF0ZSAlZCBEQUlcbiIsIGRhdGFfY3BvcnQpOwotCQlkYXRhLT5zdGF0ZVtTTkRSVl9QQ01f
U1RSRUFNX0NBUFRVUkVdID0KLQkJCUdCQVVESU9fQ09ERUNfSFdQQVJBTVM7Ci0JfQotCi0JaWYg
KG1vZHVsZV9zdGF0ZSA+IEdCQVVESU9fQ09ERUNfU0hVVERPV04pIHsKLQkJaTJzX3BvcnQgPSAw
OwkvKiBmaXhlZCBmb3Igbm93ICovCi0JCWNwb3J0aWQgPSBkYXRhLT5jb25uZWN0aW9uLT5oZF9j
cG9ydF9pZDsKLQkJcmV0ID0gZ2JfYXVkaW9fYXBicmlkZ2VhX3VucmVnaXN0ZXJfY3BvcnQoZGF0
YS0+Y29ubmVjdGlvbiwKLQkJCQkJCWkyc19wb3J0LCBjcG9ydGlkLAotCQkJCQkJQVVESU9fQVBC
UklER0VBX0RJUkVDVElPTl9SWCk7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnJfcmF0ZWxpbWl0
ZWQobW9kdWxlLT5kZXYsCi0JCQkJCSAgICAidW5yZWdpc3Rlcl9jcG9ydCBmYWlsZWQ6JWRcbiIs
Ci0JCQkJCSAgICByZXQpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCQlkZXZfZGJnKG1vZHVsZS0+
ZGV2LCAiRHluYW1pYyBVbnJlZ2lzdGVyICVkIERBSVxuIiwgY3BvcnRpZCk7Ci0JCWRhdGEtPnN0
YXRlW1NORFJWX1BDTV9TVFJFQU1fQ0FQVFVSRV0gPQotCQkJR0JBVURJT19DT0RFQ19TSFVURE9X
TjsKLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotaW50IGdiYXVkaW9fbW9kdWxlX3VwZGF0ZShzdHJ1
Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpjb2RlYywKLQkJCSAgc3RydWN0IHNuZF9zb2NfZGFwbV93
aWRnZXQgKncsCi0JCQkgIHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGUsIGludCBl
bmFibGUpCi17Ci0JaW50IGRhaV9pZCwgcmV0OwotCWNoYXIgaW50Zl9uYW1lW05BTUVfU0laRV0s
IGRpcltOQU1FX1NJWkVdOwotCi0JZGV2X2RiZyhtb2R1bGUtPmRldiwgIiVzOk1vZHVsZSB1cGRh
dGUgJXMgc2VxdWVuY2VcbiIsIHctPm5hbWUsCi0JCWVuYWJsZSA/ICJFbmFibGUiIDogIkRpc2Fi
bGUiKTsKLQotCWlmICgody0+aWQgIT0gc25kX3NvY19kYXBtX2FpZl9pbikgJiYgKHctPmlkICE9
IHNuZF9zb2NfZGFwbV9haWZfb3V0KSkgewotCQlkZXZfZGJnKGNvZGVjLT5kZXYsICJObyBhY3Rp
b24gcmVxdWlyZWQgZm9yICVzXG4iLCB3LT5uYW1lKTsKLQkJcmV0dXJuIDA7Ci0JfQotCi0JLyog
cGFyc2UgZGFpX2lkIGZyb20gQUlGIHdpZGdldCdzIHN0cmVhbV9uYW1lICovCi0JcmV0ID0gc3Nj
YW5mKHctPnNuYW1lLCAiJXMgJWQgJXMiLCBpbnRmX25hbWUsICZkYWlfaWQsIGRpcik7Ci0JaWYg
KHJldCA8IDMpIHsKLQkJZGV2X2Vycihjb2RlYy0+ZGV2LCAiRXJyb3Igd2hpbGUgcGFyc2luZyBk
YWlfaWQgZm9yICVzXG4iLAotCQkJdy0+bmFtZSk7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQot
CW11dGV4X2xvY2soJmNvZGVjLT5sb2NrKTsKLQlpZiAody0+aWQgPT0gc25kX3NvY19kYXBtX2Fp
Zl9pbikgewotCQlpZiAoZW5hYmxlKQotCQkJcmV0ID0gZ2JhdWRpb19tb2R1bGVfZW5hYmxlX3R4
KGNvZGVjLCBtb2R1bGUsIGRhaV9pZCk7Ci0JCWVsc2UKLQkJCXJldCA9IGdiYXVkaW9fbW9kdWxl
X2Rpc2FibGVfdHgobW9kdWxlLCBkYWlfaWQpOwotCX0gZWxzZSBpZiAody0+aWQgPT0gc25kX3Nv
Y19kYXBtX2FpZl9vdXQpIHsKLQkJaWYgKGVuYWJsZSkKLQkJCXJldCA9IGdiYXVkaW9fbW9kdWxl
X2VuYWJsZV9yeChjb2RlYywgbW9kdWxlLCBkYWlfaWQpOwotCQllbHNlCi0JCQlyZXQgPSBnYmF1
ZGlvX21vZHVsZV9kaXNhYmxlX3J4KG1vZHVsZSwgZGFpX2lkKTsKLQl9Ci0KLQltdXRleF91bmxv
Y2soJmNvZGVjLT5sb2NrKTsKLQotCXJldHVybiByZXQ7Ci19Ci1FWFBPUlRfU1lNQk9MKGdiYXVk
aW9fbW9kdWxlX3VwZGF0ZSk7Ci0KLS8qCi0gKiBjb2RlYyBEQUkgb3BzCi0gKi8KLXN0YXRpYyBp
bnQgZ2Jjb2RlY19zdGFydHVwKHN0cnVjdCBzbmRfcGNtX3N1YnN0cmVhbSAqc3Vic3RyZWFtLAot
CQkJICAgc3RydWN0IHNuZF9zb2NfZGFpICpkYWkpCi17Ci0Jc3RydWN0IGdiYXVkaW9fY29kZWNf
aW5mbyAqY29kZWMgPSBkZXZfZ2V0X2RydmRhdGEoZGFpLT5kZXYpOwotCXN0cnVjdCBnYmF1ZGlv
X3N0cmVhbV9wYXJhbXMgKnBhcmFtczsKLQotCW11dGV4X2xvY2soJmNvZGVjLT5sb2NrKTsKLQot
CWlmIChsaXN0X2VtcHR5KCZjb2RlYy0+bW9kdWxlX2xpc3QpKSB7Ci0JCWRldl9lcnIoY29kZWMt
PmRldiwgIk5vIGNvZGVjIG1vZHVsZSBhdmFpbGFibGVcbiIpOwotCQltdXRleF91bmxvY2soJmNv
ZGVjLT5sb2NrKTsKLQkJcmV0dXJuIC1FTk9ERVY7Ci0JfQotCi0JcGFyYW1zID0gZmluZF9kYWlf
c3RyZWFtX3BhcmFtcyhjb2RlYywgZGFpLT5pZCwgc3Vic3RyZWFtLT5zdHJlYW0pOwotCWlmICgh
cGFyYW1zKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0byBmZXRjaCBkYWlfc3Ry
ZWFtIHBvaW50ZXJcbiIpOwotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJu
IC1FSU5WQUw7Ci0JfQotCXBhcmFtcy0+c3RhdGUgPSBHQkFVRElPX0NPREVDX1NUQVJUVVA7Ci0J
bXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JLyogdG8gcHJldmVudCBzdXNwZW5kIGluIGNh
c2Ugb2YgYWN0aXZlIGF1ZGlvICovCi0JcG1fc3RheV9hd2FrZShkYWktPmRldik7Ci0KLQlyZXR1
cm4gMDsKLX0KLQotc3RhdGljIHZvaWQgZ2Jjb2RlY19zaHV0ZG93bihzdHJ1Y3Qgc25kX3BjbV9z
dWJzdHJlYW0gKnN1YnN0cmVhbSwKLQkJCSAgICAgc3RydWN0IHNuZF9zb2NfZGFpICpkYWkpCi17
Ci0Jc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqY29kZWMgPSBkZXZfZ2V0X2RydmRhdGEoZGFp
LT5kZXYpOwotCXN0cnVjdCBnYmF1ZGlvX3N0cmVhbV9wYXJhbXMgKnBhcmFtczsKLQotCW11dGV4
X2xvY2soJmNvZGVjLT5sb2NrKTsKLQotCWlmIChsaXN0X2VtcHR5KCZjb2RlYy0+bW9kdWxlX2xp
c3QpKQotCQlkZXZfaW5mbyhjb2RlYy0+ZGV2LCAiTm8gY29kZWMgbW9kdWxlIGF2YWlsYWJsZSBk
dXJpbmcgc2h1dGRvd25cbiIpOwotCi0JcGFyYW1zID0gZmluZF9kYWlfc3RyZWFtX3BhcmFtcyhj
b2RlYywgZGFpLT5pZCwgc3Vic3RyZWFtLT5zdHJlYW0pOwotCWlmICghcGFyYW1zKSB7Ci0JCWRl
dl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0byBmZXRjaCBkYWlfc3RyZWFtIHBvaW50ZXJcbiIp
OwotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuOwotCX0KLQlwYXJhbXMt
PnN0YXRlID0gR0JBVURJT19DT0RFQ19TSFVURE9XTjsKLQltdXRleF91bmxvY2soJmNvZGVjLT5s
b2NrKTsKLQlwbV9yZWxheChkYWktPmRldik7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19od19w
YXJhbXMoc3RydWN0IHNuZF9wY21fc3Vic3RyZWFtICpzdWJzdHJlYW0sCi0JCQkgICAgIHN0cnVj
dCBzbmRfcGNtX2h3X3BhcmFtcyAqaHdwYXJhbXMsCi0JCQkgICAgIHN0cnVjdCBzbmRfc29jX2Rh
aSAqZGFpKQotewotCWludCByZXQ7Ci0JdTggc2lnX2JpdHMsIGNoYW5uZWxzOwotCXUzMiBmb3Jt
YXQsIHJhdGU7Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKLQlzdHJ1Y3Qg
Z2JhdWRpb19kYXRhX2Nvbm5lY3Rpb24gKmRhdGE7Ci0Jc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxl
OwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmNvZGVjID0gZGV2X2dldF9kcnZkYXRhKGRh
aS0+ZGV2KTsKLQlzdHJ1Y3QgZ2JhdWRpb19zdHJlYW1fcGFyYW1zICpwYXJhbXM7Ci0KLQltdXRl
eF9sb2NrKCZjb2RlYy0+bG9jayk7Ci0KLQlpZiAobGlzdF9lbXB0eSgmY29kZWMtPm1vZHVsZV9s
aXN0KSkgewotCQlkZXZfZXJyKGNvZGVjLT5kZXYsICJObyBjb2RlYyBtb2R1bGUgYXZhaWxhYmxl
XG4iKTsKLQkJbXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVybiAtRU5PREVWOwot
CX0KLQotCS8qCi0JICogYXNzdW1pbmcsIGN1cnJlbnRseSBvbmx5IDQ4MDAwIEh6LCAxNkJJVF9M
RSwgc3RlcmVvCi0JICogaXMgc3VwcG9ydGVkLCB2YWxpZGF0ZSBwYXJhbXMgYmVmb3JlIGNvbmZp
Z3VyaW5nIGNvZGVjCi0JICovCi0JaWYgKHBhcmFtc19jaGFubmVscyhod3BhcmFtcykgIT0gMikg
ewotCQlkZXZfZXJyKGRhaS0+ZGV2LCAiSW52YWxpZCBjaGFubmVsIGNvdW50OiVkXG4iLAotCQkJ
cGFyYW1zX2NoYW5uZWxzKGh3cGFyYW1zKSk7Ci0JCW11dGV4X3VubG9jaygmY29kZWMtPmxvY2sp
OwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0JY2hhbm5lbHMgPSBwYXJhbXNfY2hhbm5lbHMoaHdw
YXJhbXMpOwotCi0JaWYgKHBhcmFtc19yYXRlKGh3cGFyYW1zKSAhPSA0ODAwMCkgewotCQlkZXZf
ZXJyKGRhaS0+ZGV2LCAiSW52YWxpZCBzYW1wbGluZyByYXRlOiVkXG4iLAotCQkJcGFyYW1zX3Jh
dGUoaHdwYXJhbXMpKTsKLQkJbXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVybiAt
RUlOVkFMOwotCX0KLQlyYXRlID0gR0JfQVVESU9fUENNX1JBVEVfNDgwMDA7Ci0KLQlpZiAocGFy
YW1zX2Zvcm1hdChod3BhcmFtcykgIT0gU05EUlZfUENNX0ZPUk1BVF9TMTZfTEUpIHsKLQkJZGV2
X2VycihkYWktPmRldiwgIkludmFsaWQgZm9ybWF0OiVkXG4iLAotCQkJcGFyYW1zX2Zvcm1hdCho
d3BhcmFtcykpOwotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuIC1FSU5W
QUw7Ci0JfQotCWZvcm1hdCA9IEdCX0FVRElPX1BDTV9GTVRfUzE2X0xFOwotCi0JLyogZmluZCB0
aGUgZGF0YSBjb25uZWN0aW9uICovCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShtb2R1bGUsICZjb2Rl
Yy0+bW9kdWxlX2xpc3QsIGxpc3QpIHsKLQkJZGF0YSA9IGZpbmRfZGF0YShtb2R1bGUsIGRhaS0+
aWQpOwotCQlpZiAoZGF0YSkKLQkJCWJyZWFrOwotCX0KLQotCWlmICghZGF0YSkgewotCQlkZXZf
ZXJyKGRhaS0+ZGV2LCAiREFUQSBjb25uZWN0aW9uIG1pc3NpbmdcbiIpOwotCQltdXRleF91bmxv
Y2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JcGFyYW1zID0gZmlu
ZF9kYWlfc3RyZWFtX3BhcmFtcyhjb2RlYywgZGFpLT5pZCwgc3Vic3RyZWFtLT5zdHJlYW0pOwot
CWlmICghcGFyYW1zKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0byBmZXRjaCBk
YWlfc3RyZWFtIHBvaW50ZXJcbiIpOwotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JYnVuZGxlID0gdG9fZ2JfYnVuZGxlKG1vZHVsZS0+ZGV2
KTsKLQlyZXQgPSBnYl9wbV9ydW50aW1lX2dldF9zeW5jKGJ1bmRsZSk7Ci0JaWYgKHJldCkgewot
CQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlyZXQg
PSBnYl9hdWRpb19hcGJyaWRnZWFfc2V0X2NvbmZpZyhkYXRhLT5jb25uZWN0aW9uLCAwLAotCQkJ
CQkgICAgQVVESU9fQVBCUklER0VBX1BDTV9GTVRfMTYsCi0JCQkJCSAgICBBVURJT19BUEJSSURH
RUFfUENNX1JBVEVfNDgwMDAsCi0JCQkJCSAgICA2MTQ0MDAwKTsKLQlpZiAocmV0KSB7Ci0JCWRl
dl9lcnJfcmF0ZWxpbWl0ZWQoZGFpLT5kZXYsICIlZDogRXJyb3IgZHVyaW5nIHNldF9jb25maWdc
biIsCi0JCQkJICAgIHJldCk7Ci0JCW11dGV4X3VubG9jaygmY29kZWMtPmxvY2spOwotCQlyZXR1
cm4gcmV0OwotCX0KLQotCWdiX3BtX3J1bnRpbWVfcHV0X25vaWRsZShidW5kbGUpOwotCi0JaWYg
KHN1YnN0cmVhbS0+c3RyZWFtID09IFNORFJWX1BDTV9TVFJFQU1fUExBWUJBQ0spCi0JCXNpZ19i
aXRzID0gZGFpLT5kcml2ZXItPnBsYXliYWNrLnNpZ19iaXRzOwotCWVsc2UKLQkJc2lnX2JpdHMg
PSBkYWktPmRyaXZlci0+Y2FwdHVyZS5zaWdfYml0czsKLQotCXBhcmFtcy0+c3RhdGUgPSBHQkFV
RElPX0NPREVDX0hXUEFSQU1TOwotCXBhcmFtcy0+Zm9ybWF0ID0gZm9ybWF0OwotCXBhcmFtcy0+
cmF0ZSA9IHJhdGU7Ci0JcGFyYW1zLT5jaGFubmVscyA9IGNoYW5uZWxzOwotCXBhcmFtcy0+c2ln
X2JpdHMgPSBzaWdfYml0czsKLQotCW11dGV4X3VubG9jaygmY29kZWMtPmxvY2spOwotCXJldHVy
biAwOwotfQotCi1zdGF0aWMgaW50IGdiY29kZWNfcHJlcGFyZShzdHJ1Y3Qgc25kX3BjbV9zdWJz
dHJlYW0gKnN1YnN0cmVhbSwKLQkJCSAgIHN0cnVjdCBzbmRfc29jX2RhaSAqZGFpKQotewotCWlu
dCByZXQ7Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKLQlzdHJ1Y3QgZ2Jh
dWRpb19kYXRhX2Nvbm5lY3Rpb24gKmRhdGE7Ci0Jc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwot
CXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmNvZGVjID0gZGV2X2dldF9kcnZkYXRhKGRhaS0+
ZGV2KTsKLQlzdHJ1Y3QgZ2JhdWRpb19zdHJlYW1fcGFyYW1zICpwYXJhbXM7Ci0KLQltdXRleF9s
b2NrKCZjb2RlYy0+bG9jayk7Ci0KLQlpZiAobGlzdF9lbXB0eSgmY29kZWMtPm1vZHVsZV9saXN0
KSkgewotCQlkZXZfZXJyKGNvZGVjLT5kZXYsICJObyBjb2RlYyBtb2R1bGUgYXZhaWxhYmxlXG4i
KTsKLQkJbXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVybiAtRU5PREVWOwotCX0K
LQotCWxpc3RfZm9yX2VhY2hfZW50cnkobW9kdWxlLCAmY29kZWMtPm1vZHVsZV9saXN0LCBsaXN0
KSB7Ci0JCS8qIGZpbmQgdGhlIGRhaSAqLwotCQlkYXRhID0gZmluZF9kYXRhKG1vZHVsZSwgZGFp
LT5pZCk7Ci0JCWlmIChkYXRhKQotCQkJYnJlYWs7Ci0JfQotCWlmICghZGF0YSkgewotCQlkZXZf
ZXJyKGRhaS0+ZGV2LCAiREFUQSBjb25uZWN0aW9uIG1pc3NpbmdcbiIpOwotCQltdXRleF91bmxv
Y2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuIC1FTk9ERVY7Ci0JfQotCi0JcGFyYW1zID0gZmlu
ZF9kYWlfc3RyZWFtX3BhcmFtcyhjb2RlYywgZGFpLT5pZCwgc3Vic3RyZWFtLT5zdHJlYW0pOwot
CWlmICghcGFyYW1zKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0byBmZXRjaCBk
YWlfc3RyZWFtIHBvaW50ZXJcbiIpOwotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJ
cmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JYnVuZGxlID0gdG9fZ2JfYnVuZGxlKG1vZHVsZS0+ZGV2
KTsKLQlyZXQgPSBnYl9wbV9ydW50aW1lX2dldF9zeW5jKGJ1bmRsZSk7Ci0JaWYgKHJldCkgewot
CQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlzd2l0
Y2ggKHN1YnN0cmVhbS0+c3RyZWFtKSB7Ci0JY2FzZSBTTkRSVl9QQ01fU1RSRUFNX1BMQVlCQUNL
OgotCQlyZXQgPSBnYl9hdWRpb19hcGJyaWRnZWFfc2V0X3R4X2RhdGFfc2l6ZShkYXRhLT5jb25u
ZWN0aW9uLCAwLAotCQkJCQkJCSAgMTkyKTsKLQkJYnJlYWs7Ci0JY2FzZSBTTkRSVl9QQ01fU1RS
RUFNX0NBUFRVUkU6Ci0JCXJldCA9IGdiX2F1ZGlvX2FwYnJpZGdlYV9zZXRfcnhfZGF0YV9zaXpl
KGRhdGEtPmNvbm5lY3Rpb24sIDAsCi0JCQkJCQkJICAxOTIpOwotCQlicmVhazsKLQl9Ci0JaWYg
KHJldCkgewotCQltdXRleF91bmxvY2soJmNvZGVjLT5sb2NrKTsKLQkJZGV2X2Vycl9yYXRlbGlt
aXRlZChkYWktPmRldiwgInNldF9kYXRhX3NpemUgZmFpbGVkOiVkXG4iLAotCQkJCSAgICByZXQp
OwotCQlyZXR1cm4gcmV0OwotCX0KLQotCWdiX3BtX3J1bnRpbWVfcHV0X25vaWRsZShidW5kbGUp
OwotCi0JcGFyYW1zLT5zdGF0ZSA9IEdCQVVESU9fQ09ERUNfUFJFUEFSRTsKLQltdXRleF91bmxv
Y2soJmNvZGVjLT5sb2NrKTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBnYmNvZGVjX211
dGVfc3RyZWFtKHN0cnVjdCBzbmRfc29jX2RhaSAqZGFpLCBpbnQgbXV0ZSwgaW50IHN0cmVhbSkK
LXsKLQlpbnQgcmV0OwotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGF0YTsKLQlz
dHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBnYl9idW5kbGUgKmJ1
bmRsZTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpjb2RlYyA9IGRldl9nZXRfZHJ2ZGF0
YShkYWktPmRldik7Ci0Jc3RydWN0IGdiYXVkaW9fc3RyZWFtX3BhcmFtcyAqcGFyYW1zOwotCi0J
ZGV2X2RiZyhkYWktPmRldiwgIk11dGU6JWQsIERpcmVjdGlvbjolc1xuIiwgbXV0ZSwKLQkJc3Ry
ZWFtID8gIkNBUFRVUkUiIDogIlBMQVlCQUNLIik7Ci0KLQltdXRleF9sb2NrKCZjb2RlYy0+bG9j
ayk7Ci0KLQlwYXJhbXMgPSBmaW5kX2RhaV9zdHJlYW1fcGFyYW1zKGNvZGVjLCBkYWktPmlkLCBz
dHJlYW0pOwotCWlmICghcGFyYW1zKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkZhaWxlZCB0
byBmZXRjaCBkYWlfc3RyZWFtIHBvaW50ZXJcbiIpOwotCQltdXRleF91bmxvY2soJmNvZGVjLT5s
b2NrKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JaWYgKGxpc3RfZW1wdHkoJmNvZGVjLT5t
b2R1bGVfbGlzdCkpIHsKLQkJZGV2X2Vycihjb2RlYy0+ZGV2LCAiTm8gY29kZWMgbW9kdWxlIGF2
YWlsYWJsZVxuIik7Ci0JCWlmIChtdXRlKSB7Ci0JCQlwYXJhbXMtPnN0YXRlID0gR0JBVURJT19D
T0RFQ19TVE9QOwotCQkJcmV0ID0gMDsKLQkJfSBlbHNlIHsKLQkJCXJldCA9IC1FTk9ERVY7Ci0J
CX0KLQkJbXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCi0J
bGlzdF9mb3JfZWFjaF9lbnRyeShtb2R1bGUsICZjb2RlYy0+bW9kdWxlX2xpc3QsIGxpc3QpIHsK
LQkJLyogZmluZCB0aGUgZGFpICovCi0JCWRhdGEgPSBmaW5kX2RhdGEobW9kdWxlLCBkYWktPmlk
KTsKLQkJaWYgKGRhdGEpCi0JCQlicmVhazsKLQl9Ci0JaWYgKCFkYXRhKSB7Ci0JCWRldl9lcnIo
ZGFpLT5kZXYsICIlczolcyBEQVRBIGNvbm5lY3Rpb24gbWlzc2luZ1xuIiwKLQkJCWRhaS0+bmFt
ZSwgbW9kdWxlLT5uYW1lKTsKLQkJbXV0ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVy
biAtRU5PREVWOwotCX0KLQotCWJ1bmRsZSA9IHRvX2diX2J1bmRsZShtb2R1bGUtPmRldik7Ci0J
cmV0ID0gZ2JfcG1fcnVudGltZV9nZXRfc3luYyhidW5kbGUpOwotCWlmIChyZXQpIHsKLQkJbXV0
ZXhfdW5sb2NrKCZjb2RlYy0+bG9jayk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCi0JaWYgKCFtdXRl
ICYmICFzdHJlYW0pIHsvKiBzdGFydCBwbGF5YmFjayAqLwotCQlyZXQgPSBnYl9hdWRpb19hcGJy
aWRnZWFfcHJlcGFyZV90eChkYXRhLT5jb25uZWN0aW9uLAotCQkJCQkJICAgIDApOwotCQlpZiAo
IXJldCkKLQkJCXJldCA9IGdiX2F1ZGlvX2FwYnJpZGdlYV9zdGFydF90eChkYXRhLT5jb25uZWN0
aW9uLAotCQkJCQkJCSAgMCwgMCk7Ci0JCXBhcmFtcy0+c3RhdGUgPSBHQkFVRElPX0NPREVDX1NU
QVJUOwotCX0gZWxzZSBpZiAoIW11dGUgJiYgc3RyZWFtKSB7Lyogc3RhcnQgY2FwdHVyZSAqLwot
CQlyZXQgPSBnYl9hdWRpb19hcGJyaWRnZWFfcHJlcGFyZV9yeChkYXRhLT5jb25uZWN0aW9uLAot
CQkJCQkJICAgIDApOwotCQlpZiAoIXJldCkKLQkJCXJldCA9IGdiX2F1ZGlvX2FwYnJpZGdlYV9z
dGFydF9yeChkYXRhLT5jb25uZWN0aW9uLAotCQkJCQkJCSAgMCk7Ci0JCXBhcmFtcy0+c3RhdGUg
PSBHQkFVRElPX0NPREVDX1NUQVJUOwotCX0gZWxzZSBpZiAobXV0ZSAmJiAhc3RyZWFtKSB7Lyog
c3RvcCBwbGF5YmFjayAqLwotCQlyZXQgPSBnYl9hdWRpb19hcGJyaWRnZWFfc3RvcF90eChkYXRh
LT5jb25uZWN0aW9uLCAwKTsKLQkJaWYgKCFyZXQpCi0JCQlyZXQgPSBnYl9hdWRpb19hcGJyaWRn
ZWFfc2h1dGRvd25fdHgoZGF0YS0+Y29ubmVjdGlvbiwKLQkJCQkJCQkgICAgIDApOwotCQlwYXJh
bXMtPnN0YXRlID0gR0JBVURJT19DT0RFQ19TVE9QOwotCX0gZWxzZSBpZiAobXV0ZSAmJiBzdHJl
YW0pIHsvKiBzdG9wIGNhcHR1cmUgKi8KLQkJcmV0ID0gZ2JfYXVkaW9fYXBicmlkZ2VhX3N0b3Bf
cngoZGF0YS0+Y29ubmVjdGlvbiwgMCk7Ci0JCWlmICghcmV0KQotCQkJcmV0ID0gZ2JfYXVkaW9f
YXBicmlkZ2VhX3NodXRkb3duX3J4KGRhdGEtPmNvbm5lY3Rpb24sCi0JCQkJCQkJICAgICAwKTsK
LQkJcGFyYW1zLT5zdGF0ZSA9IEdCQVVESU9fQ09ERUNfU1RPUDsKLQl9IGVsc2UgewotCQlyZXQg
PSAtRUlOVkFMOwotCX0KLQotCWlmIChyZXQpCi0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoZGFpLT5k
ZXYsCi0JCQkJICAgICIlczpFcnJvciBkdXJpbmcgJXMgJXMgc3RyZWFtOiVkXG4iLAotCQkJCSAg
ICBtb2R1bGUtPm5hbWUsIG11dGUgPyAiTXV0ZSIgOiAiVW5tdXRlIiwKLQkJCQkgICAgc3RyZWFt
ID8gIkNhcHR1cmUiIDogIlBsYXliYWNrIiwgcmV0KTsKLQotCWdiX3BtX3J1bnRpbWVfcHV0X25v
aWRsZShidW5kbGUpOwotCW11dGV4X3VubG9jaygmY29kZWMtPmxvY2spOwotCXJldHVybiByZXQ7
Ci19Ci0KLXN0YXRpYyBjb25zdCBzdHJ1Y3Qgc25kX3NvY19kYWlfb3BzIGdiY29kZWNfZGFpX29w
cyA9IHsKLQkuc3RhcnR1cCA9IGdiY29kZWNfc3RhcnR1cCwKLQkuc2h1dGRvd24gPSBnYmNvZGVj
X3NodXRkb3duLAotCS5od19wYXJhbXMgPSBnYmNvZGVjX2h3X3BhcmFtcywKLQkucHJlcGFyZSA9
IGdiY29kZWNfcHJlcGFyZSwKLQkubXV0ZV9zdHJlYW0gPSBnYmNvZGVjX211dGVfc3RyZWFtLAot
fTsKLQotc3RhdGljIHN0cnVjdCBzbmRfc29jX2RhaV9kcml2ZXIgZ2JhdWRpb19kYWlbXSA9IHsK
LQl7Ci0JCS5uYW1lID0gImFwYi1pMnMwIiwKLQkJLmlkID0gMCwKLQkJLnBsYXliYWNrID0gewot
CQkJLnN0cmVhbV9uYW1lID0gIkkyUyAwIFBsYXliYWNrIiwKLQkJCS5yYXRlcyA9IFNORFJWX1BD
TV9SQVRFXzQ4MDAwLAotCQkJLmZvcm1hdHMgPSBTTkRSVl9QQ01fRk9STUFUX1MxNl9MRSwKLQkJ
CS5yYXRlX21heCA9IDQ4MDAwLAotCQkJLnJhdGVfbWluID0gNDgwMDAsCi0JCQkuY2hhbm5lbHNf
bWluID0gMSwKLQkJCS5jaGFubmVsc19tYXggPSAyLAotCQkJLnNpZ19iaXRzID0gMTYsCi0JCX0s
Ci0JCS5jYXB0dXJlID0gewotCQkJLnN0cmVhbV9uYW1lID0gIkkyUyAwIENhcHR1cmUiLAotCQkJ
LnJhdGVzID0gU05EUlZfUENNX1JBVEVfNDgwMDAsCi0JCQkuZm9ybWF0cyA9IFNORFJWX1BDTV9G
T1JNQVRfUzE2X0xFLAotCQkJLnJhdGVfbWF4ID0gNDgwMDAsCi0JCQkucmF0ZV9taW4gPSA0ODAw
MCwKLQkJCS5jaGFubmVsc19taW4gPSAxLAotCQkJLmNoYW5uZWxzX21heCA9IDIsCi0JCQkuc2ln
X2JpdHMgPSAxNiwKLQkJfSwKLQkJLm9wcyA9ICZnYmNvZGVjX2RhaV9vcHMsCi0JfSwKLX07Ci0K
LXN0YXRpYyBpbnQgZ2JhdWRpb19pbml0X2phY2soc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8g
Km1vZHVsZSwKLQkJCSAgICAgc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjKQotewotCWludCBy
ZXQ7Ci0KLQlpZiAoIW1vZHVsZS0+amFja19tYXNrKQotCQlyZXR1cm4gMDsKLQotCXNucHJpbnRm
KG1vZHVsZS0+amFja19uYW1lLCBOQU1FX1NJWkUsICJHQiAlZCBIZWFkc2V0IEphY2siLAotCQkg
bW9kdWxlLT5kZXZfaWQpOwotCXJldCA9IHNuZF9zb2NfamFja19uZXcoY29kZWMsIG1vZHVsZS0+
amFja19uYW1lLCBtb2R1bGUtPmphY2tfbWFzaywKLQkJCSAgICAgICAmbW9kdWxlLT5oZWFkc2V0
X2phY2spOwotCWlmIChyZXQpIHsKLQkJZGV2X2Vycihtb2R1bGUtPmRldiwgIkZhaWxlZCB0byBj
cmVhdGUgbmV3IGphY2tcbiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQotCWlmICghbW9kdWxlLT5i
dXR0b25fbWFzaykKLQkJcmV0dXJuIDA7Ci0KLQlzbnByaW50Zihtb2R1bGUtPmJ1dHRvbl9uYW1l
LCBOQU1FX1NJWkUsICJHQiAlZCBCdXR0b24gSmFjayIsCi0JCSBtb2R1bGUtPmRldl9pZCk7Ci0J
cmV0ID0gc25kX3NvY19qYWNrX25ldyhjb2RlYywgbW9kdWxlLT5idXR0b25fbmFtZSwgbW9kdWxl
LT5idXR0b25fbWFzaywKLQkJCSAgICAgICAmbW9kdWxlLT5idXR0b25famFjayk7Ci0JaWYgKHJl
dCkgewotCQlkZXZfZXJyKG1vZHVsZS0+ZGV2LCAiRmFpbGVkIHRvIGNyZWF0ZSBidXR0b24gamFj
a1xuIik7Ci0JCXJldHVybiByZXQ7Ci0JfQotCi0JLyoKLQkgKiBDdXJyZW50bHksIG1heCA0IGJ1
dHRvbnMgYXJlIHN1cHBvcnRlZCB3aXRoIGZvbGxvd2luZyBrZXkgbWFwcGluZwotCSAqIEJUTl8w
ID0gS0VZX01FRElBCi0JICogQlROXzEgPSBLRVlfVk9JQ0VDT01NQU5ECi0JICogQlROXzIgPSBL
RVlfVk9MVU1FVVAKLQkgKiBCVE5fMyA9IEtFWV9WT0xVTUVET1dOCi0JICovCi0KLQlpZiAobW9k
dWxlLT5idXR0b25fbWFzayAmIFNORF9KQUNLX0JUTl8wKSB7Ci0JCXJldCA9IHNuZF9qYWNrX3Nl
dF9rZXkobW9kdWxlLT5idXR0b25famFjay5qYWNrLCBTTkRfSkFDS19CVE5fMCwKLQkJCQkgICAg
ICAgS0VZX01FRElBKTsKLQkJaWYgKHJldCkgewotCQkJZGV2X2Vycihtb2R1bGUtPmRldiwgIkZh
aWxlZCB0byBzZXQgQlROXzBcbiIpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCX0KLQotCWlmICht
b2R1bGUtPmJ1dHRvbl9tYXNrICYgU05EX0pBQ0tfQlROXzEpIHsKLQkJcmV0ID0gc25kX2phY2tf
c2V0X2tleShtb2R1bGUtPmJ1dHRvbl9qYWNrLmphY2ssIFNORF9KQUNLX0JUTl8xLAotCQkJCSAg
ICAgICBLRVlfVk9JQ0VDT01NQU5EKTsKLQkJaWYgKHJldCkgewotCQkJZGV2X2Vycihtb2R1bGUt
PmRldiwgIkZhaWxlZCB0byBzZXQgQlROXzFcbiIpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCX0K
LQotCWlmIChtb2R1bGUtPmJ1dHRvbl9tYXNrICYgU05EX0pBQ0tfQlROXzIpIHsKLQkJcmV0ID0g
c25kX2phY2tfc2V0X2tleShtb2R1bGUtPmJ1dHRvbl9qYWNrLmphY2ssIFNORF9KQUNLX0JUTl8y
LAotCQkJCSAgICAgICBLRVlfVk9MVU1FVVApOwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyKG1v
ZHVsZS0+ZGV2LCAiRmFpbGVkIHRvIHNldCBCVE5fMlxuIik7Ci0JCQlyZXR1cm4gcmV0OwotCQl9
Ci0JfQotCi0JaWYgKG1vZHVsZS0+YnV0dG9uX21hc2sgJiBTTkRfSkFDS19CVE5fMykgewotCQly
ZXQgPSBzbmRfamFja19zZXRfa2V5KG1vZHVsZS0+YnV0dG9uX2phY2suamFjaywgU05EX0pBQ0tf
QlROXzMsCi0JCQkJICAgICAgIEtFWV9WT0xVTUVET1dOKTsKLQkJaWYgKHJldCkgewotCQkJZGV2
X2Vycihtb2R1bGUtPmRldiwgIkZhaWxlZCB0byBzZXQgQlROXzBcbiIpOwotCQkJcmV0dXJuIHJl
dDsKLQkJfQotCX0KLQotCS8qIEZJWE1FCi0JICogdmVyaWZ5IGlmIHRoaXMgaXMgcmVhbGx5IHJl
cXVpcmVkCi0Jc2V0X2JpdChJTlBVVF9QUk9QX05PX0RVTU1ZX1JFTEVBU0UsCi0JCW1vZHVsZS0+
YnV0dG9uX2phY2suamFjay0+aW5wdXRfZGV2LT5wcm9wYml0KTsKLQkqLwotCi0JcmV0dXJuIDA7
Ci19Ci0KLWludCBnYmF1ZGlvX3JlZ2lzdGVyX21vZHVsZShzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVf
aW5mbyAqbW9kdWxlKQotewotCWludCByZXQ7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVj
OwotCXN0cnVjdCBzbmRfY2FyZCAqY2FyZDsKLQlzdHJ1Y3Qgc25kX3NvY19qYWNrICpqYWNrID0g
TlVMTDsKLQotCWlmICghZ2Jjb2RlYykgewotCQlkZXZfZXJyKG1vZHVsZS0+ZGV2LCAiR0IgQ29k
ZWMgbm90IHlldCBwcm9iZWRcbiIpOwotCQlyZXR1cm4gLUVBR0FJTjsKLQl9Ci0KLQljb2RlYyA9
IGdiY29kZWMtPmNvZGVjOwotCWNhcmQgPSBjb2RlYy0+Y2FyZC0+c25kX2NhcmQ7Ci0KLQlkb3du
X3dyaXRlKCZjYXJkLT5jb250cm9sc19yd3NlbSk7Ci0KLQlpZiAobW9kdWxlLT5udW1fZGFpcykg
ewotCQlkZXZfZXJyKGdiY29kZWMtPmRldiwKLQkJCSIlZDpEQUlzIG5vdCBzdXBwb3J0ZWQgdmlh
IGdiY29kZWMgZHJpdmVyXG4iLAotCQkJbW9kdWxlLT5udW1fZGFpcyk7Ci0JCXVwX3dyaXRlKCZj
YXJkLT5jb250cm9sc19yd3NlbSk7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCXJldCA9IGdi
YXVkaW9faW5pdF9qYWNrKG1vZHVsZSwgY29kZWMpOwotCWlmIChyZXQpIHsKLQkJdXBfd3JpdGUo
JmNhcmQtPmNvbnRyb2xzX3J3c2VtKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0KLQlpZiAobW9kdWxl
LT5kYXBtX3dpZGdldHMpCi0JCXNuZF9zb2NfZGFwbV9uZXdfY29udHJvbHMoJmNvZGVjLT5kYXBt
LCBtb2R1bGUtPmRhcG1fd2lkZ2V0cywKLQkJCQkJICBtb2R1bGUtPm51bV9kYXBtX3dpZGdldHMp
OwotCWlmIChtb2R1bGUtPmNvbnRyb2xzKQotCQlzbmRfc29jX2FkZF9jb2RlY19jb250cm9scyhj
b2RlYywgbW9kdWxlLT5jb250cm9scywKLQkJCQkJICAgbW9kdWxlLT5udW1fY29udHJvbHMpOwot
CWlmIChtb2R1bGUtPmRhcG1fcm91dGVzKQotCQlzbmRfc29jX2RhcG1fYWRkX3JvdXRlcygmY29k
ZWMtPmRhcG0sIG1vZHVsZS0+ZGFwbV9yb3V0ZXMsCi0JCQkJCW1vZHVsZS0+bnVtX2RhcG1fcm91
dGVzKTsKLQotCS8qIGNhcmQgYWxyZWFkeSBpbnN0YW50aWF0ZWQsIGNyZWF0ZSB3aWRnZXRzIGhl
cmUgb25seSAqLwotCWlmIChjb2RlYy0+Y2FyZC0+aW5zdGFudGlhdGVkKSB7Ci0JCXNuZF9zb2Nf
ZGFwbV9saW5rX2NvbXBvbmVudF9kYWlfd2lkZ2V0cyhjb2RlYy0+Y2FyZCwKLQkJCQkJCQkmY29k
ZWMtPmRhcG0pOwotI2lmZGVmIENPTkZJR19TTkRfSkFDSwotCQkvKgotCQkgKiByZWdpc3RlciBq
YWNrIGRldmljZXMgZm9yIHRoaXMgbW9kdWxlCi0JCSAqIGZyb20gY29kZWMtPmphY2tfbGlzdAot
CQkgKi8KLQkJbGlzdF9mb3JfZWFjaF9lbnRyeShqYWNrLCAmY29kZWMtPmphY2tfbGlzdCwgbGlz
dCkgewotCQkJaWYgKChqYWNrID09ICZtb2R1bGUtPmhlYWRzZXRfamFjaykgfHwKLQkJCSAgICAo
amFjayA9PSAmbW9kdWxlLT5idXR0b25famFjaykpCi0JCQkJc25kX2RldmljZV9yZWdpc3Rlcihj
b2RlYy0+Y2FyZC0+c25kX2NhcmQsCi0JCQkJCQkgICAgamFjay0+amFjayk7Ci0JCX0KLSNlbmRp
ZgotCX0KLQotCW11dGV4X2xvY2soJmdiY29kZWMtPmxvY2spOwotCWxpc3RfYWRkKCZtb2R1bGUt
Pmxpc3QsICZnYmNvZGVjLT5tb2R1bGVfbGlzdCk7Ci0JbXV0ZXhfdW5sb2NrKCZnYmNvZGVjLT5s
b2NrKTsKLQotCWlmIChjb2RlYy0+Y2FyZC0+aW5zdGFudGlhdGVkKQotCQlyZXQgPSBzbmRfc29j
X2RhcG1fbmV3X3dpZGdldHMoJmNvZGVjLT5kYXBtKTsKLQlkZXZfZGJnKGNvZGVjLT5kZXYsICJS
ZWdpc3RlcmVkICVzIG1vZHVsZVxuIiwgbW9kdWxlLT5uYW1lKTsKLQotCXVwX3dyaXRlKCZjYXJk
LT5jb250cm9sc19yd3NlbSk7Ci0JcmV0dXJuIHJldDsKLX0KLUVYUE9SVF9TWU1CT0woZ2JhdWRp
b19yZWdpc3Rlcl9tb2R1bGUpOwotCi1zdGF0aWMgdm9pZCBnYmF1ZGlvX2NvZGVjX2NsZWFuX2Rh
dGFfdHgoc3RydWN0IGdiYXVkaW9fZGF0YV9jb25uZWN0aW9uICpkYXRhKQotewotCXUxNiBpMnNf
cG9ydCwgY3BvcnRpZDsKLQlpbnQgcmV0OwotCi0JaWYgKGxpc3RfaXNfc2luZ3VsYXIoJmdiY29k
ZWMtPm1vZHVsZV9saXN0KSkgewotCQlyZXQgPSBnYl9hdWRpb19hcGJyaWRnZWFfc3RvcF90eChk
YXRhLT5jb25uZWN0aW9uLCAwKTsKLQkJaWYgKHJldCkKLQkJCXJldHVybjsKLQkJcmV0ID0gZ2Jf
YXVkaW9fYXBicmlkZ2VhX3NodXRkb3duX3R4KGRhdGEtPmNvbm5lY3Rpb24sCi0JCQkJCQkgICAg
IDApOwotCQlpZiAocmV0KQotCQkJcmV0dXJuOwotCX0KLQlpMnNfcG9ydCA9IDA7CS8qIGZpeGVk
IGZvciBub3cgKi8KLQljcG9ydGlkID0gZGF0YS0+Y29ubmVjdGlvbi0+aGRfY3BvcnRfaWQ7Ci0J
cmV0ID0gZ2JfYXVkaW9fYXBicmlkZ2VhX3VucmVnaXN0ZXJfY3BvcnQoZGF0YS0+Y29ubmVjdGlv
biwKLQkJCQkJCSAgaTJzX3BvcnQsIGNwb3J0aWQsCi0JCQkJCQkgIEFVRElPX0FQQlJJREdFQV9E
SVJFQ1RJT05fVFgpOwotCWRhdGEtPnN0YXRlWzBdID0gR0JBVURJT19DT0RFQ19TSFVURE9XTjsK
LX0KLQotc3RhdGljIHZvaWQgZ2JhdWRpb19jb2RlY19jbGVhbl9kYXRhX3J4KHN0cnVjdCBnYmF1
ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGF0YSkKLXsKLQl1MTYgaTJzX3BvcnQsIGNwb3J0aWQ7Ci0J
aW50IHJldDsKLQotCWlmIChsaXN0X2lzX3Npbmd1bGFyKCZnYmNvZGVjLT5tb2R1bGVfbGlzdCkp
IHsKLQkJcmV0ID0gZ2JfYXVkaW9fYXBicmlkZ2VhX3N0b3BfcngoZGF0YS0+Y29ubmVjdGlvbiwg
MCk7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm47Ci0JCXJldCA9IGdiX2F1ZGlvX2FwYnJpZGdlYV9z
aHV0ZG93bl9yeChkYXRhLT5jb25uZWN0aW9uLAotCQkJCQkJICAgICAwKTsKLQkJaWYgKHJldCkK
LQkJCXJldHVybjsKLQl9Ci0JaTJzX3BvcnQgPSAwOwkvKiBmaXhlZCBmb3Igbm93ICovCi0JY3Bv
cnRpZCA9IGRhdGEtPmNvbm5lY3Rpb24tPmhkX2Nwb3J0X2lkOwotCXJldCA9IGdiX2F1ZGlvX2Fw
YnJpZGdlYV91bnJlZ2lzdGVyX2Nwb3J0KGRhdGEtPmNvbm5lY3Rpb24sCi0JCQkJCQkgIGkyc19w
b3J0LCBjcG9ydGlkLAotCQkJCQkJICBBVURJT19BUEJSSURHRUFfRElSRUNUSU9OX1JYKTsKLQlk
YXRhLT5zdGF0ZVsxXSA9IEdCQVVESU9fQ09ERUNfU0hVVERPV047Ci19Ci0KLXN0YXRpYyB2b2lk
IGdiYXVkaW9fY29kZWNfY2xlYW51cChzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxl
KQotewotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGF0YTsKLQlpbnQgcGJfc3Rh
dGUsIGNhcF9zdGF0ZTsKLQotCWRldl9kYmcoZ2Jjb2RlYy0+ZGV2LCAiJXM6IHJlbW92ZWQsIGNs
ZWFudXAgQVBCcmlkZ2VcbiIsIG1vZHVsZS0+bmFtZSk7Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeShk
YXRhLCAmbW9kdWxlLT5kYXRhX2xpc3QsIGxpc3QpIHsKLQkJcGJfc3RhdGUgPSBkYXRhLT5zdGF0
ZVswXTsKLQkJY2FwX3N0YXRlID0gZGF0YS0+c3RhdGVbMV07Ci0KLQkJaWYgKHBiX3N0YXRlID4g
R0JBVURJT19DT0RFQ19TSFVURE9XTikKLQkJCWdiYXVkaW9fY29kZWNfY2xlYW5fZGF0YV90eChk
YXRhKTsKLQotCQlpZiAoY2FwX3N0YXRlID4gR0JBVURJT19DT0RFQ19TSFVURE9XTikKLQkJCWdi
YXVkaW9fY29kZWNfY2xlYW5fZGF0YV9yeChkYXRhKTsKLQl9Ci19Ci0KLXZvaWQgZ2JhdWRpb191
bnJlZ2lzdGVyX21vZHVsZShzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlKQotewot
CXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IGdiY29kZWMtPmNvZGVjOwotCXN0cnVjdCBz
bmRfY2FyZCAqY2FyZCA9IGNvZGVjLT5jYXJkLT5zbmRfY2FyZDsKLQlzdHJ1Y3Qgc25kX3NvY19q
YWNrICpqYWNrLCAqbmV4dF9qOwotCWludCBtYXNrOwotCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAi
VW5yZWdpc3RlciAlcyBtb2R1bGVcbiIsIG1vZHVsZS0+bmFtZSk7Ci0KLQlkb3duX3dyaXRlKCZj
YXJkLT5jb250cm9sc19yd3NlbSk7Ci0JbXV0ZXhfbG9jaygmZ2Jjb2RlYy0+bG9jayk7Ci0JZ2Jh
dWRpb19jb2RlY19jbGVhbnVwKG1vZHVsZSk7Ci0JbGlzdF9kZWwoJm1vZHVsZS0+bGlzdCk7Ci0J
ZGV2X2RiZyhjb2RlYy0+ZGV2LCAiUHJvY2VzcyBVbnJlZ2lzdGVyICVzIG1vZHVsZVxuIiwgbW9k
dWxlLT5uYW1lKTsKLQltdXRleF91bmxvY2soJmdiY29kZWMtPmxvY2spOwotCi0jaWZkZWYgQ09O
RklHX1NORF9KQUNLCi0JLyogZnJlZSBqYWNrIGRldmljZXMgZm9yIHRoaXMgbW9kdWxlIGZyb20g
Y29kZWMtPmphY2tfbGlzdCAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShqYWNrLCBuZXh0
X2osICZjb2RlYy0+amFja19saXN0LCBsaXN0KSB7Ci0JCWlmIChqYWNrID09ICZtb2R1bGUtPmhl
YWRzZXRfamFjaykKLQkJCW1hc2sgPSBHQkNPREVDX0pBQ0tfTUFTSzsKLQkJZWxzZSBpZiAoamFj
ayA9PSAmbW9kdWxlLT5idXR0b25famFjaykKLQkJCW1hc2sgPSBHQkNPREVDX0pBQ0tfQlVUVE9O
X01BU0s7Ci0JCWVsc2UKLQkJCW1hc2sgPSAwOwotCQlpZiAobWFzaykgewotCQkJZGV2X2RiZyht
b2R1bGUtPmRldiwgIlJlcG9ydCAlcyByZW1vdmFsXG4iLAotCQkJCWphY2stPmphY2stPmlkKTsK
LQkJCXNuZF9zb2NfamFja19yZXBvcnQoamFjaywgMCwgbWFzayk7Ci0JCQlzbmRfZGV2aWNlX2Zy
ZWUoY29kZWMtPmNhcmQtPnNuZF9jYXJkLCBqYWNrLT5qYWNrKTsKLQkJCWxpc3RfZGVsKCZqYWNr
LT5saXN0KTsKLQkJfQotCX0KLSNlbmRpZgotCi0JaWYgKG1vZHVsZS0+ZGFwbV9yb3V0ZXMpIHsK
LQkJZGV2X2RiZyhjb2RlYy0+ZGV2LCAiUmVtb3ZpbmcgJWQgcm91dGVzXG4iLAotCQkJbW9kdWxl
LT5udW1fZGFwbV9yb3V0ZXMpOwotCQlzbmRfc29jX2RhcG1fZGVsX3JvdXRlcygmY29kZWMtPmRh
cG0sIG1vZHVsZS0+ZGFwbV9yb3V0ZXMsCi0JCQkJCW1vZHVsZS0+bnVtX2RhcG1fcm91dGVzKTsK
LQl9Ci0JaWYgKG1vZHVsZS0+Y29udHJvbHMpIHsKLQkJZGV2X2RiZyhjb2RlYy0+ZGV2LCAiUmVt
b3ZpbmcgJWQgY29udHJvbHNcbiIsCi0JCQltb2R1bGUtPm51bV9jb250cm9scyk7Ci0JCXNuZF9z
b2NfcmVtb3ZlX2NvZGVjX2NvbnRyb2xzKGNvZGVjLCBtb2R1bGUtPmNvbnRyb2xzLAotCQkJCQkg
ICAgICBtb2R1bGUtPm51bV9jb250cm9scyk7Ci0JfQotCWlmIChtb2R1bGUtPmRhcG1fd2lkZ2V0
cykgewotCQlkZXZfZGJnKGNvZGVjLT5kZXYsICJSZW1vdmluZyAlZCB3aWRnZXRzXG4iLAotCQkJ
bW9kdWxlLT5udW1fZGFwbV93aWRnZXRzKTsKLQkJc25kX3NvY19kYXBtX2ZyZWVfY29udHJvbHMo
JmNvZGVjLT5kYXBtLCBtb2R1bGUtPmRhcG1fd2lkZ2V0cywKLQkJCQkJICAgbW9kdWxlLT5udW1f
ZGFwbV93aWRnZXRzKTsKLQl9Ci0KLQlkZXZfZGJnKGNvZGVjLT5kZXYsICJVbnJlZ2lzdGVyZWQg
JXMgbW9kdWxlXG4iLCBtb2R1bGUtPm5hbWUpOwotCi0JdXBfd3JpdGUoJmNhcmQtPmNvbnRyb2xz
X3J3c2VtKTsKLX0KLUVYUE9SVF9TWU1CT0woZ2JhdWRpb191bnJlZ2lzdGVyX21vZHVsZSk7Ci0K
LS8qCi0gKiBjb2RlYyBkcml2ZXIgb3BzCi0gKi8KLXN0YXRpYyBpbnQgZ2Jjb2RlY19wcm9iZShz
dHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMpCi17Ci0JaW50IGk7Ci0Jc3RydWN0IGdiYXVkaW9f
Y29kZWNfaW5mbyAqaW5mbzsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19kYWkgKmRhaTsKLQotCWlu
Zm8gPSBkZXZtX2t6YWxsb2MoY29kZWMtPmRldiwgc2l6ZW9mKCppbmZvKSwgR0ZQX0tFUk5FTCk7
Ci0JaWYgKCFpbmZvKQotCQlyZXR1cm4gLUVOT01FTTsKLQotCWluZm8tPmRldiA9IGNvZGVjLT5k
ZXY7Ci0JSU5JVF9MSVNUX0hFQUQoJmluZm8tPm1vZHVsZV9saXN0KTsKLQltdXRleF9pbml0KCZp
bmZvLT5sb2NrKTsKLQlJTklUX0xJU1RfSEVBRCgmaW5mby0+ZGFpX2xpc3QpOwotCi0JLyogaW5p
dCBkYWlfbGlzdCB1c2VkIHRvIG1haW50YWluIHJ1bnRpbWUgc3RyZWFtIGluZm8gKi8KLQlmb3Ig
KGkgPSAwOyBpIDwgQVJSQVlfU0laRShnYmF1ZGlvX2RhaSk7IGkrKykgewotCQlkYWkgPSBkZXZt
X2t6YWxsb2MoY29kZWMtPmRldiwgc2l6ZW9mKCpkYWkpLCBHRlBfS0VSTkVMKTsKLQkJaWYgKCFk
YWkpCi0JCQlyZXR1cm4gLUVOT01FTTsKLQkJZGFpLT5pZCA9IGdiYXVkaW9fZGFpW2ldLmlkOwot
CQlsaXN0X2FkZCgmZGFpLT5saXN0LCAmaW5mby0+ZGFpX2xpc3QpOwotCX0KLQotCWluZm8tPmNv
ZGVjID0gY29kZWM7Ci0Jc25kX3NvY19jb2RlY19zZXRfZHJ2ZGF0YShjb2RlYywgaW5mbyk7Ci0J
Z2Jjb2RlYyA9IGluZm87Ci0KLQlkZXZpY2VfaW5pdF93YWtldXAoY29kZWMtPmRldiwgMSk7Ci0J
cmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19yZW1vdmUoc3RydWN0IHNuZF9zb2Nf
Y29kZWMgKmNvZGVjKQotewotCS8qIEVtcHR5IGZ1bmN0aW9uIGZvciBub3cgKi8KLQlyZXR1cm4g
MDsKLX0KLQotc3RhdGljIGludCBnYmNvZGVjX3dyaXRlKHN0cnVjdCBzbmRfc29jX2NvZGVjICpj
b2RlYywgdW5zaWduZWQgaW50IHJlZywKLQkJCSB1bnNpZ25lZCBpbnQgdmFsdWUpCi17Ci0JcmV0
dXJuIDA7Ci19Ci0KLXN0YXRpYyB1bnNpZ25lZCBpbnQgZ2Jjb2RlY19yZWFkKHN0cnVjdCBzbmRf
c29jX2NvZGVjICpjb2RlYywKLQkJCQkgdW5zaWduZWQgaW50IHJlZykKLXsKLQlyZXR1cm4gMDsK
LX0KLQotc3RhdGljIHN0cnVjdCBzbmRfc29jX2NvZGVjX2RyaXZlciBzb2NfY29kZWNfZGV2X2di
YXVkaW8gPSB7Ci0JLnByb2JlCT0gZ2Jjb2RlY19wcm9iZSwKLQkucmVtb3ZlCT0gZ2Jjb2RlY19y
ZW1vdmUsCi0KLQkucmVhZCA9IGdiY29kZWNfcmVhZCwKLQkud3JpdGUgPSBnYmNvZGVjX3dyaXRl
LAotCi0JLmlkbGVfYmlhc19vZmYgPSB0cnVlLAotCS5pZ25vcmVfcG1kb3duX3RpbWUgPSAxLAot
fTsKLQotI2lmZGVmIENPTkZJR19QTQotc3RhdGljIGludCBnYmF1ZGlvX2NvZGVjX3N1c3BlbmQo
c3RydWN0IGRldmljZSAqZGV2KQotewotCWRldl9kYmcoZGV2LCAiJXM6IHN1c3BlbmRcbiIsIF9f
ZnVuY19fKTsKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX2NvZGVjX3Jlc3Vt
ZShzdHJ1Y3QgZGV2aWNlICpkZXYpCi17Ci0JZGV2X2RiZyhkZXYsICIlczogcmVzdW1lXG4iLCBf
X2Z1bmNfXyk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZGV2X3BtX29w
cyBnYmF1ZGlvX2NvZGVjX3BtX29wcyA9IHsKLQkuc3VzcGVuZAk9IGdiYXVkaW9fY29kZWNfc3Vz
cGVuZCwKLQkucmVzdW1lCQk9IGdiYXVkaW9fY29kZWNfcmVzdW1lLAotfTsKLSNlbmRpZgotCi1z
dGF0aWMgaW50IGdiYXVkaW9fY29kZWNfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRl
dikKLXsKLQlyZXR1cm4gc25kX3NvY19yZWdpc3Rlcl9jb2RlYygmcGRldi0+ZGV2LCAmc29jX2Nv
ZGVjX2Rldl9nYmF1ZGlvLAotCQkJZ2JhdWRpb19kYWksIEFSUkFZX1NJWkUoZ2JhdWRpb19kYWkp
KTsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX2NvZGVjX3JlbW92ZShzdHJ1Y3QgcGxhdGZvcm1f
ZGV2aWNlICpwZGV2KQotewotCXNuZF9zb2NfdW5yZWdpc3Rlcl9jb2RlYygmcGRldi0+ZGV2KTsK
LQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGNvbnN0IHN0cnVjdCBvZl9kZXZpY2VfaWQgZ3JleWJ1
c19hc29jX21hY2hpbmVfb2ZfbWF0Y2hbXSAgPSB7Ci0JeyAuY29tcGF0aWJsZSA9ICJ0b3NoaWJh
LGFwYi1kdW1teS1jb2RlYyIsIH0sCi0Je30sCi19OwotCi1zdGF0aWMgc3RydWN0IHBsYXRmb3Jt
X2RyaXZlciBnYmF1ZGlvX2NvZGVjX2RyaXZlciA9IHsKLQkuZHJpdmVyID0gewotCQkubmFtZSA9
ICJhcGItZHVtbXktY29kZWMiLAotI2lmZGVmIENPTkZJR19QTQotCQkucG0gPSAmZ2JhdWRpb19j
b2RlY19wbV9vcHMsCi0jZW5kaWYKLQkJLm9mX21hdGNoX3RhYmxlID0gZ3JleWJ1c19hc29jX21h
Y2hpbmVfb2ZfbWF0Y2gsCi0JfSwKLQkucHJvYmUgPSBnYmF1ZGlvX2NvZGVjX3Byb2JlLAotCS5y
ZW1vdmUgPSBnYmF1ZGlvX2NvZGVjX3JlbW92ZSwKLX07Ci1tb2R1bGVfcGxhdGZvcm1fZHJpdmVy
KGdiYXVkaW9fY29kZWNfZHJpdmVyKTsKLQotTU9EVUxFX0RFU0NSSVBUSU9OKCJBUEJyaWRnZSBB
TFNBIFNvQyBkdW1teSBjb2RlYyBkcml2ZXIiKTsKLU1PRFVMRV9BVVRIT1IoIlZhaWJoYXYgQWdh
cndhbCA8dmFpYmhhdi5hZ2Fyd2FsQGxpbmFyby5vcmc+Iik7Ci1NT0RVTEVfTElDRU5TRSgiR1BM
IHYyIik7Ci1NT0RVTEVfQUxJQVMoInBsYXRmb3JtOmFwYi1kdW1teS1jb2RlYyIpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fbW9kdWxlLmMgYi9kcml2ZXJzL3N0
YWdpbmcvZ3JleWJ1cy9hdWRpb19tb2R1bGUuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMzAwYTJiNGYzZmM3Li4wMDAwMDAwMDAwMDAKLS0tIGEvZHJpdmVycy9zdGFnaW5nL2dyZXli
dXMvYXVkaW9fbW9kdWxlLmMKKysrIC9kZXYvbnVsbApAQCAtMSw0NzggKzAsMCBAQAotLy8gU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKLS8qCi0gKiBHcmV5YnVzIGF1ZGlvIGRyaXZl
cgotICogQ29weXJpZ2h0IDIwMTUgR29vZ2xlIEluYy4KLSAqIENvcHlyaWdodCAyMDE1IExpbmFy
byBMdGQuCi0gKi8KLSNpbmNsdWRlIDxsaW51eC9rZXJuZWwuaD4KLSNpbmNsdWRlIDxsaW51eC9t
b2R1bGUuaD4KLSNpbmNsdWRlIDxzb3VuZC9zb2MuaD4KLSNpbmNsdWRlIDxzb3VuZC9wY21fcGFy
YW1zLmg+Ci0KLSNpbmNsdWRlICJhdWRpb19jb2RlYy5oIgotI2luY2x1ZGUgImF1ZGlvX2FwYnJp
ZGdlYS5oIgotI2luY2x1ZGUgImF1ZGlvX21hbmFnZXIuaCIKLQotLyoKLSAqIGdiX3NuZCBtYW5h
Z2VtZW50IGZ1bmN0aW9ucwotICovCi0KLXN0YXRpYyBpbnQgZ2JhdWRpb19yZXF1ZXN0X2phY2so
c3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSwKLQkJCQlzdHJ1Y3QgZ2JfYXVkaW9f
amFja19ldmVudF9yZXF1ZXN0ICpyZXEpCi17Ci0JaW50IHJlcG9ydDsKLQlzdHJ1Y3Qgc25kX2ph
Y2sgKmphY2sgPSBtb2R1bGUtPmhlYWRzZXRfamFjay5qYWNrOwotCXN0cnVjdCBzbmRfamFjayAq
YnRuX2phY2sgPSBtb2R1bGUtPmJ1dHRvbl9qYWNrLmphY2s7Ci0KLQlpZiAoIWphY2spIHsKLQkJ
ZGV2X2Vycl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwKLQkJCQkgICAgIkludmFsaWQgamFjayBl
dmVudCByZWNlaXZlZDp0eXBlOiAldSwgZXZlbnQ6ICV1XG4iLAotCQkJCSAgICByZXEtPmphY2tf
YXR0cmlidXRlLCByZXEtPmV2ZW50KTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JZGV2X3dh
cm5fcmF0ZWxpbWl0ZWQobW9kdWxlLT5kZXYsCi0JCQkgICAgICJKYWNrIEV2ZW50IHJlY2VpdmVk
OiB0eXBlOiAldSwgZXZlbnQ6ICV1XG4iLAotCQkJICAgICByZXEtPmphY2tfYXR0cmlidXRlLCBy
ZXEtPmV2ZW50KTsKLQotCWlmIChyZXEtPmV2ZW50ID09IEdCX0FVRElPX0pBQ0tfRVZFTlRfUkVN
T1ZBTCkgewotCQltb2R1bGUtPmphY2tfdHlwZSA9IDA7Ci0JCWlmIChidG5famFjayAmJiBtb2R1
bGUtPmJ1dHRvbl9zdGF0dXMpIHsKLQkJCXNuZF9zb2NfamFja19yZXBvcnQoJm1vZHVsZS0+YnV0
dG9uX2phY2ssIDAsCi0JCQkJCSAgICBtb2R1bGUtPmJ1dHRvbl9tYXNrKTsKLQkJCW1vZHVsZS0+
YnV0dG9uX3N0YXR1cyA9IDA7Ci0JCX0KLQkJc25kX3NvY19qYWNrX3JlcG9ydCgmbW9kdWxlLT5o
ZWFkc2V0X2phY2ssIDAsCi0JCQkJICAgIG1vZHVsZS0+amFja19tYXNrKTsKLQkJcmV0dXJuIDA7
Ci0JfQotCi0JcmVwb3J0ID0gcmVxLT5qYWNrX2F0dHJpYnV0ZSAmIG1vZHVsZS0+amFja19tYXNr
OwotCWlmICghcmVwb3J0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQobW9kdWxlLT5kZXYsCi0J
CQkJICAgICJJbnZhbGlkIGphY2sgZXZlbnQgcmVjZWl2ZWQ6dHlwZTogJXUsIGV2ZW50OiAldVxu
IiwKLQkJCQkgICAgcmVxLT5qYWNrX2F0dHJpYnV0ZSwgcmVxLT5ldmVudCk7Ci0JCXJldHVybiAt
RUlOVkFMOwotCX0KLQotCWlmIChtb2R1bGUtPmphY2tfdHlwZSkKLQkJZGV2X3dhcm5fcmF0ZWxp
bWl0ZWQobW9kdWxlLT5kZXYsCi0JCQkJICAgICAiTW9kaWZ5aW5nIGphY2sgZnJvbSAlZCB0byAl
ZFxuIiwKLQkJCQkgICAgIG1vZHVsZS0+amFja190eXBlLCByZXBvcnQpOwotCi0JbW9kdWxlLT5q
YWNrX3R5cGUgPSByZXBvcnQ7Ci0Jc25kX3NvY19qYWNrX3JlcG9ydCgmbW9kdWxlLT5oZWFkc2V0
X2phY2ssIHJlcG9ydCwgbW9kdWxlLT5qYWNrX21hc2spOwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0
YXRpYyBpbnQgZ2JhdWRpb19yZXF1ZXN0X2J1dHRvbihzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5m
byAqbW9kdWxlLAotCQkJCSAgc3RydWN0IGdiX2F1ZGlvX2J1dHRvbl9ldmVudF9yZXF1ZXN0ICpy
ZXEpCi17Ci0JaW50IHNvY19idXR0b25faWQsIHJlcG9ydDsKLQlzdHJ1Y3Qgc25kX2phY2sgKmJ0
bl9qYWNrID0gbW9kdWxlLT5idXR0b25famFjay5qYWNrOwotCi0JaWYgKCFidG5famFjaykgewot
CQlkZXZfZXJyX3JhdGVsaW1pdGVkKG1vZHVsZS0+ZGV2LAotCQkJCSAgICAiSW52YWxpZCBidXR0
b24gZXZlbnQgcmVjZWl2ZWQ6dHlwZTogJXUsIGV2ZW50OiAldVxuIiwKLQkJCQkgICAgcmVxLT5i
dXR0b25faWQsIHJlcS0+ZXZlbnQpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQlkZXZfd2Fy
bl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwKLQkJCSAgICAgIkJ1dHRvbiBFdmVudCByZWNlaXZl
ZDogaWQ6ICV1LCBldmVudDogJXVcbiIsCi0JCQkgICAgIHJlcS0+YnV0dG9uX2lkLCByZXEtPmV2
ZW50KTsKLQotCS8qIGN1cnJlbnRseSBzdXBwb3J0cyA0IGJ1dHRvbnMgb25seSAqLwotCWlmICgh
bW9kdWxlLT5qYWNrX3R5cGUpIHsKLQkJZGV2X2Vycl9yYXRlbGltaXRlZChtb2R1bGUtPmRldiwK
LQkJCQkgICAgIkphY2sgbm90IHByZXNlbnQuIEJvZ3VzIGV2ZW50ISFcbiIpOwotCQlyZXR1cm4g
LUVJTlZBTDsKLQl9Ci0KLQlyZXBvcnQgPSBtb2R1bGUtPmJ1dHRvbl9zdGF0dXMgJiBtb2R1bGUt
PmJ1dHRvbl9tYXNrOwotCXNvY19idXR0b25faWQgPSAwOwotCi0Jc3dpdGNoIChyZXEtPmJ1dHRv
bl9pZCkgewotCWNhc2UgMToKLQkJc29jX2J1dHRvbl9pZCA9IFNORF9KQUNLX0JUTl8wICYgbW9k
dWxlLT5idXR0b25fbWFzazsKLQkJYnJlYWs7Ci0KLQljYXNlIDI6Ci0JCXNvY19idXR0b25faWQg
PSBTTkRfSkFDS19CVE5fMSAmIG1vZHVsZS0+YnV0dG9uX21hc2s7Ci0JCWJyZWFrOwotCi0JY2Fz
ZSAzOgotCQlzb2NfYnV0dG9uX2lkID0gU05EX0pBQ0tfQlROXzIgJiBtb2R1bGUtPmJ1dHRvbl9t
YXNrOwotCQlicmVhazsKLQotCWNhc2UgNDoKLQkJc29jX2J1dHRvbl9pZCA9IFNORF9KQUNLX0JU
Tl8zICYgbW9kdWxlLT5idXR0b25fbWFzazsKLQkJYnJlYWs7Ci0JfQotCi0JaWYgKCFzb2NfYnV0
dG9uX2lkKSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQobW9kdWxlLT5kZXYsCi0JCQkJICAgICJJ
bnZhbGlkIGJ1dHRvbiByZXF1ZXN0IHJlY2VpdmVkXG4iKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0J
fQotCi0JaWYgKHJlcS0+ZXZlbnQgPT0gR0JfQVVESU9fQlVUVE9OX0VWRU5UX1BSRVNTKQotCQly
ZXBvcnQgPSByZXBvcnQgfCBzb2NfYnV0dG9uX2lkOwotCWVsc2UKLQkJcmVwb3J0ID0gcmVwb3J0
ICYgfnNvY19idXR0b25faWQ7Ci0KLQltb2R1bGUtPmJ1dHRvbl9zdGF0dXMgPSByZXBvcnQ7Ci0K
LQlzbmRfc29jX2phY2tfcmVwb3J0KCZtb2R1bGUtPmJ1dHRvbl9qYWNrLCByZXBvcnQsIG1vZHVs
ZS0+YnV0dG9uX21hc2spOwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2JhdWRpb19y
ZXF1ZXN0X3N0cmVhbShzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlLAotCQkJCSAg
c3RydWN0IGdiX2F1ZGlvX3N0cmVhbWluZ19ldmVudF9yZXF1ZXN0ICpyZXEpCi17Ci0JZGV2X3dh
cm4obW9kdWxlLT5kZXYsICJBdWRpbyBFdmVudCByZWNlaXZlZDogY3BvcnQ6ICV1LCBldmVudDog
JXVcbiIsCi0JCSBsZTE2X3RvX2NwdShyZXEtPmRhdGFfY3BvcnQpLCByZXEtPmV2ZW50KTsKLQot
CXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGdiYXVkaW9fY29kZWNfcmVxdWVzdF9oYW5kbGVy
KHN0cnVjdCBnYl9vcGVyYXRpb24gKm9wKQotewotCXN0cnVjdCBnYl9jb25uZWN0aW9uICpjb25u
ZWN0aW9uID0gb3AtPmNvbm5lY3Rpb247Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1v
ZHVsZSA9Ci0JCWdyZXlidXNfZ2V0X2RydmRhdGEoY29ubmVjdGlvbi0+YnVuZGxlKTsKLQlzdHJ1
Y3QgZ2Jfb3BlcmF0aW9uX21zZ19oZHIgKmhlYWRlciA9IG9wLT5yZXF1ZXN0LT5oZWFkZXI7Ci0J
c3RydWN0IGdiX2F1ZGlvX3N0cmVhbWluZ19ldmVudF9yZXF1ZXN0ICpzdHJlYW1fcmVxOwotCXN0
cnVjdCBnYl9hdWRpb19qYWNrX2V2ZW50X3JlcXVlc3QgKmphY2tfcmVxOwotCXN0cnVjdCBnYl9h
dWRpb19idXR0b25fZXZlbnRfcmVxdWVzdCAqYnV0dG9uX3JlcTsKLQlpbnQgcmV0OwotCi0Jc3dp
dGNoIChoZWFkZXItPnR5cGUpIHsKLQljYXNlIEdCX0FVRElPX1RZUEVfU1RSRUFNSU5HX0VWRU5U
OgotCQlzdHJlYW1fcmVxID0gb3AtPnJlcXVlc3QtPnBheWxvYWQ7Ci0JCXJldCA9IGdiYXVkaW9f
cmVxdWVzdF9zdHJlYW0obW9kdWxlLCBzdHJlYW1fcmVxKTsKLQkJYnJlYWs7Ci0KLQljYXNlIEdC
X0FVRElPX1RZUEVfSkFDS19FVkVOVDoKLQkJamFja19yZXEgPSBvcC0+cmVxdWVzdC0+cGF5bG9h
ZDsKLQkJcmV0ID0gZ2JhdWRpb19yZXF1ZXN0X2phY2sobW9kdWxlLCBqYWNrX3JlcSk7Ci0JCWJy
ZWFrOwotCi0JY2FzZSBHQl9BVURJT19UWVBFX0JVVFRPTl9FVkVOVDoKLQkJYnV0dG9uX3JlcSA9
IG9wLT5yZXF1ZXN0LT5wYXlsb2FkOwotCQlyZXQgPSBnYmF1ZGlvX3JlcXVlc3RfYnV0dG9uKG1v
ZHVsZSwgYnV0dG9uX3JlcSk7Ci0JCWJyZWFrOwotCi0JZGVmYXVsdDoKLQkJZGV2X2Vycl9yYXRl
bGltaXRlZCgmY29ubmVjdGlvbi0+YnVuZGxlLT5kZXYsCi0JCQkJICAgICJJbnZhbGlkIEF1ZGlv
IEV2ZW50IHJlY2VpdmVkXG4iKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JcmV0dXJuIHJl
dDsKLX0KLQotc3RhdGljIGludCBnYl9hdWRpb19hZGRfbWdtdF9jb25uZWN0aW9uKHN0cnVjdCBn
YmF1ZGlvX21vZHVsZV9pbmZvICpnYm1vZHVsZSwKLQkJCQlzdHJ1Y3QgZ3JleWJ1c19kZXNjcmlw
dG9yX2Nwb3J0ICpjcG9ydF9kZXNjLAotCQkJCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZSkKLXsK
LQlzdHJ1Y3QgZ2JfY29ubmVjdGlvbiAqY29ubmVjdGlvbjsKLQotCS8qIE1hbmFnZW1lbnQgQ3Bv
cnQgKi8KLQlpZiAoZ2Jtb2R1bGUtPm1nbXRfY29ubmVjdGlvbikgewotCQlkZXZfZXJyKCZidW5k
bGUtPmRldiwKLQkJCSJDYW4ndCBoYXZlIG11bHRpcGxlIE1hbmFnZW1lbnQgY29ubmVjdGlvbnNc
biIpOwotCQlyZXR1cm4gLUVOT0RFVjsKLQl9Ci0KLQljb25uZWN0aW9uID0gZ2JfY29ubmVjdGlv
bl9jcmVhdGUoYnVuZGxlLCBsZTE2X3RvX2NwdShjcG9ydF9kZXNjLT5pZCksCi0JCQkJCSAgZ2Jh
dWRpb19jb2RlY19yZXF1ZXN0X2hhbmRsZXIpOwotCWlmIChJU19FUlIoY29ubmVjdGlvbikpCi0J
CXJldHVybiBQVFJfRVJSKGNvbm5lY3Rpb24pOwotCi0JZ3JleWJ1c19zZXRfZHJ2ZGF0YShidW5k
bGUsIGdibW9kdWxlKTsKLQlnYm1vZHVsZS0+bWdtdF9jb25uZWN0aW9uID0gY29ubmVjdGlvbjsK
LQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGdiX2F1ZGlvX2FkZF9kYXRhX2Nvbm5lY3Rp
b24oc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKmdibW9kdWxlLAotCQkJCXN0cnVjdCBncmV5
YnVzX2Rlc2NyaXB0b3JfY3BvcnQgKmNwb3J0X2Rlc2MsCi0JCQkJc3RydWN0IGdiX2J1bmRsZSAq
YnVuZGxlKQotewotCXN0cnVjdCBnYl9jb25uZWN0aW9uICpjb25uZWN0aW9uOwotCXN0cnVjdCBn
YmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGFpOwotCi0JZGFpID0gZGV2bV9remFsbG9jKGdibW9k
dWxlLT5kZXYsIHNpemVvZigqZGFpKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFkYWkpCi0JCXJldHVy
biAtRU5PTUVNOwotCi0JY29ubmVjdGlvbiA9IGdiX2Nvbm5lY3Rpb25fY3JlYXRlX29mZmxvYWRl
ZChidW5kbGUsCi0JCQkJCQkgICAgbGUxNl90b19jcHUoY3BvcnRfZGVzYy0+aWQpLAotCQkJCQkJ
ICAgIEdCX0NPTk5FQ1RJT05fRkxBR19DU0QpOwotCWlmIChJU19FUlIoY29ubmVjdGlvbikpIHsK
LQkJZGV2bV9rZnJlZShnYm1vZHVsZS0+ZGV2LCBkYWkpOwotCQlyZXR1cm4gUFRSX0VSUihjb25u
ZWN0aW9uKTsKLQl9Ci0KLQlncmV5YnVzX3NldF9kcnZkYXRhKGJ1bmRsZSwgZ2Jtb2R1bGUpOwot
CWRhaS0+aWQgPSAwOwotCWRhaS0+ZGF0YV9jcG9ydCA9IGNvbm5lY3Rpb24tPmludGZfY3BvcnRf
aWQ7Ci0JZGFpLT5jb25uZWN0aW9uID0gY29ubmVjdGlvbjsKLQlsaXN0X2FkZCgmZGFpLT5saXN0
LCAmZ2Jtb2R1bGUtPmRhdGFfbGlzdCk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotLyoKLSAqIFRoaXMg
aXMgdGhlIGJhc2ljIGhvb2sgZ2V0IHRoaW5ncyBpbml0aWFsaXplZCBhbmQgcmVnaXN0ZXJlZCB3
LyBnYgotICovCi0KLXN0YXRpYyBpbnQgZ2JfYXVkaW9fcHJvYmUoc3RydWN0IGdiX2J1bmRsZSAq
YnVuZGxlLAotCQkJICBjb25zdCBzdHJ1Y3QgZ3JleWJ1c19idW5kbGVfaWQgKmlkKQotewotCXN0
cnVjdCBkZXZpY2UgKmRldiA9ICZidW5kbGUtPmRldjsKLQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVf
aW5mbyAqZ2Jtb2R1bGU7Ci0Jc3RydWN0IGdyZXlidXNfZGVzY3JpcHRvcl9jcG9ydCAqY3BvcnRf
ZGVzYzsKLQlzdHJ1Y3QgZ2JfYXVkaW9fbWFuYWdlcl9tb2R1bGVfZGVzY3JpcHRvciBkZXNjOwot
CXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVjdGlvbiAqZGFpLCAqX2RhaTsKLQlpbnQgcmV0LCBp
OwotCXN0cnVjdCBnYl9hdWRpb190b3BvbG9neSAqdG9wb2xvZ3k7Ci0KLQkvKiBUaGVyZSBzaG91
bGQgYmUgYXQgbGVhc3Qgb25lIE1hbmFnZW1lbnQgYW5kIG9uZSBEYXRhIGNwb3J0ICovCi0JaWYg
KGJ1bmRsZS0+bnVtX2Nwb3J0cyA8IDIpCi0JCXJldHVybiAtRU5PREVWOwotCi0JLyoKLQkgKiBU
aGVyZSBjYW4gYmUgb25seSBvbmUgTWFuYWdlbWVudCBjb25uZWN0aW9uIGFuZCBhbnkgbnVtYmVy
IG9mIGRhdGEKLQkgKiBjb25uZWN0aW9ucy4KLQkgKi8KLQlnYm1vZHVsZSA9IGRldm1fa3phbGxv
YyhkZXYsIHNpemVvZigqZ2Jtb2R1bGUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWdibW9kdWxlKQot
CQlyZXR1cm4gLUVOT01FTTsKLQotCWdibW9kdWxlLT5udW1fZGF0YV9jb25uZWN0aW9ucyA9IGJ1
bmRsZS0+bnVtX2Nwb3J0cyAtIDE7Ci0JSU5JVF9MSVNUX0hFQUQoJmdibW9kdWxlLT5kYXRhX2xp
c3QpOwotCUlOSVRfTElTVF9IRUFEKCZnYm1vZHVsZS0+d2lkZ2V0X2xpc3QpOwotCUlOSVRfTElT
VF9IRUFEKCZnYm1vZHVsZS0+Y3RsX2xpc3QpOwotCUlOSVRfTElTVF9IRUFEKCZnYm1vZHVsZS0+
d2lkZ2V0X2N0bF9saXN0KTsKLQlnYm1vZHVsZS0+ZGV2ID0gZGV2OwotCXNucHJpbnRmKGdibW9k
dWxlLT5uYW1lLCBOQU1FX1NJWkUsICIlcy4lcyIsIGRldi0+ZHJpdmVyLT5uYW1lLAotCQkgZGV2
X25hbWUoZGV2KSk7Ci0JZ3JleWJ1c19zZXRfZHJ2ZGF0YShidW5kbGUsIGdibW9kdWxlKTsKLQot
CS8qIENyZWF0ZSBhbGwgY29ubmVjdGlvbnMgKi8KLQlmb3IgKGkgPSAwOyBpIDwgYnVuZGxlLT5u
dW1fY3BvcnRzOyBpKyspIHsKLQkJY3BvcnRfZGVzYyA9ICZidW5kbGUtPmNwb3J0X2Rlc2NbaV07
Ci0KLQkJc3dpdGNoIChjcG9ydF9kZXNjLT5wcm90b2NvbF9pZCkgewotCQljYXNlIEdSRVlCVVNf
UFJPVE9DT0xfQVVESU9fTUdNVDoKLQkJCXJldCA9IGdiX2F1ZGlvX2FkZF9tZ210X2Nvbm5lY3Rp
b24oZ2Jtb2R1bGUsIGNwb3J0X2Rlc2MsCi0JCQkJCQkJICAgYnVuZGxlKTsKLQkJCWlmIChyZXQp
Ci0JCQkJZ290byBkZXN0cm95X2Nvbm5lY3Rpb25zOwotCQkJYnJlYWs7Ci0JCWNhc2UgR1JFWUJV
U19QUk9UT0NPTF9BVURJT19EQVRBOgotCQkJcmV0ID0gZ2JfYXVkaW9fYWRkX2RhdGFfY29ubmVj
dGlvbihnYm1vZHVsZSwgY3BvcnRfZGVzYywKLQkJCQkJCQkgICBidW5kbGUpOwotCQkJaWYgKHJl
dCkKLQkJCQlnb3RvIGRlc3Ryb3lfY29ubmVjdGlvbnM7Ci0JCQlicmVhazsKLQkJZGVmYXVsdDoK
LQkJCWRldl9lcnIoZGV2LCAiVW5zdXBwb3J0ZWQgcHJvdG9jb2w6IDB4JTAyeFxuIiwKLQkJCQlj
cG9ydF9kZXNjLT5wcm90b2NvbF9pZCk7Ci0JCQlyZXQgPSAtRU5PREVWOwotCQkJZ290byBkZXN0
cm95X2Nvbm5lY3Rpb25zOwotCQl9Ci0JfQotCi0JLyogVGhlcmUgbXVzdCBiZSBhIG1hbmFnZW1l
bnQgY3BvcnQgKi8KLQlpZiAoIWdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24pIHsKLQkJcmV0ID0g
LUVJTlZBTDsKLQkJZGV2X2VycihkZXYsICJNaXNzaW5nIG1hbmFnZW1lbnQgY29ubmVjdGlvblxu
Iik7Ci0JCWdvdG8gZGVzdHJveV9jb25uZWN0aW9uczsKLQl9Ci0KLQkvKiBJbml0aWFsaXplIG1h
bmFnZW1lbnQgY29ubmVjdGlvbiAqLwotCXJldCA9IGdiX2Nvbm5lY3Rpb25fZW5hYmxlKGdibW9k
dWxlLT5tZ210X2Nvbm5lY3Rpb24pOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICIlZDog
RXJyb3Igd2hpbGUgZW5hYmxpbmcgbWdtdCBjb25uZWN0aW9uXG4iLCByZXQpOwotCQlnb3RvIGRl
c3Ryb3lfY29ubmVjdGlvbnM7Ci0JfQotCWdibW9kdWxlLT5kZXZfaWQgPSBnYm1vZHVsZS0+bWdt
dF9jb25uZWN0aW9uLT5pbnRmLT5pbnRlcmZhY2VfaWQ7Ci0KLQkvKgotCSAqIEZJWE1FOiBtYWxs
b2MgZm9yIHRvcG9sb2d5IGhhcHBlbnMgdmlhIGF1ZGlvX2diIGRyaXZlcgotCSAqIHNob3VsZCBi
ZSBkb25lIHdpdGhpbiBjb2RlYyBkcml2ZXIgaXRzZWxmCi0JICovCi0JcmV0ID0gZ2JfYXVkaW9f
Z2JfZ2V0X3RvcG9sb2d5KGdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sICZ0b3BvbG9neSk7Ci0J
aWYgKHJldCkgewotCQlkZXZfZXJyKGRldiwgIiVkOkVycm9yIHdoaWxlIGZldGNoaW5nIHRvcG9s
b2d5XG4iLCByZXQpOwotCQlnb3RvIGRpc2FibGVfY29ubmVjdGlvbjsKLQl9Ci0KLQkvKiBwcm9j
ZXNzIHRvcG9sb2d5IGRhdGEgKi8KLQlyZXQgPSBnYmF1ZGlvX3RwbGdfcGFyc2VfZGF0YShnYm1v
ZHVsZSwgdG9wb2xvZ3kpOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICIlZDpFcnJvciB3
aGlsZSBwYXJzaW5nIHRvcG9sb2d5IGRhdGFcbiIsCi0JCQlyZXQpOwotCQlnb3RvIGZyZWVfdG9w
b2xvZ3k7Ci0JfQotCWdibW9kdWxlLT50b3BvbG9neSA9IHRvcG9sb2d5OwotCi0JLyogSW5pdGlh
bGl6ZSBkYXRhIGNvbm5lY3Rpb25zICovCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShkYWksICZnYm1v
ZHVsZS0+ZGF0YV9saXN0LCBsaXN0KSB7Ci0JCXJldCA9IGdiX2Nvbm5lY3Rpb25fZW5hYmxlKGRh
aS0+Y29ubmVjdGlvbik7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnIoZGV2LAotCQkJCSIlZDpF
cnJvciB3aGlsZSBlbmFibGluZyAlZDpkYXRhIGNvbm5lY3Rpb25cbiIsCi0JCQkJcmV0LCBkYWkt
PmRhdGFfY3BvcnQpOwotCQkJZ290byBkaXNhYmxlX2RhdGFfY29ubmVjdGlvbjsKLQkJfQotCX0K
LQotCS8qIHJlZ2lzdGVyIG1vZHVsZSB3aXRoIGdiY29kZWMgKi8KLQlyZXQgPSBnYmF1ZGlvX3Jl
Z2lzdGVyX21vZHVsZShnYm1vZHVsZSk7Ci0JaWYgKHJldCkKLQkJZ290byBkaXNhYmxlX2RhdGFf
Y29ubmVjdGlvbjsKLQotCS8qIGluZm9ybSBhYm92ZSBsYXllciBmb3IgdWV2ZW50ICovCi0JZGV2
X2RiZyhkZXYsICJJbmZvcm0gc2V0X2V2ZW50OiVkIHRvIGFib3ZlIGxheWVyXG4iLCAxKTsKLQkv
KiBwcmVwYXJlIGZvciB0aGUgYXVkaW8gbWFuYWdlciAqLwotCXN0cmxjcHkoZGVzYy5uYW1lLCBn
Ym1vZHVsZS0+bmFtZSwgR0JfQVVESU9fTUFOQUdFUl9NT0RVTEVfTkFNRV9MRU4pOwotCWRlc2Mu
dmlkID0gMjsgLyogdG9kbyAqLwotCWRlc2MucGlkID0gMzsgLyogdG9kbyAqLwotCWRlc2MuaW50
Zl9pZCA9IGdibW9kdWxlLT5kZXZfaWQ7Ci0JZGVzYy5vcF9kZXZpY2VzID0gZ2Jtb2R1bGUtPm9w
X2RldmljZXM7Ci0JZGVzYy5pcF9kZXZpY2VzID0gZ2Jtb2R1bGUtPmlwX2RldmljZXM7Ci0JZ2Jt
b2R1bGUtPm1hbmFnZXJfaWQgPSBnYl9hdWRpb19tYW5hZ2VyX2FkZCgmZGVzYyk7Ci0KLQlkZXZf
ZGJnKGRldiwgIkFkZCBHQiBBdWRpbyBkZXZpY2U6JXNcbiIsIGdibW9kdWxlLT5uYW1lKTsKLQot
CWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7Ci0KLQlyZXR1cm4gMDsKLQot
ZGlzYWJsZV9kYXRhX2Nvbm5lY3Rpb246Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGRhaSwg
X2RhaSwgJmdibW9kdWxlLT5kYXRhX2xpc3QsIGxpc3QpCi0JCWdiX2Nvbm5lY3Rpb25fZGlzYWJs
ZShkYWktPmNvbm5lY3Rpb24pOwotCWdiYXVkaW9fdHBsZ19yZWxlYXNlKGdibW9kdWxlKTsKLQln
Ym1vZHVsZS0+dG9wb2xvZ3kgPSBOVUxMOwotCi1mcmVlX3RvcG9sb2d5OgotCWtmcmVlKHRvcG9s
b2d5KTsKLQotZGlzYWJsZV9jb25uZWN0aW9uOgotCWdiX2Nvbm5lY3Rpb25fZGlzYWJsZShnYm1v
ZHVsZS0+bWdtdF9jb25uZWN0aW9uKTsKLQotZGVzdHJveV9jb25uZWN0aW9uczoKLQlsaXN0X2Zv
cl9lYWNoX2VudHJ5X3NhZmUoZGFpLCBfZGFpLCAmZ2Jtb2R1bGUtPmRhdGFfbGlzdCwgbGlzdCkg
ewotCQlnYl9jb25uZWN0aW9uX2Rlc3Ryb3koZGFpLT5jb25uZWN0aW9uKTsKLQkJbGlzdF9kZWwo
JmRhaS0+bGlzdCk7Ci0JCWRldm1fa2ZyZWUoZGV2LCBkYWkpOwotCX0KLQotCWlmIChnYm1vZHVs
ZS0+bWdtdF9jb25uZWN0aW9uKQotCQlnYl9jb25uZWN0aW9uX2Rlc3Ryb3koZ2Jtb2R1bGUtPm1n
bXRfY29ubmVjdGlvbik7Ci0KLQlkZXZtX2tmcmVlKGRldiwgZ2Jtb2R1bGUpOwotCi0JcmV0dXJu
IHJldDsKLX0KLQotc3RhdGljIHZvaWQgZ2JfYXVkaW9fZGlzY29ubmVjdChzdHJ1Y3QgZ2JfYnVu
ZGxlICpidW5kbGUpCi17Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKmdibW9kdWxlID0g
Z3JleWJ1c19nZXRfZHJ2ZGF0YShidW5kbGUpOwotCXN0cnVjdCBnYmF1ZGlvX2RhdGFfY29ubmVj
dGlvbiAqZGFpLCAqX2RhaTsKLQotCWdiX3BtX3J1bnRpbWVfZ2V0X3N5bmMoYnVuZGxlKTsKLQot
CS8qIGNsZWFudXAgbW9kdWxlIHJlbGF0ZWQgcmVzb3VyY2VzIGZpcnN0ICovCi0JZ2JhdWRpb191
bnJlZ2lzdGVyX21vZHVsZShnYm1vZHVsZSk7Ci0KLQkvKiBpbmZvcm0gdWV2ZW50IHRvIGFib3Zl
IGxheWVycyAqLwotCWdiX2F1ZGlvX21hbmFnZXJfcmVtb3ZlKGdibW9kdWxlLT5tYW5hZ2VyX2lk
KTsKLQotCWdiYXVkaW9fdHBsZ19yZWxlYXNlKGdibW9kdWxlKTsKLQlrZnJlZShnYm1vZHVsZS0+
dG9wb2xvZ3kpOwotCWdibW9kdWxlLT50b3BvbG9neSA9IE5VTEw7Ci0JZ2JfY29ubmVjdGlvbl9k
aXNhYmxlKGdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24pOwotCWxpc3RfZm9yX2VhY2hfZW50cnlf
c2FmZShkYWksIF9kYWksICZnYm1vZHVsZS0+ZGF0YV9saXN0LCBsaXN0KSB7Ci0JCWdiX2Nvbm5l
Y3Rpb25fZGlzYWJsZShkYWktPmNvbm5lY3Rpb24pOwotCQlnYl9jb25uZWN0aW9uX2Rlc3Ryb3ko
ZGFpLT5jb25uZWN0aW9uKTsKLQkJbGlzdF9kZWwoJmRhaS0+bGlzdCk7Ci0JCWRldm1fa2ZyZWUo
Z2Jtb2R1bGUtPmRldiwgZGFpKTsKLQl9Ci0JZ2JfY29ubmVjdGlvbl9kZXN0cm95KGdibW9kdWxl
LT5tZ210X2Nvbm5lY3Rpb24pOwotCWdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24gPSBOVUxMOwot
Ci0JZGV2bV9rZnJlZSgmYnVuZGxlLT5kZXYsIGdibW9kdWxlKTsKLX0KLQotc3RhdGljIGNvbnN0
IHN0cnVjdCBncmV5YnVzX2J1bmRsZV9pZCBnYl9hdWRpb19pZF90YWJsZVtdID0gewotCXsgR1JF
WUJVU19ERVZJQ0VfQ0xBU1MoR1JFWUJVU19DTEFTU19BVURJTykgfSwKLQl7IH0KLX07Ci1NT0RV
TEVfREVWSUNFX1RBQkxFKGdyZXlidXMsIGdiX2F1ZGlvX2lkX3RhYmxlKTsKLQotI2lmZGVmIENP
TkZJR19QTQotc3RhdGljIGludCBnYl9hdWRpb19zdXNwZW5kKHN0cnVjdCBkZXZpY2UgKmRldikK
LXsKLQlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGUgPSB0b19nYl9idW5kbGUoZGV2KTsKLQlzdHJ1
Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqZ2Jtb2R1bGUgPSBncmV5YnVzX2dldF9kcnZkYXRhKGJ1
bmRsZSk7Ci0Jc3RydWN0IGdiYXVkaW9fZGF0YV9jb25uZWN0aW9uICpkYWk7Ci0KLQlsaXN0X2Zv
cl9lYWNoX2VudHJ5KGRhaSwgJmdibW9kdWxlLT5kYXRhX2xpc3QsIGxpc3QpCi0JCWdiX2Nvbm5l
Y3Rpb25fZGlzYWJsZShkYWktPmNvbm5lY3Rpb24pOwotCi0JZ2JfY29ubmVjdGlvbl9kaXNhYmxl
KGdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24pOwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBp
bnQgZ2JfYXVkaW9fcmVzdW1lKHN0cnVjdCBkZXZpY2UgKmRldikKLXsKLQlzdHJ1Y3QgZ2JfYnVu
ZGxlICpidW5kbGUgPSB0b19nYl9idW5kbGUoZGV2KTsKLQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVf
aW5mbyAqZ2Jtb2R1bGUgPSBncmV5YnVzX2dldF9kcnZkYXRhKGJ1bmRsZSk7Ci0Jc3RydWN0IGdi
YXVkaW9fZGF0YV9jb25uZWN0aW9uICpkYWk7Ci0JaW50IHJldDsKLQotCXJldCA9IGdiX2Nvbm5l
Y3Rpb25fZW5hYmxlKGdibW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24pOwotCWlmIChyZXQpIHsKLQkJ
ZGV2X2VycihkZXYsICIlZDpFcnJvciB3aGlsZSBlbmFibGluZyBtZ210IGNvbm5lY3Rpb25cbiIs
IHJldCk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShkYWksICZn
Ym1vZHVsZS0+ZGF0YV9saXN0LCBsaXN0KSB7Ci0JCXJldCA9IGdiX2Nvbm5lY3Rpb25fZW5hYmxl
KGRhaS0+Y29ubmVjdGlvbik7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnIoZGV2LAotCQkJCSIl
ZDpFcnJvciB3aGlsZSBlbmFibGluZyAlZDpkYXRhIGNvbm5lY3Rpb25cbiIsCi0JCQkJcmV0LCBk
YWktPmRhdGFfY3BvcnQpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCX0KLQotCXJldHVybiAwOwot
fQotI2VuZGlmCi0KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZGV2X3BtX29wcyBnYl9hdWRpb19wbV9v
cHMgPSB7Ci0JU0VUX1JVTlRJTUVfUE1fT1BTKGdiX2F1ZGlvX3N1c3BlbmQsIGdiX2F1ZGlvX3Jl
c3VtZSwgTlVMTCkKLX07Ci0KLXN0YXRpYyBzdHJ1Y3QgZ3JleWJ1c19kcml2ZXIgZ2JfYXVkaW9f
ZHJpdmVyID0gewotCS5uYW1lCQk9ICJnYi1hdWRpbyIsCi0JLnByb2JlCQk9IGdiX2F1ZGlvX3By
b2JlLAotCS5kaXNjb25uZWN0CT0gZ2JfYXVkaW9fZGlzY29ubmVjdCwKLQkuaWRfdGFibGUJPSBn
Yl9hdWRpb19pZF90YWJsZSwKLQkuZHJpdmVyLnBtCT0gJmdiX2F1ZGlvX3BtX29wcywKLX07Ci1t
b2R1bGVfZ3JleWJ1c19kcml2ZXIoZ2JfYXVkaW9fZHJpdmVyKTsKLQotTU9EVUxFX0RFU0NSSVBU
SU9OKCJHcmV5YnVzIEF1ZGlvIG1vZHVsZSBkcml2ZXIiKTsKLU1PRFVMRV9BVVRIT1IoIlZhaWJo
YXYgQWdhcndhbCA8dmFpYmhhdi5hZ2Fyd2FsQGxpbmFyby5vcmc+Iik7Ci1NT0RVTEVfTElDRU5T
RSgiR1BMIHYyIik7Ci1NT0RVTEVfQUxJQVMoInBsYXRmb3JtOmdiYXVkaW8tbW9kdWxlIik7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy9hdWRpb190b3BvbG9neS5jIGIvZHJp
dmVycy9zdGFnaW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYwpkZWxldGVkIGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggNGFjMzBhY2NmMjI2Li4wMDAwMDAwMDAwMDAKLS0tIGEvZHJpdmVycy9zdGFn
aW5nL2dyZXlidXMvYXVkaW9fdG9wb2xvZ3kuYworKysgL2Rldi9udWxsCkBAIC0xLDE0NDggKzAs
MCBAQAotLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKLS8qCi0gKiBHcmV5YnVz
IGF1ZGlvIGRyaXZlcgotICogQ29weXJpZ2h0IDIwMTUtMjAxNiBHb29nbGUgSW5jLgotICogQ29w
eXJpZ2h0IDIwMTUtMjAxNiBMaW5hcm8gTHRkLgotICovCi0KLSNpbmNsdWRlICJhdWRpb19jb2Rl
Yy5oIgotI2luY2x1ZGUgImdyZXlidXNfcHJvdG9jb2xzLmgiCi0KLSNkZWZpbmUgR0JBVURJT19J
TlZBTElEX0lECTB4RkYKLQotLyogbWl4ZXIgY29udHJvbCAqLwotc3RydWN0IGdiX21peGVyX2Nv
bnRyb2wgewotCWludCBtaW4sIG1heDsKLQl1bnNpZ25lZCBpbnQgcmVnLCBycmVnLCBzaGlmdCwg
cnNoaWZ0LCBpbnZlcnQ7Ci19OwotCi1zdHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0IHsKLQl1bnNpZ25l
ZCBpbnQgY3RsX2lkOwotCXVuc2lnbmVkIGludCBkYXRhX2Nwb3J0OwotCXVuc2lnbmVkIGludCBh
Y2Nlc3M7Ci0JdW5zaWduZWQgaW50IHZjb3VudDsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1f
aW5mbyAqaW5mbzsKLX07Ci0KLXN0YXRpYyBzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqZmlu
ZF9nYl9tb2R1bGUoCi0JCQkJCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmNvZGVjLAotCQkJ
CQljaGFyIGNvbnN0ICpuYW1lKQotewotCWludCBkZXZfaWQsIHJldDsKLQljaGFyIGJlZ2luW05B
TUVfU0laRV07Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKLQotCWlmICgh
bmFtZSkKLQkJcmV0dXJuIE5VTEw7Ci0KLQlyZXQgPSBzc2NhbmYobmFtZSwgIiVzICVkIiwgYmVn
aW4sICZkZXZfaWQpOwotCWRldl9kYmcoY29kZWMtPmRldiwgIiVzOkZpbmQgbW9kdWxlIyVkXG4i
LCBfX2Z1bmNfXywgZGV2X2lkKTsKLQotCW11dGV4X2xvY2soJmNvZGVjLT5sb2NrKTsKLQlsaXN0
X2Zvcl9lYWNoX2VudHJ5KG1vZHVsZSwgJmNvZGVjLT5tb2R1bGVfbGlzdCwgbGlzdCkgewotCQlp
ZiAobW9kdWxlLT5kZXZfaWQgPT0gZGV2X2lkKSB7Ci0JCQltdXRleF91bmxvY2soJmNvZGVjLT5s
b2NrKTsKLQkJCXJldHVybiBtb2R1bGU7Ci0JCX0KLQl9Ci0JbXV0ZXhfdW5sb2NrKCZjb2RlYy0+
bG9jayk7Ci0JZGV2X3dhcm4oY29kZWMtPmRldiwgIiVzOiBtb2R1bGUjJWQgbWlzc2luZyBpbiBj
b2RlYyBsaXN0XG4iLCBuYW1lLAotCQkgZGV2X2lkKTsKLQlyZXR1cm4gTlVMTDsKLX0KLQotc3Rh
dGljIGNvbnN0IGNoYXIgKmdiYXVkaW9fbWFwX2NvbnRyb2xpZChzdHJ1Y3QgZ2JhdWRpb19tb2R1
bGVfaW5mbyAqbW9kdWxlLAotCQkJCQkgX191OCBjb250cm9sX2lkLCBfX3U4IGluZGV4KQotewot
CXN0cnVjdCBnYmF1ZGlvX2NvbnRyb2wgKmNvbnRyb2w7Ci0KLQlpZiAoY29udHJvbF9pZCA9PSBH
QkFVRElPX0lOVkFMSURfSUQpCi0JCXJldHVybiBOVUxMOwotCi0JbGlzdF9mb3JfZWFjaF9lbnRy
eShjb250cm9sLCAmbW9kdWxlLT5jdGxfbGlzdCwgbGlzdCkgewotCQlpZiAoY29udHJvbC0+aWQg
PT0gY29udHJvbF9pZCkgewotCQkJaWYgKGluZGV4ID09IEdCQVVESU9fSU5WQUxJRF9JRCkKLQkJ
CQlyZXR1cm4gY29udHJvbC0+bmFtZTsKLQkJCWlmIChpbmRleCA+PSBjb250cm9sLT5pdGVtcykK
LQkJCQlyZXR1cm4gTlVMTDsKLQkJCXJldHVybiBjb250cm9sLT50ZXh0c1tpbmRleF07Ci0JCX0K
LQl9Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb250cm9sLCAmbW9kdWxlLT53aWRnZXRfY3RsX2xp
c3QsIGxpc3QpIHsKLQkJaWYgKGNvbnRyb2wtPmlkID09IGNvbnRyb2xfaWQpIHsKLQkJCWlmIChp
bmRleCA9PSBHQkFVRElPX0lOVkFMSURfSUQpCi0JCQkJcmV0dXJuIGNvbnRyb2wtPm5hbWU7Ci0J
CQlpZiAoaW5kZXggPj0gY29udHJvbC0+aXRlbXMpCi0JCQkJcmV0dXJuIE5VTEw7Ci0JCQlyZXR1
cm4gY29udHJvbC0+dGV4dHNbaW5kZXhdOwotCQl9Ci0JfQotCXJldHVybiBOVUxMOwotfQotCi1z
dGF0aWMgaW50IGdiYXVkaW9fbWFwX2NvbnRyb2xuYW1lKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9p
bmZvICptb2R1bGUsCi0JCQkJICAgY29uc3QgY2hhciAqbmFtZSkKLXsKLQlzdHJ1Y3QgZ2JhdWRp
b19jb250cm9sICpjb250cm9sOwotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShjb250cm9sLCAmbW9k
dWxlLT5jdGxfbGlzdCwgbGlzdCkgewotCQlpZiAoIXN0cm5jbXAoY29udHJvbC0+bmFtZSwgbmFt
ZSwgTkFNRV9TSVpFKSkKLQkJCXJldHVybiBjb250cm9sLT5pZDsKLQl9Ci0KLQlkZXZfd2Fybiht
b2R1bGUtPmRldiwgIiVzOiBtaXNzaW5nIGluIG1vZHVsZXMgY29udHJvbHMgbGlzdFxuIiwgbmFt
ZSk7Ci0KLQlyZXR1cm4gLUVJTlZBTDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX21hcF93Y29u
dHJvbG5hbWUoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSwKLQkJCQkgICAgY29u
c3QgY2hhciAqbmFtZSkKLXsKLQlzdHJ1Y3QgZ2JhdWRpb19jb250cm9sICpjb250cm9sOwotCi0J
bGlzdF9mb3JfZWFjaF9lbnRyeShjb250cm9sLCAmbW9kdWxlLT53aWRnZXRfY3RsX2xpc3QsIGxp
c3QpIHsKLQkJaWYgKCFzdHJuY21wKGNvbnRyb2wtPnduYW1lLCBuYW1lLCBOQU1FX1NJWkUpKQot
CQkJcmV0dXJuIGNvbnRyb2wtPmlkOwotCX0KLQlkZXZfd2Fybihtb2R1bGUtPmRldiwgIiVzOiBt
aXNzaW5nIGluIG1vZHVsZXMgY29udHJvbHMgbGlzdFxuIiwgbmFtZSk7Ci0KLQlyZXR1cm4gLUVJ
TlZBTDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX21hcF93aWRnZXRuYW1lKHN0cnVjdCBnYmF1
ZGlvX21vZHVsZV9pbmZvICptb2R1bGUsCi0JCQkJICBjb25zdCBjaGFyICpuYW1lKQotewotCXN0
cnVjdCBnYmF1ZGlvX3dpZGdldCAqd2lkZ2V0OwotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeSh3aWRn
ZXQsICZtb2R1bGUtPndpZGdldF9saXN0LCBsaXN0KSB7Ci0JCWlmICghc3RybmNtcCh3aWRnZXQt
Pm5hbWUsIG5hbWUsIE5BTUVfU0laRSkpCi0JCQlyZXR1cm4gd2lkZ2V0LT5pZDsKLQl9Ci0JZGV2
X3dhcm4obW9kdWxlLT5kZXYsICIlczogbWlzc2luZyBpbiBtb2R1bGVzIHdpZGdldHMgbGlzdFxu
IiwgbmFtZSk7Ci0KLQlyZXR1cm4gLUVJTlZBTDsKLX0KLQotc3RhdGljIGNvbnN0IGNoYXIgKmdi
YXVkaW9fbWFwX3dpZGdldGlkKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGUsCi0J
CQkJCV9fdTggd2lkZ2V0X2lkKQotewotCXN0cnVjdCBnYmF1ZGlvX3dpZGdldCAqd2lkZ2V0Owot
Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeSh3aWRnZXQsICZtb2R1bGUtPndpZGdldF9saXN0LCBsaXN0
KSB7Ci0JCWlmICh3aWRnZXQtPmlkID09IHdpZGdldF9pZCkKLQkJCXJldHVybiB3aWRnZXQtPm5h
bWU7Ci0JfQotCXJldHVybiBOVUxMOwotfQotCi1zdGF0aWMgY29uc3QgY2hhciAqKmdiX2dlbmVy
YXRlX2VudW1fc3RyaW5ncyhzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqZ2IsCi0JCQkJCSAg
ICAgc3RydWN0IGdiX2F1ZGlvX2VudW1lcmF0ZWQgKmdiZW51bSkKLXsKLQljb25zdCBjaGFyICoq
c3RyaW5nczsKLQlpbnQgaTsKLQl1bnNpZ25lZCBpbnQgaXRlbXM7Ci0JX191OCAqZGF0YTsKLQot
CWl0ZW1zID0gbGUzMl90b19jcHUoZ2JlbnVtLT5pdGVtcyk7Ci0Jc3RyaW5ncyA9IGRldm1fa2Nh
bGxvYyhnYi0+ZGV2LCBpdGVtcywgc2l6ZW9mKGNoYXIgKiksIEdGUF9LRVJORUwpOwotCWRhdGEg
PSBnYmVudW0tPm5hbWVzOwotCi0JZm9yIChpID0gMDsgaSA8IGl0ZW1zOyBpKyspIHsKLQkJc3Ry
aW5nc1tpXSA9IChjb25zdCBjaGFyICopZGF0YTsKLQkJd2hpbGUgKCpkYXRhICE9ICdcMCcpCi0J
CQlkYXRhKys7Ci0JCWRhdGErKzsKLQl9Ci0KLQlyZXR1cm4gc3RyaW5nczsKLX0KLQotc3RhdGlj
IGludCBnYmNvZGVjX21peGVyX2N0bF9pbmZvKHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9s
LAotCQkJCSAgc3RydWN0IHNuZF9jdGxfZWxlbV9pbmZvICp1aW5mbykKLXsKLQl1bnNpZ25lZCBp
bnQgbWF4OwotCWNvbnN0IGNoYXIgKm5hbWU7Ci0Jc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0
YTsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5mbyAqaW5mbzsKLQlzdHJ1Y3QgZ2JhdWRp
b19tb2R1bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHNu
ZF9rY29udHJvbF9jaGlwKGtjb250cm9sKTsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpn
YmNvZGVjID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7Ci0KLQlkZXZfZGJnKGNv
ZGVjLT5kZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUp
OwotCWRhdGEgPSAoc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqKWtjb250cm9sLT5wcml2YXRlX3Zh
bHVlOwotCWluZm8gPSAoc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8gKilkYXRhLT5pbmZv
OwotCi0JaWYgKCFpbmZvKSB7Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIk5VTEwgaW5mbyBmb3Ig
JXNcbiIsIHVpbmZvLT5pZC5uYW1lKTsKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JfQotCi0JLyogdXBk
YXRlIHVpbmZvICovCi0JdWluZm8tPmFjY2VzcyA9IGRhdGEtPmFjY2VzczsKLQl1aW5mby0+Y291
bnQgPSBkYXRhLT52Y291bnQ7Ci0JdWluZm8tPnR5cGUgPSAoc25kX2N0bF9lbGVtX3R5cGVfdClp
bmZvLT50eXBlOwotCi0Jc3dpdGNoIChpbmZvLT50eXBlKSB7Ci0JY2FzZSBHQl9BVURJT19DVExf
RUxFTV9UWVBFX0JPT0xFQU46Ci0JY2FzZSBHQl9BVURJT19DVExfRUxFTV9UWVBFX0lOVEVHRVI6
Ci0JCXVpbmZvLT52YWx1ZS5pbnRlZ2VyLm1pbiA9IGxlMzJfdG9fY3B1KGluZm8tPnZhbHVlLmlu
dGVnZXIubWluKTsKLQkJdWluZm8tPnZhbHVlLmludGVnZXIubWF4ID0gbGUzMl90b19jcHUoaW5m
by0+dmFsdWUuaW50ZWdlci5tYXgpOwotCQlicmVhazsKLQljYXNlIEdCX0FVRElPX0NUTF9FTEVN
X1RZUEVfRU5VTUVSQVRFRDoKLQkJbWF4ID0gbGUzMl90b19jcHUoaW5mby0+dmFsdWUuZW51bWVy
YXRlZC5pdGVtcyk7Ci0JCXVpbmZvLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1zID0gbWF4OwotCQlp
ZiAodWluZm8tPnZhbHVlLmVudW1lcmF0ZWQuaXRlbSA+IG1heCAtIDEpCi0JCQl1aW5mby0+dmFs
dWUuZW51bWVyYXRlZC5pdGVtID0gbWF4IC0gMTsKLQkJbW9kdWxlID0gZmluZF9nYl9tb2R1bGUo
Z2Jjb2RlYywga2NvbnRyb2wtPmlkLm5hbWUpOwotCQlpZiAoIW1vZHVsZSkKLQkJCXJldHVybiAt
RUlOVkFMOwotCQluYW1lID0gZ2JhdWRpb19tYXBfY29udHJvbGlkKG1vZHVsZSwgZGF0YS0+Y3Rs
X2lkLAotCQkJCQkgICAgIHVpbmZvLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW0pOwotCQlzdHJsY3B5
KHVpbmZvLT52YWx1ZS5lbnVtZXJhdGVkLm5hbWUsIG5hbWUsIE5BTUVfU0laRSk7Ci0JCWJyZWFr
OwotCWRlZmF1bHQ6Ci0JCWRldl9lcnIoY29kZWMtPmRldiwgIkludmFsaWQgdHlwZTogJWQgZm9y
ICVzOmtjb250cm9sXG4iLAotCQkJaW5mby0+dHlwZSwga2NvbnRyb2wtPmlkLm5hbWUpOwotCQli
cmVhazsKLQl9Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxf
Z2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAotCQkJCSBzdHJ1Y3Qgc25kX2N0bF9l
bGVtX3ZhbHVlICp1Y29udHJvbCkKLXsKLQlpbnQgcmV0OwotCXN0cnVjdCBnYl9hdWRpb19jdGxf
ZWxlbV9pbmZvICppbmZvOwotCXN0cnVjdCBnYmF1ZGlvX2N0bF9wdnQgKmRhdGE7Ci0Jc3RydWN0
IGdiX2F1ZGlvX2N0bF9lbGVtX3ZhbHVlIGdidmFsdWU7Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxl
X2luZm8gKm1vZHVsZTsKLQlzdHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSBzbmRfa2NvbnRy
b2xfY2hpcChrY29udHJvbCk7Ci0Jc3RydWN0IGdiYXVkaW9fY29kZWNfaW5mbyAqZ2IgPSBzbmRf
c29jX2NvZGVjX2dldF9kcnZkYXRhKGNvZGVjKTsKLQlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGU7
Ci0KLQlkZXZfZGJnKGNvZGVjLT5kZXYsICJFbnRlcmVkICVzOiVzXG4iLCBfX2Z1bmNfXywga2Nv
bnRyb2wtPmlkLm5hbWUpOwotCW1vZHVsZSA9IGZpbmRfZ2JfbW9kdWxlKGdiLCBrY29udHJvbC0+
aWQubmFtZSk7Ci0JaWYgKCFtb2R1bGUpCi0JCXJldHVybiAtRUlOVkFMOwotCi0JZGF0YSA9IChz
dHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0ICopa2NvbnRyb2wtPnByaXZhdGVfdmFsdWU7Ci0JaW5mbyA9
IChzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5mbyAqKWRhdGEtPmluZm87Ci0JYnVuZGxlID0g
dG9fZ2JfYnVuZGxlKG1vZHVsZS0+ZGV2KTsKLQotCXJldCA9IGdiX3BtX3J1bnRpbWVfZ2V0X3N5
bmMoYnVuZGxlKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCi0JcmV0ID0gZ2JfYXVkaW9f
Z2JfZ2V0X2NvbnRyb2wobW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sIGRhdGEtPmN0bF9pZCwKLQkJ
CQkgICAgICBHQl9BVURJT19JTlZBTElEX0lOREVYLCAmZ2J2YWx1ZSk7Ci0KLQlnYl9wbV9ydW50
aW1lX3B1dF9hdXRvc3VzcGVuZChidW5kbGUpOwotCi0JaWYgKHJldCkgewotCQlkZXZfZXJyX3Jh
dGVsaW1pdGVkKGNvZGVjLT5kZXYsICIlZDpFcnJvciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKLQkJ
CQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0K
LQkvKiB1cGRhdGUgdWNvbnRyb2wgKi8KLQlzd2l0Y2ggKGluZm8tPnR5cGUpIHsKLQljYXNlIEdC
X0FVRElPX0NUTF9FTEVNX1RZUEVfQk9PTEVBTjoKLQljYXNlIEdCX0FVRElPX0NUTF9FTEVNX1RZ
UEVfSU5URUdFUjoKLQkJdWNvbnRyb2wtPnZhbHVlLmludGVnZXIudmFsdWVbMF0gPQotCQkJbGUz
Ml90b19jcHUoZ2J2YWx1ZS52YWx1ZS5pbnRlZ2VyX3ZhbHVlWzBdKTsKLQkJaWYgKGRhdGEtPnZj
b3VudCA9PSAyKQotCQkJdWNvbnRyb2wtPnZhbHVlLmludGVnZXIudmFsdWVbMV0gPQotCQkJCWxl
MzJfdG9fY3B1KGdidmFsdWUudmFsdWUuaW50ZWdlcl92YWx1ZVsxXSk7Ci0JCWJyZWFrOwotCWNh
c2UgR0JfQVVESU9fQ1RMX0VMRU1fVFlQRV9FTlVNRVJBVEVEOgotCQl1Y29udHJvbC0+dmFsdWUu
ZW51bWVyYXRlZC5pdGVtWzBdID0KLQkJCWxlMzJfdG9fY3B1KGdidmFsdWUudmFsdWUuZW51bWVy
YXRlZF9pdGVtWzBdKTsKLQkJaWYgKGRhdGEtPnZjb3VudCA9PSAyKQotCQkJdWNvbnRyb2wtPnZh
bHVlLmVudW1lcmF0ZWQuaXRlbVsxXSA9Ci0JCQkJbGUzMl90b19jcHUoZ2J2YWx1ZS52YWx1ZS5l
bnVtZXJhdGVkX2l0ZW1bMV0pOwotCQlicmVhazsKLQlkZWZhdWx0OgotCQlkZXZfZXJyKGNvZGVj
LT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczprY29udHJvbFxuIiwKLQkJCWluZm8tPnR5
cGUsIGtjb250cm9sLT5pZC5uYW1lKTsKLQkJcmV0ID0gLUVJTlZBTDsKLQkJYnJlYWs7Ci0JfQot
CXJldHVybiByZXQ7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9jdGxfcHV0KHN0cnVj
dCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAotCQkJCSBzdHJ1Y3Qgc25kX2N0bF9lbGVtX3ZhbHVl
ICp1Y29udHJvbCkKLXsKLQlpbnQgcmV0ID0gMDsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1f
aW5mbyAqaW5mbzsKLQlzdHJ1Y3QgZ2JhdWRpb19jdGxfcHZ0ICpkYXRhOwotCXN0cnVjdCBnYl9h
dWRpb19jdGxfZWxlbV92YWx1ZSBnYnZhbHVlOwotCXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZv
ICptb2R1bGU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gc25kX2tjb250cm9sX2No
aXAoa2NvbnRyb2wpOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19j
b2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7Ci0Jc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwotCi0J
ZGV2X2RiZyhjb2RlYy0+ZGV2LCAiRW50ZXJlZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9s
LT5pZC5uYW1lKTsKLQltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5h
bWUpOwotCWlmICghbW9kdWxlKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCWRhdGEgPSAoc3RydWN0
IGdiYXVkaW9fY3RsX3B2dCAqKWtjb250cm9sLT5wcml2YXRlX3ZhbHVlOwotCWluZm8gPSAoc3Ry
dWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8gKilkYXRhLT5pbmZvOwotCWJ1bmRsZSA9IHRvX2di
X2J1bmRsZShtb2R1bGUtPmRldik7Ci0KLQkvKiB1cGRhdGUgdWNvbnRyb2wgKi8KLQlzd2l0Y2gg
KGluZm8tPnR5cGUpIHsKLQljYXNlIEdCX0FVRElPX0NUTF9FTEVNX1RZUEVfQk9PTEVBTjoKLQlj
YXNlIEdCX0FVRElPX0NUTF9FTEVNX1RZUEVfSU5URUdFUjoKLQkJZ2J2YWx1ZS52YWx1ZS5pbnRl
Z2VyX3ZhbHVlWzBdID0KLQkJCWNwdV90b19sZTMyKHVjb250cm9sLT52YWx1ZS5pbnRlZ2VyLnZh
bHVlWzBdKTsKLQkJaWYgKGRhdGEtPnZjb3VudCA9PSAyKQotCQkJZ2J2YWx1ZS52YWx1ZS5pbnRl
Z2VyX3ZhbHVlWzFdID0KLQkJCQljcHVfdG9fbGUzMih1Y29udHJvbC0+dmFsdWUuaW50ZWdlci52
YWx1ZVsxXSk7Ci0JCWJyZWFrOwotCWNhc2UgR0JfQVVESU9fQ1RMX0VMRU1fVFlQRV9FTlVNRVJB
VEVEOgotCQlnYnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVswXSA9Ci0JCQljcHVfdG9fbGUz
Mih1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzBdKTsKLQkJaWYgKGRhdGEtPnZjb3Vu
dCA9PSAyKQotCQkJZ2J2YWx1ZS52YWx1ZS5lbnVtZXJhdGVkX2l0ZW1bMV0gPQotCQkJCWNwdV90
b19sZTMyKHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMV0pOwotCQlicmVhazsKLQlk
ZWZhdWx0OgotCQlkZXZfZXJyKGNvZGVjLT5kZXYsICJJbnZhbGlkIHR5cGU6ICVkIGZvciAlczpr
Y29udHJvbFxuIiwKLQkJCWluZm8tPnR5cGUsIGtjb250cm9sLT5pZC5uYW1lKTsKLQkJcmV0ID0g
LUVJTlZBTDsKLQkJYnJlYWs7Ci0JfQotCi0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXJl
dCA9IGdiX3BtX3J1bnRpbWVfZ2V0X3N5bmMoYnVuZGxlKTsKLQlpZiAocmV0KQotCQlyZXR1cm4g
cmV0OwotCi0JcmV0ID0gZ2JfYXVkaW9fZ2Jfc2V0X2NvbnRyb2wobW9kdWxlLT5tZ210X2Nvbm5l
Y3Rpb24sIGRhdGEtPmN0bF9pZCwKLQkJCQkgICAgICBHQl9BVURJT19JTlZBTElEX0lOREVYLCAm
Z2J2YWx1ZSk7Ci0KLQlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChidW5kbGUpOwotCi0J
aWYgKHJldCkgewotCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVjLT5kZXYsICIlZDpFcnJvciBp
biAlcyBmb3IgJXNcbiIsIHJldCwKLQkJCQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1l
KTsKLQl9Ci0KLQlyZXR1cm4gcmV0OwotfQotCi0jZGVmaW5lIFNPQ19NSVhFUl9HQih4bmFtZSwg
a2NvdW50LCBkYXRhKSBcCi17CS5pZmFjZSA9IFNORFJWX0NUTF9FTEVNX0lGQUNFX01JWEVSLCAu
bmFtZSA9IHhuYW1lLCBcCi0JLmNvdW50ID0ga2NvdW50LCAuaW5mbyA9IGdiY29kZWNfbWl4ZXJf
Y3RsX2luZm8sIFwKLQkuZ2V0ID0gZ2Jjb2RlY19taXhlcl9jdGxfZ2V0LCAucHV0ID0gZ2Jjb2Rl
Y19taXhlcl9jdGxfcHV0LCBcCi0JLnByaXZhdGVfdmFsdWUgPSAodW5zaWduZWQgbG9uZylkYXRh
IH0KLQotLyoKLSAqIGFsdGhvdWdoIGJlbG93IGNhbGxiYWNrIGZ1bmN0aW9ucyBzZWVtcyByZWR1
bmRhbnQgdG8gYWJvdmUgZnVuY3Rpb25zLgotICogc2FtZSBhcmUga2VwdCB0byBhbGxvdyBwcm92
aXNpb24gZm9yIGRpZmZlcmVudCBoYW5kbGluZyBpbiBjYXNlCi0gKiBvZiBEQVBNIHJlbGF0ZWQg
c2VxdWVuY2luZywgZXRjLgotICovCi1zdGF0aWMgaW50IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxf
aW5mbyhzdHJ1Y3Qgc25kX2tjb250cm9sICprY29udHJvbCwKLQkJCQkgICAgICAgc3RydWN0IHNu
ZF9jdGxfZWxlbV9pbmZvICp1aW5mbykKLXsKLQlpbnQgcGxhdGZvcm1fbWF4LCBwbGF0Zm9ybV9t
aW47Ci0Jc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqZGF0YTsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3Rs
X2VsZW1faW5mbyAqaW5mbzsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldF9saXN0ICp3bGlz
dCA9IHNuZF9rY29udHJvbF9jaGlwKGtjb250cm9sKTsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dp
ZGdldCAqd2lkZ2V0ID0gd2xpc3QtPndpZGdldHNbMF07Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMg
KmNvZGVjID0gd2lkZ2V0LT5jb2RlYzsKLQotCWRldl9kYmcoY29kZWMtPmRldiwgIkVudGVyZWQg
JXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7Ci0JZGF0YSA9IChzdHJ1Y3Qg
Z2JhdWRpb19jdGxfcHZ0ICopa2NvbnRyb2wtPnByaXZhdGVfdmFsdWU7Ci0JaW5mbyA9IChzdHJ1
Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5mbyAqKWRhdGEtPmluZm87Ci0KLQkvKiB1cGRhdGUgdWlu
Zm8gKi8KLQlwbGF0Zm9ybV9tYXggPSBsZTMyX3RvX2NwdShpbmZvLT52YWx1ZS5pbnRlZ2VyLm1h
eCk7Ci0JcGxhdGZvcm1fbWluID0gbGUzMl90b19jcHUoaW5mby0+dmFsdWUuaW50ZWdlci5taW4p
OwotCi0JaWYgKHBsYXRmb3JtX21heCA9PSAxICYmCi0JICAgICFzdHJuc3RyKGtjb250cm9sLT5p
ZC5uYW1lLCAiIFZvbHVtZSIsIE5BTUVfU0laRSkpCi0JCXVpbmZvLT50eXBlID0gU05EUlZfQ1RM
X0VMRU1fVFlQRV9CT09MRUFOOwotCWVsc2UKLQkJdWluZm8tPnR5cGUgPSBTTkRSVl9DVExfRUxF
TV9UWVBFX0lOVEVHRVI7Ci0KLQl1aW5mby0+Y291bnQgPSBkYXRhLT52Y291bnQ7Ci0JdWluZm8t
PnZhbHVlLmludGVnZXIubWluID0gcGxhdGZvcm1fbWluOwotCXVpbmZvLT52YWx1ZS5pbnRlZ2Vy
Lm1heCA9IHBsYXRmb3JtX21heDsKLQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGdiY29k
ZWNfbWl4ZXJfZGFwbV9jdGxfZ2V0KHN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLAotCQkJ
CSAgICAgIHN0cnVjdCBzbmRfY3RsX2VsZW1fdmFsdWUgKnVjb250cm9sKQotewotCWludCByZXQ7
Ci0Jc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8gKmluZm87Ci0Jc3RydWN0IGdiYXVkaW9f
Y3RsX3B2dCAqZGF0YTsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1fdmFsdWUgZ2J2YWx1ZTsK
LQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwotCXN0cnVjdCBzbmRfc29jX2Rh
cG1fd2lkZ2V0X2xpc3QgKndsaXN0ID0gc25kX2tjb250cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0
cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0ICp3aWRnZXQgPSB3bGlzdC0+d2lkZ2V0c1swXTsKLQlz
dHJ1Y3Qgc25kX3NvY19jb2RlYyAqY29kZWMgPSB3aWRnZXQtPmNvZGVjOwotCXN0cnVjdCBnYmF1
ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShjb2RlYyk7Ci0J
c3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwotCi0JZGV2X2RiZyhjb2RlYy0+ZGV2LCAiRW50ZXJl
ZCAlczolc1xuIiwgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKLQltb2R1bGUgPSBmaW5k
X2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwotCWlmICghbW9kdWxlKQotCQlyZXR1
cm4gLUVJTlZBTDsKLQotCWRhdGEgPSAoc3RydWN0IGdiYXVkaW9fY3RsX3B2dCAqKWtjb250cm9s
LT5wcml2YXRlX3ZhbHVlOwotCWluZm8gPSAoc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVtX2luZm8g
KilkYXRhLT5pbmZvOwotCWJ1bmRsZSA9IHRvX2diX2J1bmRsZShtb2R1bGUtPmRldik7Ci0KLQlp
ZiAoZGF0YS0+dmNvdW50ID09IDIpCi0JCWRldl93YXJuKHdpZGdldC0+ZGFwbS0+ZGV2LAotCQkJ
ICJHQjogQ29udHJvbCAnJXMnIGlzIHN0ZXJlbywgd2hpY2ggaXMgbm90IHN1cHBvcnRlZFxuIiwK
LQkJCSBrY29udHJvbC0+aWQubmFtZSk7Ci0KLQlyZXQgPSBnYl9wbV9ydW50aW1lX2dldF9zeW5j
KGJ1bmRsZSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXJldCA9IGdiX2F1ZGlvX2di
X2dldF9jb250cm9sKG1vZHVsZS0+bWdtdF9jb25uZWN0aW9uLCBkYXRhLT5jdGxfaWQsCi0JCQkJ
ICAgICAgR0JfQVVESU9fSU5WQUxJRF9JTkRFWCwgJmdidmFsdWUpOwotCi0JZ2JfcG1fcnVudGlt
ZV9wdXRfYXV0b3N1c3BlbmQoYnVuZGxlKTsKLQotCWlmIChyZXQpIHsKLQkJZGV2X2Vycl9yYXRl
bGltaXRlZChjb2RlYy0+ZGV2LCAiJWQ6RXJyb3IgaW4gJXMgZm9yICVzXG4iLCByZXQsCi0JCQkJ
ICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCS8q
IHVwZGF0ZSB1Y29udHJvbCAqLwotCXVjb250cm9sLT52YWx1ZS5pbnRlZ2VyLnZhbHVlWzBdID0K
LQkJbGUzMl90b19jcHUoZ2J2YWx1ZS52YWx1ZS5pbnRlZ2VyX3ZhbHVlWzBdKTsKLQotCXJldHVy
biByZXQ7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19taXhlcl9kYXBtX2N0bF9wdXQoc3RydWN0
IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCi0JCQkJICAgICAgc3RydWN0IHNuZF9jdGxfZWxlbV92
YWx1ZSAqdWNvbnRyb2wpCi17Ci0JaW50IHJldCwgd2ksIG1heCwgY29ubmVjdDsKLQl1bnNpZ25l
ZCBpbnQgbWFzaywgdmFsOwotCXN0cnVjdCBnYl9hdWRpb19jdGxfZWxlbV9pbmZvICppbmZvOwot
CXN0cnVjdCBnYmF1ZGlvX2N0bF9wdnQgKmRhdGE7Ci0Jc3RydWN0IGdiX2F1ZGlvX2N0bF9lbGVt
X3ZhbHVlIGdidmFsdWU7Ci0Jc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZTsKLQlz
dHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldF9saXN0ICp3bGlzdCA9IHNuZF9rY29udHJvbF9jaGlw
KGtjb250cm9sKTsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqd2lkZ2V0ID0gd2xpc3Qt
PndpZGdldHNbMF07Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lkZ2V0LT5jb2Rl
YzsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2Ry
dmRhdGEoY29kZWMpOwotCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZTsKLQotCWRldl9kYmcoY29k
ZWMtPmRldiwgIkVudGVyZWQgJXM6JXNcbiIsIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7
Ci0JbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKLQlpZiAo
IW1vZHVsZSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlkYXRhID0gKHN0cnVjdCBnYmF1ZGlvX2N0
bF9wdnQgKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKLQlpbmZvID0gKHN0cnVjdCBnYl9hdWRp
b19jdGxfZWxlbV9pbmZvICopZGF0YS0+aW5mbzsKLQlidW5kbGUgPSB0b19nYl9idW5kbGUobW9k
dWxlLT5kZXYpOwotCi0JaWYgKGRhdGEtPnZjb3VudCA9PSAyKQotCQlkZXZfd2Fybih3aWRnZXQt
PmRhcG0tPmRldiwKLQkJCSAiR0I6IENvbnRyb2wgJyVzJyBpcyBzdGVyZW8sIHdoaWNoIGlzIG5v
dCBzdXBwb3J0ZWRcbiIsCi0JCQkga2NvbnRyb2wtPmlkLm5hbWUpOwotCi0JbWF4ID0gbGUzMl90
b19jcHUoaW5mby0+dmFsdWUuaW50ZWdlci5tYXgpOwotCW1hc2sgPSAoMSA8PCBmbHMobWF4KSkg
LSAxOwotCXZhbCA9IHVjb250cm9sLT52YWx1ZS5pbnRlZ2VyLnZhbHVlWzBdICYgbWFzazsKLQlj
b25uZWN0ID0gISF2YWw7Ci0KLQkvKiB1cGRhdGUgdWNvbnRyb2wgKi8KLQlpZiAoZ2J2YWx1ZS52
YWx1ZS5pbnRlZ2VyX3ZhbHVlWzBdICE9IHZhbCkgewotCQlmb3IgKHdpID0gMDsgd2kgPCB3bGlz
dC0+bnVtX3dpZGdldHM7IHdpKyspIHsKLQkJCXdpZGdldCA9IHdsaXN0LT53aWRnZXRzW3dpXTsK
LQotCQkJd2lkZ2V0LT52YWx1ZSA9IHZhbDsKLQkJCXdpZGdldC0+ZGFwbS0+dXBkYXRlID0gTlVM
TDsKLQkJCXNuZF9zb2NfZGFwbV9taXhlcl91cGRhdGVfcG93ZXIod2lkZ2V0LCBrY29udHJvbCwK
LQkJCQkJCQljb25uZWN0KTsKLQkJfQotCQlnYnZhbHVlLnZhbHVlLmludGVnZXJfdmFsdWVbMF0g
PQotCQkJY3B1X3RvX2xlMzIodWNvbnRyb2wtPnZhbHVlLmludGVnZXIudmFsdWVbMF0pOwotCi0J
CXJldCA9IGdiX3BtX3J1bnRpbWVfZ2V0X3N5bmMoYnVuZGxlKTsKLQkJaWYgKHJldCkKLQkJCXJl
dHVybiByZXQ7Ci0KLQkJcmV0ID0gZ2JfYXVkaW9fZ2Jfc2V0X2NvbnRyb2wobW9kdWxlLT5tZ210
X2Nvbm5lY3Rpb24sCi0JCQkJCSAgICAgIGRhdGEtPmN0bF9pZCwKLQkJCQkJICAgICAgR0JfQVVE
SU9fSU5WQUxJRF9JTkRFWCwgJmdidmFsdWUpOwotCi0JCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9z
dXNwZW5kKGJ1bmRsZSk7Ci0KLQkJaWYgKHJldCkgewotCQkJZGV2X2Vycl9yYXRlbGltaXRlZChj
b2RlYy0+ZGV2LAotCQkJCQkgICAgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAotCQkJ
CQkgICAgX19mdW5jX18sIGtjb250cm9sLT5pZC5uYW1lKTsKLQkJCXJldHVybiByZXQ7Ci0JCX0K
LQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotI2RlZmluZSBTT0NfREFQTV9NSVhFUl9HQih4bmFtZSwg
a2NvdW50LCBkYXRhKSBcCi17CS5pZmFjZSA9IFNORFJWX0NUTF9FTEVNX0lGQUNFX01JWEVSLCAu
bmFtZSA9IHhuYW1lLCBcCi0JLmNvdW50ID0ga2NvdW50LCAuaW5mbyA9IGdiY29kZWNfbWl4ZXJf
ZGFwbV9jdGxfaW5mbywgXAotCS5nZXQgPSBnYmNvZGVjX21peGVyX2RhcG1fY3RsX2dldCwgLnB1
dCA9IGdiY29kZWNfbWl4ZXJfZGFwbV9jdGxfcHV0LCBcCi0JLnByaXZhdGVfdmFsdWUgPSAodW5z
aWduZWQgbG9uZylkYXRhfQotCi1zdGF0aWMgaW50IGdiY29kZWNfZXZlbnRfc3BrKHN0cnVjdCBz
bmRfc29jX2RhcG1fd2lkZ2V0ICp3LAotCQkJICAgICBzdHJ1Y3Qgc25kX2tjb250cm9sICprLCBp
bnQgZXZlbnQpCi17Ci0JLyogRW5zdXJlIEdCIHNwZWFrZXIgaXMgY29ubmVjdGVkICovCi0KLQly
ZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBnYmNvZGVjX2V2ZW50X2hwKHN0cnVjdCBzbmRfc29j
X2RhcG1fd2lkZ2V0ICp3LAotCQkJICAgIHN0cnVjdCBzbmRfa2NvbnRyb2wgKmssIGludCBldmVu
dCkKLXsKLQkvKiBFbnN1cmUgR0IgbW9kdWxlIHN1cHBvcnRzIGphY2sgc2xvdCAqLwotCi0JcmV0
dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19ldmVudF9pbnRfbWljKHN0cnVjdCBzbmRf
c29jX2RhcG1fd2lkZ2V0ICp3LAotCQkJCSBzdHJ1Y3Qgc25kX2tjb250cm9sICprLCBpbnQgZXZl
bnQpCi17Ci0JLyogRW5zdXJlIEdCIG1vZHVsZSBzdXBwb3J0cyBqYWNrIHNsb3QgKi8KLQotCXJl
dHVybiAwOwotfQotCi1zdGF0aWMgaW50IGdiYXVkaW9fdmFsaWRhdGVfa2NvbnRyb2xfY291bnQo
c3RydWN0IGdiX2F1ZGlvX3dpZGdldCAqdykKLXsKLQlpbnQgcmV0ID0gMDsKLQotCXN3aXRjaCAo
dy0+dHlwZSkgewotCWNhc2Ugc25kX3NvY19kYXBtX3NwazoKLQljYXNlIHNuZF9zb2NfZGFwbV9o
cDoKLQljYXNlIHNuZF9zb2NfZGFwbV9taWM6Ci0JY2FzZSBzbmRfc29jX2RhcG1fb3V0cHV0Ogot
CWNhc2Ugc25kX3NvY19kYXBtX2lucHV0OgotCQlpZiAody0+bmNvbnRyb2xzKQotCQkJcmV0ID0g
LUVJTlZBTDsKLQkJYnJlYWs7Ci0JY2FzZSBzbmRfc29jX2RhcG1fc3dpdGNoOgotCWNhc2Ugc25k
X3NvY19kYXBtX211eDoKLQkJaWYgKHctPm5jb250cm9scyAhPSAxKQotCQkJcmV0ID0gLUVJTlZB
TDsKLQkJYnJlYWs7Ci0JZGVmYXVsdDoKLQkJYnJlYWs7Ci0JfQotCi0JcmV0dXJuIHJldDsKLX0K
LQotc3RhdGljIGludCBnYmNvZGVjX2VudW1fY3RsX2dldChzdHJ1Y3Qgc25kX2tjb250cm9sICpr
Y29udHJvbCwKLQkJCQlzdHJ1Y3Qgc25kX2N0bF9lbGVtX3ZhbHVlICp1Y29udHJvbCkKLXsKLQlp
bnQgcmV0LCBjdGxfaWQ7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gc25kX2tjb250
cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0cnVjdCBzb2NfZW51bSAqZSA9IChzdHJ1Y3Qgc29jX2Vu
dW0gKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1f
dmFsdWUgZ2J2YWx1ZTsKLQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwotCXN0
cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0YShj
b2RlYyk7Ci0Jc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwotCi0JbW9kdWxlID0gZmluZF9nYl9t
b2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKLQlpZiAoIW1vZHVsZSkKLQkJcmV0dXJuIC1F
SU5WQUw7Ci0KLQljdGxfaWQgPSBnYmF1ZGlvX21hcF9jb250cm9sbmFtZShtb2R1bGUsIGtjb250
cm9sLT5pZC5uYW1lKTsKLQlpZiAoY3RsX2lkIDwgMCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQli
dW5kbGUgPSB0b19nYl9idW5kbGUobW9kdWxlLT5kZXYpOwotCi0JcmV0ID0gZ2JfcG1fcnVudGlt
ZV9nZXRfc3luYyhidW5kbGUpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBn
Yl9hdWRpb19nYl9nZXRfY29udHJvbChtb2R1bGUtPm1nbXRfY29ubmVjdGlvbiwgY3RsX2lkLAot
CQkJCSAgICAgIEdCX0FVRElPX0lOVkFMSURfSU5ERVgsICZnYnZhbHVlKTsKLQotCWdiX3BtX3J1
bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7Ci0KLQlpZiAocmV0KSB7Ci0JCWRldl9lcnJf
cmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAot
CQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwotCQlyZXR1cm4gcmV0OwotCX0K
LQotCXVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMF0gPQotCQlsZTMyX3RvX2NwdShn
YnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVswXSk7Ci0JaWYgKGUtPnNoaWZ0X2wgIT0gZS0+
c2hpZnRfcikKLQkJdWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVsxXSA9Ci0JCQlsZTMy
X3RvX2NwdShnYnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVsxXSk7Ci0KLQlyZXR1cm4gMDsK
LX0KLQotc3RhdGljIGludCBnYmNvZGVjX2VudW1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250cm9s
ICprY29udHJvbCwKLQkJCQlzdHJ1Y3Qgc25kX2N0bF9lbGVtX3ZhbHVlICp1Y29udHJvbCkKLXsK
LQlpbnQgcmV0LCBjdGxfaWQ7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gc25kX2tj
b250cm9sX2NoaXAoa2NvbnRyb2wpOwotCXN0cnVjdCBzb2NfZW51bSAqZSA9IChzdHJ1Y3Qgc29j
X2VudW0gKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKLQlzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2Vs
ZW1fdmFsdWUgZ2J2YWx1ZTsKLQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlOwot
CXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiID0gc25kX3NvY19jb2RlY19nZXRfZHJ2ZGF0
YShjb2RlYyk7Ci0Jc3RydWN0IGdiX2J1bmRsZSAqYnVuZGxlOwotCi0JbW9kdWxlID0gZmluZF9n
Yl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5uYW1lKTsKLQlpZiAoIW1vZHVsZSkKLQkJcmV0dXJu
IC1FSU5WQUw7Ci0KLQljdGxfaWQgPSBnYmF1ZGlvX21hcF9jb250cm9sbmFtZShtb2R1bGUsIGtj
b250cm9sLT5pZC5uYW1lKTsKLQlpZiAoY3RsX2lkIDwgMCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0K
LQlpZiAodWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVswXSA+IGUtPm1heCAtIDEpCi0J
CXJldHVybiAtRUlOVkFMOwotCWdidmFsdWUudmFsdWUuZW51bWVyYXRlZF9pdGVtWzBdID0KLQkJ
Y3B1X3RvX2xlMzIodWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVswXSk7Ci0KLQlpZiAo
ZS0+c2hpZnRfbCAhPSBlLT5zaGlmdF9yKSB7Ci0JCWlmICh1Y29udHJvbC0+dmFsdWUuZW51bWVy
YXRlZC5pdGVtWzFdID4gZS0+bWF4IC0gMSkKLQkJCXJldHVybiAtRUlOVkFMOwotCQlnYnZhbHVl
LnZhbHVlLmVudW1lcmF0ZWRfaXRlbVsxXSA9Ci0JCQljcHVfdG9fbGUzMih1Y29udHJvbC0+dmFs
dWUuZW51bWVyYXRlZC5pdGVtWzFdKTsKLQl9Ci0KLQlidW5kbGUgPSB0b19nYl9idW5kbGUobW9k
dWxlLT5kZXYpOwotCi0JcmV0ID0gZ2JfcG1fcnVudGltZV9nZXRfc3luYyhidW5kbGUpOwotCWlm
IChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBnYl9hdWRpb19nYl9zZXRfY29udHJvbCht
b2R1bGUtPm1nbXRfY29ubmVjdGlvbiwgY3RsX2lkLAotCQkJCSAgICAgIEdCX0FVRElPX0lOVkFM
SURfSU5ERVgsICZnYnZhbHVlKTsKLQotCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1
bmRsZSk7Ci0KLQlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwg
IiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAotCQkJCSAgICBfX2Z1bmNfXywga2NvbnRy
b2wtPmlkLm5hbWUpOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0KLXN0YXRpYyBpbnQgZ2JhdWRp
b190cGxnX2NyZWF0ZV9lbnVtX2tjdGwoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKmdiLAot
CQkJCQkgc3RydWN0IHNuZF9rY29udHJvbF9uZXcgKmtjdGwsCi0JCQkJCSBzdHJ1Y3QgZ2JfYXVk
aW9fY29udHJvbCAqY3RsKQotewotCXN0cnVjdCBzb2NfZW51bSAqZ2JlOwotCXN0cnVjdCBnYl9h
dWRpb19lbnVtZXJhdGVkICpnYl9lbnVtOwotCWludCBpOwotCi0JZ2JlID0gZGV2bV9remFsbG9j
KGdiLT5kZXYsIHNpemVvZigqZ2JlKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFnYmUpCi0JCXJldHVy
biAtRU5PTUVNOwotCi0JZ2JfZW51bSA9ICZjdGwtPmluZm8udmFsdWUuZW51bWVyYXRlZDsKLQot
CS8qIHNpbmNlIGNvdW50PTEsIGFuZCByZWcgaXMgZHVtbXkgKi8KLQlnYmUtPm1heCA9IGxlMzJf
dG9fY3B1KGdiX2VudW0tPml0ZW1zKTsKLQlnYmUtPnRleHRzID0gZ2JfZ2VuZXJhdGVfZW51bV9z
dHJpbmdzKGdiLCBnYl9lbnVtKTsKLQotCS8qIGRlYnVnIGVudW0gaW5mbyAqLwotCWRldl9kYmco
Z2ItPmRldiwgIk1heDolZCwgbmFtZV9sZW5ndGg6JWRcbiIsIGdiZS0+bWF4LAotCQlsZTE2X3Rv
X2NwdShnYl9lbnVtLT5uYW1lc19sZW5ndGgpKTsKLQlmb3IgKGkgPSAwOyBpIDwgZ2JlLT5tYXg7
IGkrKykKLQkJZGV2X2RiZyhnYi0+ZGV2LCAic3JjWyVkXTogJXNcbiIsIGksIGdiZS0+dGV4dHNb
aV0pOwotCi0JKmtjdGwgPSAoc3RydWN0IHNuZF9rY29udHJvbF9uZXcpCi0JCVNPQ19FTlVNX0VY
VChjdGwtPm5hbWUsICpnYmUsIGdiY29kZWNfZW51bV9jdGxfZ2V0LAotCQkJICAgICBnYmNvZGVj
X2VudW1fY3RsX3B1dCk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgZ2JhdWRpb190cGxn
X2NyZWF0ZV9rY29udHJvbChzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqZ2IsCi0JCQkJCXN0
cnVjdCBzbmRfa2NvbnRyb2xfbmV3ICprY3RsLAotCQkJCQlzdHJ1Y3QgZ2JfYXVkaW9fY29udHJv
bCAqY3RsKQotewotCWludCByZXQgPSAwOwotCXN0cnVjdCBnYmF1ZGlvX2N0bF9wdnQgKmN0bGRh
dGE7Ci0KLQlzd2l0Y2ggKGN0bC0+aWZhY2UpIHsKLQljYXNlIFNORFJWX0NUTF9FTEVNX0lGQUNF
X01JWEVSOgotCQlzd2l0Y2ggKGN0bC0+aW5mby50eXBlKSB7Ci0JCWNhc2UgR0JfQVVESU9fQ1RM
X0VMRU1fVFlQRV9FTlVNRVJBVEVEOgotCQkJcmV0ID0gZ2JhdWRpb190cGxnX2NyZWF0ZV9lbnVt
X2tjdGwoZ2IsIGtjdGwsIGN0bCk7Ci0JCQlicmVhazsKLQkJZGVmYXVsdDoKLQkJCWN0bGRhdGEg
PSBkZXZtX2t6YWxsb2MoZ2ItPmRldiwKLQkJCQkJICAgICAgIHNpemVvZihzdHJ1Y3QgZ2JhdWRp
b19jdGxfcHZ0KSwKLQkJCQkJICAgICAgIEdGUF9LRVJORUwpOwotCQkJaWYgKCFjdGxkYXRhKQot
CQkJCXJldHVybiAtRU5PTUVNOwotCQkJY3RsZGF0YS0+Y3RsX2lkID0gY3RsLT5pZDsKLQkJCWN0
bGRhdGEtPmRhdGFfY3BvcnQgPSBsZTE2X3RvX2NwdShjdGwtPmRhdGFfY3BvcnQpOwotCQkJY3Rs
ZGF0YS0+YWNjZXNzID0gY3RsLT5hY2Nlc3M7Ci0JCQljdGxkYXRhLT52Y291bnQgPSBjdGwtPmNv
dW50X3ZhbHVlczsKLQkJCWN0bGRhdGEtPmluZm8gPSAmY3RsLT5pbmZvOwotCQkJKmtjdGwgPSAo
c3RydWN0IHNuZF9rY29udHJvbF9uZXcpCi0JCQkJU09DX01JWEVSX0dCKGN0bC0+bmFtZSwgY3Rs
LT5jb3VudCwgY3RsZGF0YSk7Ci0JCQljdGxkYXRhID0gTlVMTDsKLQkJCWJyZWFrOwotCQl9Ci0J
CWJyZWFrOwotCWRlZmF1bHQ6Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCWRldl9kYmcoZ2It
PmRldiwgIiVzOiVkIGNvbnRyb2wgY3JlYXRlZFxuIiwgY3RsLT5uYW1lLCBjdGwtPmlkKTsKLQly
ZXR1cm4gcmV0OwotfQotCi1zdGF0aWMgaW50IGdiY29kZWNfZW51bV9kYXBtX2N0bF9nZXQoc3Ry
dWN0IHNuZF9rY29udHJvbCAqa2NvbnRyb2wsCi0JCQkJICAgICBzdHJ1Y3Qgc25kX2N0bF9lbGVt
X3ZhbHVlICp1Y29udHJvbCkKLXsKLQlpbnQgcmV0LCBjdGxfaWQ7Ci0Jc3RydWN0IHNuZF9zb2Nf
ZGFwbV93aWRnZXRfbGlzdCAqd2xpc3QgPSBzbmRfa2NvbnRyb2xfY2hpcChrY29udHJvbCk7Ci0J
c3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQgKndpZGdldCA9IHdsaXN0LT53aWRnZXRzWzBdOwot
CXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGU7Ci0Jc3RydWN0IGdiX2F1ZGlvX2N0
bF9lbGVtX3ZhbHVlIGdidmFsdWU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lk
Z2V0LT5jb2RlYzsKLQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29k
ZWNfZ2V0X2RydmRhdGEoY29kZWMpOwotCXN0cnVjdCBzb2NfZW51bSAqZSA9IChzdHJ1Y3Qgc29j
X2VudW0gKilrY29udHJvbC0+cHJpdmF0ZV92YWx1ZTsKLQlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5k
bGU7Ci0KLQltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYiwga2NvbnRyb2wtPmlkLm5hbWUpOwot
CWlmICghbW9kdWxlKQotCQlyZXR1cm4gLUVJTlZBTDsKLQotCWN0bF9pZCA9IGdiYXVkaW9fbWFw
X3djb250cm9sbmFtZShtb2R1bGUsIGtjb250cm9sLT5pZC5uYW1lKTsKLQlpZiAoY3RsX2lkIDwg
MCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQlidW5kbGUgPSB0b19nYl9idW5kbGUobW9kdWxlLT5k
ZXYpOwotCi0JcmV0ID0gZ2JfcG1fcnVudGltZV9nZXRfc3luYyhidW5kbGUpOwotCWlmIChyZXQp
Ci0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBnYl9hdWRpb19nYl9nZXRfY29udHJvbChtb2R1bGUt
Pm1nbXRfY29ubmVjdGlvbiwgY3RsX2lkLAotCQkJCSAgICAgIEdCX0FVRElPX0lOVkFMSURfSU5E
RVgsICZnYnZhbHVlKTsKLQotCWdiX3BtX3J1bnRpbWVfcHV0X2F1dG9zdXNwZW5kKGJ1bmRsZSk7
Ci0KLQlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29kZWMtPmRldiwgIiVkOkVy
cm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAotCQkJCSAgICBfX2Z1bmNfXywga2NvbnRyb2wtPmlk
Lm5hbWUpOwotCQlyZXR1cm4gcmV0OwotCX0KLQotCXVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVk
Lml0ZW1bMF0gPSBnYnZhbHVlLnZhbHVlLmVudW1lcmF0ZWRfaXRlbVswXTsKLQlpZiAoZS0+c2hp
ZnRfbCAhPSBlLT5zaGlmdF9yKQotCQl1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzFd
ID0KLQkJCWdidmFsdWUudmFsdWUuZW51bWVyYXRlZF9pdGVtWzFdOwotCi0JcmV0dXJuIDA7Ci19
Ci0KLXN0YXRpYyBpbnQgZ2Jjb2RlY19lbnVtX2RhcG1fY3RsX3B1dChzdHJ1Y3Qgc25kX2tjb250
cm9sICprY29udHJvbCwKLQkJCQkgICAgIHN0cnVjdCBzbmRfY3RsX2VsZW1fdmFsdWUgKnVjb250
cm9sKQotewotCWludCByZXQsIHdpLCBjdGxfaWQ7Ci0JdW5zaWduZWQgaW50IHZhbCwgbXV4LCBj
aGFuZ2U7Ci0JdW5zaWduZWQgaW50IG1hc2s7Ci0Jc3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXRf
bGlzdCAqd2xpc3QgPSBzbmRfa2NvbnRyb2xfY2hpcChrY29udHJvbCk7Ci0Jc3RydWN0IHNuZF9z
b2NfZGFwbV93aWRnZXQgKndpZGdldCA9IHdsaXN0LT53aWRnZXRzWzBdOwotCXN0cnVjdCBnYl9h
dWRpb19jdGxfZWxlbV92YWx1ZSBnYnZhbHVlOwotCXN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZv
ICptb2R1bGU7Ci0Jc3RydWN0IHNuZF9zb2NfY29kZWMgKmNvZGVjID0gd2lkZ2V0LT5jb2RlYzsK
LQlzdHJ1Y3QgZ2JhdWRpb19jb2RlY19pbmZvICpnYiA9IHNuZF9zb2NfY29kZWNfZ2V0X2RydmRh
dGEoY29kZWMpOwotCXN0cnVjdCBzb2NfZW51bSAqZSA9IChzdHJ1Y3Qgc29jX2VudW0gKilrY29u
dHJvbC0+cHJpdmF0ZV92YWx1ZTsKLQlzdHJ1Y3QgZ2JfYnVuZGxlICpidW5kbGU7Ci0KLQlpZiAo
dWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVswXSA+IGUtPm1heCAtIDEpCi0JCXJldHVy
biAtRUlOVkFMOwotCi0JbW9kdWxlID0gZmluZF9nYl9tb2R1bGUoZ2IsIGtjb250cm9sLT5pZC5u
YW1lKTsKLQlpZiAoIW1vZHVsZSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQljdGxfaWQgPSBnYmF1
ZGlvX21hcF93Y29udHJvbG5hbWUobW9kdWxlLCBrY29udHJvbC0+aWQubmFtZSk7Ci0JaWYgKGN0
bF9pZCA8IDApCi0JCXJldHVybiAtRUlOVkFMOwotCi0JY2hhbmdlID0gMDsKLQlidW5kbGUgPSB0
b19nYl9idW5kbGUobW9kdWxlLT5kZXYpOwotCi0JcmV0ID0gZ2JfcG1fcnVudGltZV9nZXRfc3lu
YyhidW5kbGUpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBnYl9hdWRpb19n
Yl9nZXRfY29udHJvbChtb2R1bGUtPm1nbXRfY29ubmVjdGlvbiwgY3RsX2lkLAotCQkJCSAgICAg
IEdCX0FVRElPX0lOVkFMSURfSU5ERVgsICZnYnZhbHVlKTsKLQotCWdiX3BtX3J1bnRpbWVfcHV0
X2F1dG9zdXNwZW5kKGJ1bmRsZSk7Ci0KLQlpZiAocmV0KSB7Ci0JCWRldl9lcnJfcmF0ZWxpbWl0
ZWQoY29kZWMtPmRldiwgIiVkOkVycm9yIGluICVzIGZvciAlc1xuIiwgcmV0LAotCQkJCSAgICBf
X2Z1bmNfXywga2NvbnRyb2wtPmlkLm5hbWUpOwotCQlyZXR1cm4gcmV0OwotCX0KLQotCW11eCA9
IHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMF07Ci0JdmFsID0gbXV4IDw8IGUtPnNo
aWZ0X2w7Ci0JbWFzayA9IGUtPm1hc2sgPDwgZS0+c2hpZnRfbDsKLQotCWlmIChnYnZhbHVlLnZh
bHVlLmVudW1lcmF0ZWRfaXRlbVswXSAhPQotCSAgICB1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRl
ZC5pdGVtWzBdKSB7Ci0JCWNoYW5nZSA9IDE7Ci0JCWdidmFsdWUudmFsdWUuZW51bWVyYXRlZF9p
dGVtWzBdID0KLQkJCXVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMF07Ci0JfQotCi0J
aWYgKGUtPnNoaWZ0X2wgIT0gZS0+c2hpZnRfcikgewotCQlpZiAodWNvbnRyb2wtPnZhbHVlLmVu
dW1lcmF0ZWQuaXRlbVsxXSA+IGUtPm1heCAtIDEpCi0JCQlyZXR1cm4gLUVJTlZBTDsKLQkJdmFs
IHw9IHVjb250cm9sLT52YWx1ZS5lbnVtZXJhdGVkLml0ZW1bMV0gPDwgZS0+c2hpZnRfcjsKLQkJ
bWFzayB8PSBlLT5tYXNrIDw8IGUtPnNoaWZ0X3I7Ci0JCWlmIChnYnZhbHVlLnZhbHVlLmVudW1l
cmF0ZWRfaXRlbVsxXSAhPQotCQkgICAgdWNvbnRyb2wtPnZhbHVlLmVudW1lcmF0ZWQuaXRlbVsx
XSkgewotCQkJY2hhbmdlID0gMTsKLQkJCWdidmFsdWUudmFsdWUuZW51bWVyYXRlZF9pdGVtWzFd
ID0KLQkJCQl1Y29udHJvbC0+dmFsdWUuZW51bWVyYXRlZC5pdGVtWzFdOwotCQl9Ci0JfQotCi0J
aWYgKGNoYW5nZSkgewotCQlyZXQgPSBnYl9wbV9ydW50aW1lX2dldF9zeW5jKGJ1bmRsZSk7Ci0J
CWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0OwotCi0JCXJldCA9IGdiX2F1ZGlvX2diX3NldF9jb250
cm9sKG1vZHVsZS0+bWdtdF9jb25uZWN0aW9uLCBjdGxfaWQsCi0JCQkJCSAgICAgIEdCX0FVRElP
X0lOVkFMSURfSU5ERVgsICZnYnZhbHVlKTsKLQotCQlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3Vz
cGVuZChidW5kbGUpOwotCi0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnJfcmF0ZWxpbWl0ZWQoY29k
ZWMtPmRldiwKLQkJCQkJICAgICIlZDpFcnJvciBpbiAlcyBmb3IgJXNcbiIsIHJldCwKLQkJCQkJ
ICAgIF9fZnVuY19fLCBrY29udHJvbC0+aWQubmFtZSk7Ci0JCX0KLQkJZm9yICh3aSA9IDA7IHdp
IDwgd2xpc3QtPm51bV93aWRnZXRzOyB3aSsrKSB7Ci0JCQl3aWRnZXQgPSB3bGlzdC0+d2lkZ2V0
c1t3aV07Ci0KLQkJCXdpZGdldC0+dmFsdWUgPSB2YWw7Ci0JCQl3aWRnZXQtPmRhcG0tPnVwZGF0
ZSA9IE5VTEw7Ci0JCQlzbmRfc29jX2RhcG1fbXV4X3VwZGF0ZV9wb3dlcih3aWRnZXQsIGtjb250
cm9sLCBtdXgsIGUpOwotCQl9Ci0JfQotCi0JcmV0dXJuIGNoYW5nZTsKLX0KLQotc3RhdGljIGlu
dCBnYmF1ZGlvX3RwbGdfY3JlYXRlX2VudW1fY3RsKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZv
ICpnYiwKLQkJCQkJc3RydWN0IHNuZF9rY29udHJvbF9uZXcgKmtjdGwsCi0JCQkJCXN0cnVjdCBn
Yl9hdWRpb19jb250cm9sICpjdGwpCi17Ci0Jc3RydWN0IHNvY19lbnVtICpnYmU7Ci0Jc3RydWN0
IGdiX2F1ZGlvX2VudW1lcmF0ZWQgKmdiX2VudW07Ci0JaW50IGk7Ci0KLQlnYmUgPSBkZXZtX2t6
YWxsb2MoZ2ItPmRldiwgc2l6ZW9mKCpnYmUpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWdiZSkKLQkJ
cmV0dXJuIC1FTk9NRU07Ci0KLQlnYl9lbnVtID0gJmN0bC0+aW5mby52YWx1ZS5lbnVtZXJhdGVk
OwotCi0JLyogc2luY2UgY291bnQ9MSwgYW5kIHJlZyBpcyBkdW1teSAqLwotCWdiZS0+bWF4ID0g
bGUzMl90b19jcHUoZ2JfZW51bS0+aXRlbXMpOwotCWdiZS0+dGV4dHMgPSBnYl9nZW5lcmF0ZV9l
bnVtX3N0cmluZ3MoZ2IsIGdiX2VudW0pOwotCi0JLyogZGVidWcgZW51bSBpbmZvICovCi0JZGV2
X2RiZyhnYi0+ZGV2LCAiTWF4OiVkLCBuYW1lX2xlbmd0aDolZFxuIiwgZ2JlLT5tYXgsCi0JCWxl
MTZfdG9fY3B1KGdiX2VudW0tPm5hbWVzX2xlbmd0aCkpOwotCWZvciAoaSA9IDA7IGkgPCBnYmUt
Pm1heDsgaSsrKQotCQlkZXZfZGJnKGdiLT5kZXYsICJzcmNbJWRdOiAlc1xuIiwgaSwgZ2JlLT50
ZXh0c1tpXSk7Ci0KLQkqa2N0bCA9IChzdHJ1Y3Qgc25kX2tjb250cm9sX25ldykKLQkJU09DX0RB
UE1fRU5VTV9FWFQoY3RsLT5uYW1lLCAqZ2JlLCBnYmNvZGVjX2VudW1fZGFwbV9jdGxfZ2V0LAot
CQkJCSAgZ2Jjb2RlY19lbnVtX2RhcG1fY3RsX3B1dCk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRp
YyBpbnQgZ2JhdWRpb190cGxnX2NyZWF0ZV9taXhlcl9jdGwoc3RydWN0IGdiYXVkaW9fbW9kdWxl
X2luZm8gKmdiLAotCQkJCQkgc3RydWN0IHNuZF9rY29udHJvbF9uZXcgKmtjdGwsCi0JCQkJCSBz
dHJ1Y3QgZ2JfYXVkaW9fY29udHJvbCAqY3RsKQotewotCXN0cnVjdCBnYmF1ZGlvX2N0bF9wdnQg
KmN0bGRhdGE7Ci0KLQljdGxkYXRhID0gZGV2bV9remFsbG9jKGdiLT5kZXYsIHNpemVvZihzdHJ1
Y3QgZ2JhdWRpb19jdGxfcHZ0KSwKLQkJCSAgICAgICBHRlBfS0VSTkVMKTsKLQlpZiAoIWN0bGRh
dGEpCi0JCXJldHVybiAtRU5PTUVNOwotCWN0bGRhdGEtPmN0bF9pZCA9IGN0bC0+aWQ7Ci0JY3Rs
ZGF0YS0+ZGF0YV9jcG9ydCA9IGxlMTZfdG9fY3B1KGN0bC0+ZGF0YV9jcG9ydCk7Ci0JY3RsZGF0
YS0+YWNjZXNzID0gY3RsLT5hY2Nlc3M7Ci0JY3RsZGF0YS0+dmNvdW50ID0gY3RsLT5jb3VudF92
YWx1ZXM7Ci0JY3RsZGF0YS0+aW5mbyA9ICZjdGwtPmluZm87Ci0JKmtjdGwgPSAoc3RydWN0IHNu
ZF9rY29udHJvbF9uZXcpCi0JCVNPQ19EQVBNX01JWEVSX0dCKGN0bC0+bmFtZSwgY3RsLT5jb3Vu
dCwgY3RsZGF0YSk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX3RwbGdf
Y3JlYXRlX3djb250cm9sKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICpnYiwKLQkJCQkJc3Ry
dWN0IHNuZF9rY29udHJvbF9uZXcgKmtjdGwsCi0JCQkJCXN0cnVjdCBnYl9hdWRpb19jb250cm9s
ICpjdGwpCi17Ci0JaW50IHJldDsKLQotCXN3aXRjaCAoY3RsLT5pZmFjZSkgewotCWNhc2UgU05E
UlZfQ1RMX0VMRU1fSUZBQ0VfTUlYRVI6Ci0JCXN3aXRjaCAoY3RsLT5pbmZvLnR5cGUpIHsKLQkJ
Y2FzZSBHQl9BVURJT19DVExfRUxFTV9UWVBFX0VOVU1FUkFURUQ6Ci0JCQlyZXQgPSBnYmF1ZGlv
X3RwbGdfY3JlYXRlX2VudW1fY3RsKGdiLCBrY3RsLCBjdGwpOwotCQkJYnJlYWs7Ci0JCWRlZmF1
bHQ6Ci0JCQlyZXQgPSBnYmF1ZGlvX3RwbGdfY3JlYXRlX21peGVyX2N0bChnYiwga2N0bCwgY3Rs
KTsKLQkJCWJyZWFrOwotCQl9Ci0JCWJyZWFrOwotCWRlZmF1bHQ6Ci0JCXJldHVybiAtRUlOVkFM
OwotCX0KLQotCWRldl9kYmcoZ2ItPmRldiwgIiVzOiVkIERBUE0gY29udHJvbCBjcmVhdGVkLCBy
ZXQ6JWRcbiIsIGN0bC0+bmFtZSwKLQkJY3RsLT5pZCwgcmV0KTsKLQlyZXR1cm4gcmV0OwotfQot
Ci1zdGF0aWMgaW50IGdiYXVkaW9fd2lkZ2V0X2V2ZW50KHN0cnVjdCBzbmRfc29jX2RhcG1fd2lk
Z2V0ICp3LAotCQkJCXN0cnVjdCBzbmRfa2NvbnRyb2wgKmtjb250cm9sLCBpbnQgZXZlbnQpCi17
Ci0JaW50IHdpZDsKLQlpbnQgcmV0OwotCXN0cnVjdCBzbmRfc29jX2NvZGVjICpjb2RlYyA9IHct
PmNvZGVjOwotCXN0cnVjdCBnYmF1ZGlvX2NvZGVjX2luZm8gKmdiY29kZWMgPSBzbmRfc29jX2Nv
ZGVjX2dldF9kcnZkYXRhKGNvZGVjKTsKLQlzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9k
dWxlOwotCXN0cnVjdCBnYl9idW5kbGUgKmJ1bmRsZTsKLQotCWRldl9kYmcoY29kZWMtPmRldiwg
IiVzICVzICVkXG4iLCBfX2Z1bmNfXywgdy0+bmFtZSwgZXZlbnQpOwotCi0JLyogRmluZCByZWxl
dmFudCBtb2R1bGUgKi8KLQltb2R1bGUgPSBmaW5kX2diX21vZHVsZShnYmNvZGVjLCB3LT5uYW1l
KTsKLQlpZiAoIW1vZHVsZSkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0KLQkvKiBtYXAgbmFtZSB0byB3
aWRnZXQgaWQgKi8KLQl3aWQgPSBnYmF1ZGlvX21hcF93aWRnZXRuYW1lKG1vZHVsZSwgdy0+bmFt
ZSk7Ci0JaWYgKHdpZCA8IDApIHsKLQkJZGV2X2Vycihjb2RlYy0+ZGV2LCAiSW52YWxpZCB3aWRn
ZXQgbmFtZTolc1xuIiwgdy0+bmFtZSk7Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCWJ1bmRs
ZSA9IHRvX2diX2J1bmRsZShtb2R1bGUtPmRldik7Ci0KLQlyZXQgPSBnYl9wbV9ydW50aW1lX2dl
dF9zeW5jKGJ1bmRsZSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXN3aXRjaCAoZXZl
bnQpIHsKLQljYXNlIFNORF9TT0NfREFQTV9QUkVfUE1VOgotCQlyZXQgPSBnYl9hdWRpb19nYl9l
bmFibGVfd2lkZ2V0KG1vZHVsZS0+bWdtdF9jb25uZWN0aW9uLCB3aWQpOwotCQlpZiAoIXJldCkK
LQkJCXJldCA9IGdiYXVkaW9fbW9kdWxlX3VwZGF0ZShnYmNvZGVjLCB3LCBtb2R1bGUsIDEpOwot
CQlicmVhazsKLQljYXNlIFNORF9TT0NfREFQTV9QT1NUX1BNRDoKLQkJcmV0ID0gZ2JfYXVkaW9f
Z2JfZGlzYWJsZV93aWRnZXQobW9kdWxlLT5tZ210X2Nvbm5lY3Rpb24sIHdpZCk7Ci0JCWlmICgh
cmV0KQotCQkJcmV0ID0gZ2JhdWRpb19tb2R1bGVfdXBkYXRlKGdiY29kZWMsIHcsIG1vZHVsZSwg
MCk7Ci0JCWJyZWFrOwotCX0KLQlpZiAocmV0KQotCQlkZXZfZXJyX3JhdGVsaW1pdGVkKGNvZGVj
LT5kZXYsCi0JCQkJICAgICIlZDogd2lkZ2V0LCBldmVudDolZCBmYWlsZWQ6JWRcbiIsIHdpZCwK
LQkJCQkgICAgZXZlbnQsIHJldCk7Ci0KLQlnYl9wbV9ydW50aW1lX3B1dF9hdXRvc3VzcGVuZChi
dW5kbGUpOwotCi0JcmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX3RwbGdfY3Jl
YXRlX3dpZGdldChzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAqbW9kdWxlLAotCQkJCSAgICAg
IHN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0ICpkdywKLQkJCQkgICAgICBzdHJ1Y3QgZ2JfYXVk
aW9fd2lkZ2V0ICp3LCBpbnQgKndfc2l6ZSkKLXsKLQlpbnQgaSwgcmV0LCBjc2l6ZTsKLQlzdHJ1
Y3Qgc25kX2tjb250cm9sX25ldyAqd2lkZ2V0X2tjdGxzOwotCXN0cnVjdCBnYl9hdWRpb19jb250
cm9sICpjdXJyOwotCXN0cnVjdCBnYmF1ZGlvX2NvbnRyb2wgKmNvbnRyb2wsICpfY29udHJvbDsK
LQlzaXplX3Qgc2l6ZTsKLQljaGFyIHRlbXBfbmFtZVtOQU1FX1NJWkVdOwotCi0JcmV0ID0gZ2Jh
dWRpb192YWxpZGF0ZV9rY29udHJvbF9jb3VudCh3KTsKLQlpZiAocmV0KSB7Ci0JCWRldl9lcnIo
bW9kdWxlLT5kZXYsICJJbnZhbGlkIGtjb250cm9sIGNvdW50PSVkIGZvciAlc1xuIiwKLQkJCXct
Pm5jb250cm9scywgdy0+bmFtZSk7Ci0JCXJldHVybiByZXQ7Ci0JfQotCi0JLyogYWxsb2NhdGUg
bWVtb3J5IGZvciBrY29udHJvbCAqLwotCWlmICh3LT5uY29udHJvbHMpIHsKLQkJc2l6ZSA9IHNp
emVvZihzdHJ1Y3Qgc25kX2tjb250cm9sX25ldykgKiB3LT5uY29udHJvbHM7Ci0JCXdpZGdldF9r
Y3RscyA9IGRldm1fa3phbGxvYyhtb2R1bGUtPmRldiwgc2l6ZSwgR0ZQX0tFUk5FTCk7Ci0JCWlm
ICghd2lkZ2V0X2tjdGxzKQotCQkJcmV0dXJuIC1FTk9NRU07Ci0JfQotCi0JKndfc2l6ZSA9IHNp
emVvZihzdHJ1Y3QgZ2JfYXVkaW9fd2lkZ2V0KTsKLQotCS8qIGNyZWF0ZSByZWxldmFudCBrY29u
dHJvbHMgKi8KLQljdXJyID0gdy0+Y3RsOwotCWZvciAoaSA9IDA7IGkgPCB3LT5uY29udHJvbHM7
IGkrKykgewotCQlyZXQgPSBnYmF1ZGlvX3RwbGdfY3JlYXRlX3djb250cm9sKG1vZHVsZSwgJndp
ZGdldF9rY3Rsc1tpXSwKLQkJCQkJCSAgIGN1cnIpOwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJy
KG1vZHVsZS0+ZGV2LAotCQkJCSIlczolZCB0eXBlIHdpZGdldF9jdGwgbm90IHN1cHBvcnRlZFxu
IiwKLQkJCQljdXJyLT5uYW1lLCBjdXJyLT5pZmFjZSk7Ci0JCQlnb3RvIGVycm9yOwotCQl9Ci0J
CWNvbnRyb2wgPSBkZXZtX2t6YWxsb2MobW9kdWxlLT5kZXYsCi0JCQkJICAgICAgIHNpemVvZihz
dHJ1Y3QgZ2JhdWRpb19jb250cm9sKSwKLQkJCQkgICAgICAgR0ZQX0tFUk5FTCk7Ci0JCWlmICgh
Y29udHJvbCkgewotCQkJcmV0ID0gLUVOT01FTTsKLQkJCWdvdG8gZXJyb3I7Ci0JCX0KLQkJY29u
dHJvbC0+aWQgPSBjdXJyLT5pZDsKLQkJY29udHJvbC0+bmFtZSA9IGN1cnItPm5hbWU7Ci0JCWNv
bnRyb2wtPnduYW1lID0gdy0+bmFtZTsKLQotCQlpZiAoY3Vyci0+aW5mby50eXBlID09IEdCX0FV
RElPX0NUTF9FTEVNX1RZUEVfRU5VTUVSQVRFRCkgewotCQkJc3RydWN0IGdiX2F1ZGlvX2VudW1l
cmF0ZWQgKmdiZW51bSA9Ci0JCQkJJmN1cnItPmluZm8udmFsdWUuZW51bWVyYXRlZDsKLQotCQkJ
Y3NpemUgPSBvZmZzZXRvZihzdHJ1Y3QgZ2JfYXVkaW9fY29udHJvbCwgaW5mbyk7Ci0JCQljc2l6
ZSArPSBvZmZzZXRvZihzdHJ1Y3QgZ2JfYXVkaW9fY3RsX2VsZW1faW5mbywgdmFsdWUpOwotCQkJ
Y3NpemUgKz0gb2Zmc2V0b2Yoc3RydWN0IGdiX2F1ZGlvX2VudW1lcmF0ZWQsIG5hbWVzKTsKLQkJ
CWNzaXplICs9IGxlMTZfdG9fY3B1KGdiZW51bS0+bmFtZXNfbGVuZ3RoKTsKLQkJCWNvbnRyb2wt
PnRleHRzID0gKGNvbnN0IGNoYXIgKiBjb25zdCAqKQotCQkJCWdiX2dlbmVyYXRlX2VudW1fc3Ry
aW5ncyhtb2R1bGUsIGdiZW51bSk7Ci0JCQljb250cm9sLT5pdGVtcyA9IGxlMzJfdG9fY3B1KGdi
ZW51bS0+aXRlbXMpOwotCQl9IGVsc2UgewotCQkJY3NpemUgPSBzaXplb2Yoc3RydWN0IGdiX2F1
ZGlvX2NvbnRyb2wpOwotCQl9Ci0KLQkJKndfc2l6ZSArPSBjc2l6ZTsKLQkJY3VyciA9ICh2b2lk
ICopY3VyciArIGNzaXplOwotCQlsaXN0X2FkZCgmY29udHJvbC0+bGlzdCwgJm1vZHVsZS0+d2lk
Z2V0X2N0bF9saXN0KTsKLQkJZGV2X2RiZyhtb2R1bGUtPmRldiwgIiVzOiBjb250cm9sIG9mIHR5
cGUgJWQgY3JlYXRlZFxuIiwKLQkJCXdpZGdldF9rY3Rsc1tpXS5uYW1lLCB3aWRnZXRfa2N0bHNb
aV0uaWZhY2UpOwotCX0KLQotCS8qIFByZWZpeCBkZXZfaWQgdG8gd2lkZ2V0IGNvbnRyb2xfbmFt
ZSAqLwotCXN0cmxjcHkodGVtcF9uYW1lLCB3LT5uYW1lLCBOQU1FX1NJWkUpOwotCXNucHJpbnRm
KHctPm5hbWUsIE5BTUVfU0laRSwgIkdCICVkICVzIiwgbW9kdWxlLT5kZXZfaWQsIHRlbXBfbmFt
ZSk7Ci0KLQlzd2l0Y2ggKHctPnR5cGUpIHsKLQljYXNlIHNuZF9zb2NfZGFwbV9zcGs6Ci0JCSpk
dyA9IChzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCkKLQkJCVNORF9TT0NfREFQTV9TUEsody0+
bmFtZSwgZ2Jjb2RlY19ldmVudF9zcGspOwotCQltb2R1bGUtPm9wX2RldmljZXMgfD0gR0JBVURJ
T19ERVZJQ0VfT1VUX1NQRUFLRVI7Ci0JCWJyZWFrOwotCWNhc2Ugc25kX3NvY19kYXBtX2hwOgot
CQkqZHcgPSAoc3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQpCi0JCQlTTkRfU09DX0RBUE1fSFAo
dy0+bmFtZSwgZ2Jjb2RlY19ldmVudF9ocCk7Ci0JCW1vZHVsZS0+b3BfZGV2aWNlcyB8PSAoR0JB
VURJT19ERVZJQ0VfT1VUX1dJUkVEX0hFQURTRVQKLQkJCQkJfCBHQkFVRElPX0RFVklDRV9PVVRf
V0lSRURfSEVBRFBIT05FKTsKLQkJbW9kdWxlLT5pcF9kZXZpY2VzIHw9IEdCQVVESU9fREVWSUNF
X0lOX1dJUkVEX0hFQURTRVQ7Ci0JCWJyZWFrOwotCWNhc2Ugc25kX3NvY19kYXBtX21pYzoKLQkJ
KmR3ID0gKHN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0KQotCQkJU05EX1NPQ19EQVBNX01JQyh3
LT5uYW1lLCBnYmNvZGVjX2V2ZW50X2ludF9taWMpOwotCQltb2R1bGUtPmlwX2RldmljZXMgfD0g
R0JBVURJT19ERVZJQ0VfSU5fQlVJTFRJTl9NSUM7Ci0JCWJyZWFrOwotCWNhc2Ugc25kX3NvY19k
YXBtX291dHB1dDoKLQkJKmR3ID0gKHN0cnVjdCBzbmRfc29jX2RhcG1fd2lkZ2V0KVNORF9TT0Nf
REFQTV9PVVRQVVQody0+bmFtZSk7Ci0JCWJyZWFrOwotCWNhc2Ugc25kX3NvY19kYXBtX2lucHV0
OgotCQkqZHcgPSAoc3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQpU05EX1NPQ19EQVBNX0lOUFVU
KHctPm5hbWUpOwotCQlicmVhazsKLQljYXNlIHNuZF9zb2NfZGFwbV9zd2l0Y2g6Ci0JCSpkdyA9
IChzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCkKLQkJCVNORF9TT0NfREFQTV9TV0lUQ0hfRSh3
LT5uYW1lLCBTTkRfU09DX05PUE0sIDAsIDAsCi0JCQkJCSAgICAgIHdpZGdldF9rY3RscywKLQkJ
CQkJICAgICAgZ2JhdWRpb193aWRnZXRfZXZlbnQsCi0JCQkJCSAgICAgIFNORF9TT0NfREFQTV9Q
UkVfUE1VIHwKLQkJCQkJICAgICAgU05EX1NPQ19EQVBNX1BPU1RfUE1EKTsKLQkJYnJlYWs7Ci0J
Y2FzZSBzbmRfc29jX2RhcG1fcGdhOgotCQkqZHcgPSAoc3RydWN0IHNuZF9zb2NfZGFwbV93aWRn
ZXQpCi0JCQlTTkRfU09DX0RBUE1fUEdBX0Uody0+bmFtZSwgU05EX1NPQ19OT1BNLCAwLCAwLCBO
VUxMLCAwLAotCQkJCQkgICBnYmF1ZGlvX3dpZGdldF9ldmVudCwKLQkJCQkJICAgU05EX1NPQ19E
QVBNX1BSRV9QTVUgfAotCQkJCQkgICBTTkRfU09DX0RBUE1fUE9TVF9QTUQpOwotCQlicmVhazsK
LQljYXNlIHNuZF9zb2NfZGFwbV9taXhlcjoKLQkJKmR3ID0gKHN0cnVjdCBzbmRfc29jX2RhcG1f
d2lkZ2V0KQotCQkJU05EX1NPQ19EQVBNX01JWEVSX0Uody0+bmFtZSwgU05EX1NPQ19OT1BNLCAw
LCAwLCBOVUxMLAotCQkJCQkgICAgIDAsIGdiYXVkaW9fd2lkZ2V0X2V2ZW50LAotCQkJCQkgICAg
IFNORF9TT0NfREFQTV9QUkVfUE1VIHwKLQkJCQkJICAgICBTTkRfU09DX0RBUE1fUE9TVF9QTUQp
OwotCQlicmVhazsKLQljYXNlIHNuZF9zb2NfZGFwbV9tdXg6Ci0JCSpkdyA9IChzdHJ1Y3Qgc25k
X3NvY19kYXBtX3dpZGdldCkKLQkJCVNORF9TT0NfREFQTV9NVVhfRSh3LT5uYW1lLCBTTkRfU09D
X05PUE0sIDAsIDAsCi0JCQkJCSAgIHdpZGdldF9rY3RscywgZ2JhdWRpb193aWRnZXRfZXZlbnQs
Ci0JCQkJCSAgIFNORF9TT0NfREFQTV9QUkVfUE1VIHwKLQkJCQkJICAgU05EX1NPQ19EQVBNX1BP
U1RfUE1EKTsKLQkJYnJlYWs7Ci0JY2FzZSBzbmRfc29jX2RhcG1fYWlmX2luOgotCQkqZHcgPSAo
c3RydWN0IHNuZF9zb2NfZGFwbV93aWRnZXQpCi0JCQlTTkRfU09DX0RBUE1fQUlGX0lOX0Uody0+
bmFtZSwgdy0+c25hbWUsIDAsCi0JCQkJCSAgICAgIFNORF9TT0NfTk9QTSwKLQkJCQkJICAgICAg
MCwgMCwgZ2JhdWRpb193aWRnZXRfZXZlbnQsCi0JCQkJCSAgICAgIFNORF9TT0NfREFQTV9QUkVf
UE1VIHwKLQkJCQkJICAgICAgU05EX1NPQ19EQVBNX1BPU1RfUE1EKTsKLQkJYnJlYWs7Ci0JY2Fz
ZSBzbmRfc29jX2RhcG1fYWlmX291dDoKLQkJKmR3ID0gKHN0cnVjdCBzbmRfc29jX2RhcG1fd2lk
Z2V0KQotCQkJU05EX1NPQ19EQVBNX0FJRl9PVVRfRSh3LT5uYW1lLCB3LT5zbmFtZSwgMCwKLQkJ
CQkJICAgICAgIFNORF9TT0NfTk9QTSwKLQkJCQkJICAgICAgIDAsIDAsIGdiYXVkaW9fd2lkZ2V0
X2V2ZW50LAotCQkJCQkgICAgICAgU05EX1NPQ19EQVBNX1BSRV9QTVUgfAotCQkJCQkgICAgICAg
U05EX1NPQ19EQVBNX1BPU1RfUE1EKTsKLQkJYnJlYWs7Ci0JZGVmYXVsdDoKLQkJcmV0ID0gLUVJ
TlZBTDsKLQkJZ290byBlcnJvcjsKLQl9Ci0KLQlkZXZfZGJnKG1vZHVsZS0+ZGV2LCAiJXM6IHdp
ZGdldCBvZiB0eXBlICVkIGNyZWF0ZWRcbiIsIGR3LT5uYW1lLAotCQlkdy0+aWQpOwotCXJldHVy
biAwOwotZXJyb3I6Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGNvbnRyb2wsIF9jb250cm9s
LCAmbW9kdWxlLT53aWRnZXRfY3RsX2xpc3QsCi0JCQkJIGxpc3QpIHsKLQkJbGlzdF9kZWwoJmNv
bnRyb2wtPmxpc3QpOwotCQlkZXZtX2tmcmVlKG1vZHVsZS0+ZGV2LCBjb250cm9sKTsKLQl9Ci0J
cmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlvX3RwbGdfcHJvY2Vzc19rY29udHJv
bHMoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSwKLQkJCQkJICBzdHJ1Y3QgZ2Jf
YXVkaW9fY29udHJvbCAqY29udHJvbHMpCi17Ci0JaW50IGksIGNzaXplLCByZXQ7Ci0Jc3RydWN0
IHNuZF9rY29udHJvbF9uZXcgKmRhcG1fa2N0bHM7Ci0Jc3RydWN0IGdiX2F1ZGlvX2NvbnRyb2wg
KmN1cnI7Ci0Jc3RydWN0IGdiYXVkaW9fY29udHJvbCAqY29udHJvbCwgKl9jb250cm9sOwotCXNp
emVfdCBzaXplOwotCWNoYXIgdGVtcF9uYW1lW05BTUVfU0laRV07Ci0KLQlzaXplID0gc2l6ZW9m
KHN0cnVjdCBzbmRfa2NvbnRyb2xfbmV3KSAqIG1vZHVsZS0+bnVtX2NvbnRyb2xzOwotCWRhcG1f
a2N0bHMgPSBkZXZtX2t6YWxsb2MobW9kdWxlLT5kZXYsIHNpemUsIEdGUF9LRVJORUwpOwotCWlm
ICghZGFwbV9rY3RscykKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQljdXJyID0gY29udHJvbHM7Ci0J
Zm9yIChpID0gMDsgaSA8IG1vZHVsZS0+bnVtX2NvbnRyb2xzOyBpKyspIHsKLQkJcmV0ID0gZ2Jh
dWRpb190cGxnX2NyZWF0ZV9rY29udHJvbChtb2R1bGUsICZkYXBtX2tjdGxzW2ldLAotCQkJCQkJ
ICAgY3Vycik7Ci0JCWlmIChyZXQpIHsKLQkJCWRldl9lcnIobW9kdWxlLT5kZXYsICIlczolZCB0
eXBlIG5vdCBzdXBwb3J0ZWRcbiIsCi0JCQkJY3Vyci0+bmFtZSwgY3Vyci0+aWZhY2UpOwotCQkJ
Z290byBlcnJvcjsKLQkJfQotCQljb250cm9sID0gZGV2bV9remFsbG9jKG1vZHVsZS0+ZGV2LCBz
aXplb2Yoc3RydWN0Ci0JCQkJCQkJICAgZ2JhdWRpb19jb250cm9sKSwKLQkJCQkgICAgICBHRlBf
S0VSTkVMKTsKLQkJaWYgKCFjb250cm9sKSB7Ci0JCQlyZXQgPSAtRU5PTUVNOwotCQkJZ290byBl
cnJvcjsKLQkJfQotCQljb250cm9sLT5pZCA9IGN1cnItPmlkOwotCQkvKiBQcmVmaXggZGV2X2lk
IHRvIHdpZGdldF9uYW1lICovCi0JCXN0cmxjcHkodGVtcF9uYW1lLCBjdXJyLT5uYW1lLCBOQU1F
X1NJWkUpOwotCQlzbnByaW50ZihjdXJyLT5uYW1lLCBOQU1FX1NJWkUsICJHQiAlZCAlcyIsIG1v
ZHVsZS0+ZGV2X2lkLAotCQkJIHRlbXBfbmFtZSk7Ci0JCWNvbnRyb2wtPm5hbWUgPSBjdXJyLT5u
YW1lOwotCQlpZiAoY3Vyci0+aW5mby50eXBlID09IEdCX0FVRElPX0NUTF9FTEVNX1RZUEVfRU5V
TUVSQVRFRCkgewotCQkJc3RydWN0IGdiX2F1ZGlvX2VudW1lcmF0ZWQgKmdiZW51bSA9Ci0JCQkJ
JmN1cnItPmluZm8udmFsdWUuZW51bWVyYXRlZDsKLQotCQkJY3NpemUgPSBvZmZzZXRvZihzdHJ1
Y3QgZ2JfYXVkaW9fY29udHJvbCwgaW5mbyk7Ci0JCQljc2l6ZSArPSBvZmZzZXRvZihzdHJ1Y3Qg
Z2JfYXVkaW9fY3RsX2VsZW1faW5mbywgdmFsdWUpOwotCQkJY3NpemUgKz0gb2Zmc2V0b2Yoc3Ry
dWN0IGdiX2F1ZGlvX2VudW1lcmF0ZWQsIG5hbWVzKTsKLQkJCWNzaXplICs9IGxlMTZfdG9fY3B1
KGdiZW51bS0+bmFtZXNfbGVuZ3RoKTsKLQkJCWNvbnRyb2wtPnRleHRzID0gKGNvbnN0IGNoYXIg
KiBjb25zdCAqKQotCQkJCWdiX2dlbmVyYXRlX2VudW1fc3RyaW5ncyhtb2R1bGUsIGdiZW51bSk7
Ci0JCQljb250cm9sLT5pdGVtcyA9IGxlMzJfdG9fY3B1KGdiZW51bS0+aXRlbXMpOwotCQl9IGVs
c2UgewotCQkJY3NpemUgPSBzaXplb2Yoc3RydWN0IGdiX2F1ZGlvX2NvbnRyb2wpOwotCQl9Ci0K
LQkJbGlzdF9hZGQoJmNvbnRyb2wtPmxpc3QsICZtb2R1bGUtPmN0bF9saXN0KTsKLQkJZGV2X2Ri
Zyhtb2R1bGUtPmRldiwgIiVkOiVzIGNyZWF0ZWQgb2YgdHlwZSAlZFxuIiwgY3Vyci0+aWQsCi0J
CQljdXJyLT5uYW1lLCBjdXJyLT5pbmZvLnR5cGUpOwotCQljdXJyID0gKHZvaWQgKiljdXJyICsg
Y3NpemU7Ci0JfQotCW1vZHVsZS0+Y29udHJvbHMgPSBkYXBtX2tjdGxzOwotCi0JcmV0dXJuIDA7
Ci1lcnJvcjoKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoY29udHJvbCwgX2NvbnRyb2wsICZt
b2R1bGUtPmN0bF9saXN0LAotCQkJCSBsaXN0KSB7Ci0JCWxpc3RfZGVsKCZjb250cm9sLT5saXN0
KTsKLQkJZGV2bV9rZnJlZShtb2R1bGUtPmRldiwgY29udHJvbCk7Ci0JfQotCWRldm1fa2ZyZWUo
bW9kdWxlLT5kZXYsIGRhcG1fa2N0bHMpOwotCXJldHVybiByZXQ7Ci19Ci0KLXN0YXRpYyBpbnQg
Z2JhdWRpb190cGxnX3Byb2Nlc3Nfd2lkZ2V0cyhzdHJ1Y3QgZ2JhdWRpb19tb2R1bGVfaW5mbyAq
bW9kdWxlLAotCQkJCQlzdHJ1Y3QgZ2JfYXVkaW9fd2lkZ2V0ICp3aWRnZXRzKQotewotCWludCBp
LCByZXQsIHdfc2l6ZTsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3dpZGdldCAqZGFwbV93aWRnZXRz
OwotCXN0cnVjdCBnYl9hdWRpb193aWRnZXQgKmN1cnI7Ci0Jc3RydWN0IGdiYXVkaW9fd2lkZ2V0
ICp3aWRnZXQsICpfd2lkZ2V0OwotCXNpemVfdCBzaXplOwotCi0Jc2l6ZSA9IHNpemVvZihzdHJ1
Y3Qgc25kX3NvY19kYXBtX3dpZGdldCkgKiBtb2R1bGUtPm51bV9kYXBtX3dpZGdldHM7Ci0JZGFw
bV93aWRnZXRzID0gZGV2bV9remFsbG9jKG1vZHVsZS0+ZGV2LCBzaXplLCBHRlBfS0VSTkVMKTsK
LQlpZiAoIWRhcG1fd2lkZ2V0cykKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQljdXJyID0gd2lkZ2V0
czsKLQlmb3IgKGkgPSAwOyBpIDwgbW9kdWxlLT5udW1fZGFwbV93aWRnZXRzOyBpKyspIHsKLQkJ
cmV0ID0gZ2JhdWRpb190cGxnX2NyZWF0ZV93aWRnZXQobW9kdWxlLCAmZGFwbV93aWRnZXRzW2ld
LAotCQkJCQkJIGN1cnIsICZ3X3NpemUpOwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyKG1vZHVs
ZS0+ZGV2LCAiJXM6JWQgdHlwZSBub3Qgc3VwcG9ydGVkXG4iLAotCQkJCWN1cnItPm5hbWUsIGN1
cnItPnR5cGUpOwotCQkJZ290byBlcnJvcjsKLQkJfQotCQl3aWRnZXQgPSBkZXZtX2t6YWxsb2Mo
bW9kdWxlLT5kZXYsIHNpemVvZihzdHJ1Y3QKLQkJCQkJCQkgICBnYmF1ZGlvX3dpZGdldCksCi0J
CQkJICAgICAgR0ZQX0tFUk5FTCk7Ci0JCWlmICghd2lkZ2V0KSB7Ci0JCQlyZXQgPSAtRU5PTUVN
OwotCQkJZ290byBlcnJvcjsKLQkJfQotCQl3aWRnZXQtPmlkID0gY3Vyci0+aWQ7Ci0JCXdpZGdl
dC0+bmFtZSA9IGN1cnItPm5hbWU7Ci0JCWxpc3RfYWRkKCZ3aWRnZXQtPmxpc3QsICZtb2R1bGUt
PndpZGdldF9saXN0KTsKLQkJY3VyciA9ICh2b2lkICopY3VyciArIHdfc2l6ZTsKLQl9Ci0JbW9k
dWxlLT5kYXBtX3dpZGdldHMgPSBkYXBtX3dpZGdldHM7Ci0KLQlyZXR1cm4gMDsKLQotZXJyb3I6
Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHdpZGdldCwgX3dpZGdldCwgJm1vZHVsZS0+d2lk
Z2V0X2xpc3QsCi0JCQkJIGxpc3QpIHsKLQkJbGlzdF9kZWwoJndpZGdldC0+bGlzdCk7Ci0JCWRl
dm1fa2ZyZWUobW9kdWxlLT5kZXYsIHdpZGdldCk7Ci0JfQotCWRldm1fa2ZyZWUobW9kdWxlLT5k
ZXYsIGRhcG1fd2lkZ2V0cyk7Ci0JcmV0dXJuIHJldDsKLX0KLQotc3RhdGljIGludCBnYmF1ZGlv
X3RwbGdfcHJvY2Vzc19yb3V0ZXMoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSwK
LQkJCQkgICAgICAgc3RydWN0IGdiX2F1ZGlvX3JvdXRlICpyb3V0ZXMpCi17Ci0JaW50IGksIHJl
dDsKLQlzdHJ1Y3Qgc25kX3NvY19kYXBtX3JvdXRlICpkYXBtX3JvdXRlczsKLQlzdHJ1Y3QgZ2Jf
YXVkaW9fcm91dGUgKmN1cnI7Ci0Jc2l6ZV90IHNpemU7Ci0KLQlzaXplID0gc2l6ZW9mKHN0cnVj
dCBzbmRfc29jX2RhcG1fcm91dGUpICogbW9kdWxlLT5udW1fZGFwbV9yb3V0ZXM7Ci0JZGFwbV9y
b3V0ZXMgPSBkZXZtX2t6YWxsb2MobW9kdWxlLT5kZXYsIHNpemUsIEdGUF9LRVJORUwpOwotCWlm
ICghZGFwbV9yb3V0ZXMpCi0JCXJldHVybiAtRU5PTUVNOwotCi0JbW9kdWxlLT5kYXBtX3JvdXRl
cyA9IGRhcG1fcm91dGVzOwotCWN1cnIgPSByb3V0ZXM7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgbW9k
dWxlLT5udW1fZGFwbV9yb3V0ZXM7IGkrKykgewotCQlkYXBtX3JvdXRlcy0+c2luayA9Ci0JCQln
YmF1ZGlvX21hcF93aWRnZXRpZChtb2R1bGUsIGN1cnItPmRlc3RpbmF0aW9uX2lkKTsKLQkJaWYg
KCFkYXBtX3JvdXRlcy0+c2luaykgewotCQkJZGV2X2Vycihtb2R1bGUtPmRldiwgIiVkOiVkOiVk
OiVkIC0gSW52YWxpZCBzaW5rXG4iLAotCQkJCWN1cnItPnNvdXJjZV9pZCwgY3Vyci0+ZGVzdGlu
YXRpb25faWQsCi0JCQkJY3Vyci0+Y29udHJvbF9pZCwgY3Vyci0+aW5kZXgpOwotCQkJcmV0ID0g
LUVJTlZBTDsKLQkJCWdvdG8gZXJyb3I7Ci0JCX0KLQkJZGFwbV9yb3V0ZXMtPnNvdXJjZSA9Ci0J
CQlnYmF1ZGlvX21hcF93aWRnZXRpZChtb2R1bGUsIGN1cnItPnNvdXJjZV9pZCk7Ci0JCWlmICgh
ZGFwbV9yb3V0ZXMtPnNvdXJjZSkgewotCQkJZGV2X2Vycihtb2R1bGUtPmRldiwgIiVkOiVkOiVk
OiVkIC0gSW52YWxpZCBzb3VyY2VcbiIsCi0JCQkJY3Vyci0+c291cmNlX2lkLCBjdXJyLT5kZXN0
aW5hdGlvbl9pZCwKLQkJCQljdXJyLT5jb250cm9sX2lkLCBjdXJyLT5pbmRleCk7Ci0JCQlyZXQg
PSAtRUlOVkFMOwotCQkJZ290byBlcnJvcjsKLQkJfQotCQlkYXBtX3JvdXRlcy0+Y29udHJvbCA9
Ci0JCQlnYmF1ZGlvX21hcF9jb250cm9saWQobW9kdWxlLAotCQkJCQkgICAgICBjdXJyLT5jb250
cm9sX2lkLAotCQkJCQkgICAgICBjdXJyLT5pbmRleCk7Ci0JCWlmICgoY3Vyci0+Y29udHJvbF9p
ZCAhPSAgR0JBVURJT19JTlZBTElEX0lEKSAmJgotCQkgICAgIWRhcG1fcm91dGVzLT5jb250cm9s
KSB7Ci0JCQlkZXZfZXJyKG1vZHVsZS0+ZGV2LCAiJWQ6JWQ6JWQ6JWQgLSBJbnZhbGlkIGNvbnRy
b2xcbiIsCi0JCQkJY3Vyci0+c291cmNlX2lkLCBjdXJyLT5kZXN0aW5hdGlvbl9pZCwKLQkJCQlj
dXJyLT5jb250cm9sX2lkLCBjdXJyLT5pbmRleCk7Ci0JCQlyZXQgPSAtRUlOVkFMOwotCQkJZ290
byBlcnJvcjsKLQkJfQotCQlkZXZfZGJnKG1vZHVsZS0+ZGV2LCAiUm91dGUgeyVzLCAlcywgJXN9
XG4iLCBkYXBtX3JvdXRlcy0+c2luaywKLQkJCShkYXBtX3JvdXRlcy0+Y29udHJvbCkgPyBkYXBt
X3JvdXRlcy0+Y29udHJvbCA6ICJOVUxMIiwKLQkJCWRhcG1fcm91dGVzLT5zb3VyY2UpOwotCQlk
YXBtX3JvdXRlcysrOwotCQljdXJyKys7Ci0JfQotCi0JcmV0dXJuIDA7Ci0KLWVycm9yOgotCWRl
dm1fa2ZyZWUobW9kdWxlLT5kZXYsIG1vZHVsZS0+ZGFwbV9yb3V0ZXMpOwotCXJldHVybiByZXQ7
Ci19Ci0KLXN0YXRpYyBpbnQgZ2JhdWRpb190cGxnX3Byb2Nlc3NfaGVhZGVyKHN0cnVjdCBnYmF1
ZGlvX21vZHVsZV9pbmZvICptb2R1bGUsCi0JCQkJICAgICAgIHN0cnVjdCBnYl9hdWRpb190b3Bv
bG9neSAqdHBsZ19kYXRhKQotewotCS8qIGZldGNoIG5vLiBvZiBrY29udHJvbHMsIHdpZGdldHMg
JiByb3V0ZXMgKi8KLQltb2R1bGUtPm51bV9jb250cm9scyA9IHRwbGdfZGF0YS0+bnVtX2NvbnRy
b2xzOwotCW1vZHVsZS0+bnVtX2RhcG1fd2lkZ2V0cyA9IHRwbGdfZGF0YS0+bnVtX3dpZGdldHM7
Ci0JbW9kdWxlLT5udW1fZGFwbV9yb3V0ZXMgPSB0cGxnX2RhdGEtPm51bV9yb3V0ZXM7Ci0KLQkv
KiB1cGRhdGUgYmxvY2sgb2Zmc2V0ICovCi0JbW9kdWxlLT5kYWlfb2Zmc2V0ID0gKHVuc2lnbmVk
IGxvbmcpJnRwbGdfZGF0YS0+ZGF0YTsKLQltb2R1bGUtPmNvbnRyb2xfb2Zmc2V0ID0gbW9kdWxl
LT5kYWlfb2Zmc2V0ICsKLQkJCQkJbGUzMl90b19jcHUodHBsZ19kYXRhLT5zaXplX2RhaXMpOwot
CW1vZHVsZS0+d2lkZ2V0X29mZnNldCA9IG1vZHVsZS0+Y29udHJvbF9vZmZzZXQgKwotCQkJCQls
ZTMyX3RvX2NwdSh0cGxnX2RhdGEtPnNpemVfY29udHJvbHMpOwotCW1vZHVsZS0+cm91dGVfb2Zm
c2V0ID0gbW9kdWxlLT53aWRnZXRfb2Zmc2V0ICsKLQkJCQkJbGUzMl90b19jcHUodHBsZ19kYXRh
LT5zaXplX3dpZGdldHMpOwotCi0JZGV2X2RiZyhtb2R1bGUtPmRldiwgIkRBSSBvZmZzZXQgaXMg
MHglbHhcbiIsIG1vZHVsZS0+ZGFpX29mZnNldCk7Ci0JZGV2X2RiZyhtb2R1bGUtPmRldiwgImNv
bnRyb2wgb2Zmc2V0IGlzICVseFxuIiwKLQkJbW9kdWxlLT5jb250cm9sX29mZnNldCk7Ci0JZGV2
X2RiZyhtb2R1bGUtPmRldiwgIndpZGdldCBvZmZzZXQgaXMgJWx4XG4iLCBtb2R1bGUtPndpZGdl
dF9vZmZzZXQpOwotCWRldl9kYmcobW9kdWxlLT5kZXYsICJyb3V0ZSBvZmZzZXQgaXMgJWx4XG4i
LCBtb2R1bGUtPnJvdXRlX29mZnNldCk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotaW50IGdiYXVkaW9f
dHBsZ19wYXJzZV9kYXRhKHN0cnVjdCBnYmF1ZGlvX21vZHVsZV9pbmZvICptb2R1bGUsCi0JCQkg
ICAgc3RydWN0IGdiX2F1ZGlvX3RvcG9sb2d5ICp0cGxnX2RhdGEpCi17Ci0JaW50IHJldDsKLQlz
dHJ1Y3QgZ2JfYXVkaW9fY29udHJvbCAqY29udHJvbHM7Ci0Jc3RydWN0IGdiX2F1ZGlvX3dpZGdl
dCAqd2lkZ2V0czsKLQlzdHJ1Y3QgZ2JfYXVkaW9fcm91dGUgKnJvdXRlczsKLQl1bnNpZ25lZCBp
bnQgamFja190eXBlOwotCi0JaWYgKCF0cGxnX2RhdGEpCi0JCXJldHVybiAtRUlOVkFMOwotCi0J
cmV0ID0gZ2JhdWRpb190cGxnX3Byb2Nlc3NfaGVhZGVyKG1vZHVsZSwgdHBsZ19kYXRhKTsKLQlp
ZiAocmV0KSB7Ci0JCWRldl9lcnIobW9kdWxlLT5kZXYsICIlZDogRXJyb3IgaW4gcGFyc2luZyB0
b3BvbG9neSBoZWFkZXJcbiIsCi0JCQlyZXQpOwotCQlyZXR1cm4gcmV0OwotCX0KLQotCS8qIHBy
b2Nlc3MgY29udHJvbCAqLwotCWNvbnRyb2xzID0gKHN0cnVjdCBnYl9hdWRpb19jb250cm9sICop
bW9kdWxlLT5jb250cm9sX29mZnNldDsKLQlyZXQgPSBnYmF1ZGlvX3RwbGdfcHJvY2Vzc19rY29u
dHJvbHMobW9kdWxlLCBjb250cm9scyk7Ci0JaWYgKHJldCkgewotCQlkZXZfZXJyKG1vZHVsZS0+
ZGV2LAotCQkJIiVkOiBFcnJvciBpbiBwYXJzaW5nIGNvbnRyb2xzIGRhdGFcbiIsIHJldCk7Ci0J
CXJldHVybiByZXQ7Ci0JfQotCWRldl9kYmcobW9kdWxlLT5kZXYsICJDb250cm9sIHBhcnNpbmcg
ZmluaXNoZWRcbiIpOwotCi0JLyogcHJvY2VzcyB3aWRnZXRzICovCi0Jd2lkZ2V0cyA9IChzdHJ1
Y3QgZ2JfYXVkaW9fd2lkZ2V0ICopbW9kdWxlLT53aWRnZXRfb2Zmc2V0OwotCXJldCA9IGdiYXVk
aW9fdHBsZ19wcm9jZXNzX3dpZGdldHMobW9kdWxlLCB3aWRnZXRzKTsKLQlpZiAocmV0KSB7Ci0J
CWRldl9lcnIobW9kdWxlLT5kZXYsCi0JCQkiJWQ6IEVycm9yIGluIHBhcnNpbmcgd2lkZ2V0cyBk
YXRhXG4iLCByZXQpOwotCQlyZXR1cm4gcmV0OwotCX0KLQlkZXZfZGJnKG1vZHVsZS0+ZGV2LCAi
V2lkZ2V0IHBhcnNpbmcgZmluaXNoZWRcbiIpOwotCi0JLyogcHJvY2VzcyByb3V0ZSAqLwotCXJv
dXRlcyA9IChzdHJ1Y3QgZ2JfYXVkaW9fcm91dGUgKiltb2R1bGUtPnJvdXRlX29mZnNldDsKLQly
ZXQgPSBnYmF1ZGlvX3RwbGdfcHJvY2Vzc19yb3V0ZXMobW9kdWxlLCByb3V0ZXMpOwotCWlmIChy
ZXQpIHsKLQkJZGV2X2Vycihtb2R1bGUtPmRldiwKLQkJCSIlZDogRXJyb3IgaW4gcGFyc2luZyBy
b3V0ZXMgZGF0YVxuIiwgcmV0KTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JZGV2X2RiZyhtb2R1bGUt
PmRldiwgIlJvdXRlIHBhcnNpbmcgZmluaXNoZWRcbiIpOwotCi0JLyogcGFyc2UgamFjayBjYXBh
YmlsaXRpZXMgKi8KLQlqYWNrX3R5cGUgPSBsZTMyX3RvX2NwdSh0cGxnX2RhdGEtPmphY2tfdHlw
ZSk7Ci0JaWYgKGphY2tfdHlwZSkgewotCQltb2R1bGUtPmphY2tfbWFzayA9IGphY2tfdHlwZSAm
IEdCQ09ERUNfSkFDS19NQVNLOwotCQltb2R1bGUtPmJ1dHRvbl9tYXNrID0gamFja190eXBlICYg
R0JDT0RFQ19KQUNLX0JVVFRPTl9NQVNLOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0KLXZvaWQg
Z2JhdWRpb190cGxnX3JlbGVhc2Uoc3RydWN0IGdiYXVkaW9fbW9kdWxlX2luZm8gKm1vZHVsZSkK
LXsKLQlzdHJ1Y3QgZ2JhdWRpb19jb250cm9sICpjb250cm9sLCAqX2NvbnRyb2w7Ci0Jc3RydWN0
IGdiYXVkaW9fd2lkZ2V0ICp3aWRnZXQsICpfd2lkZ2V0OwotCi0JaWYgKCFtb2R1bGUtPnRvcG9s
b2d5KQotCQlyZXR1cm47Ci0KLQkvKiByZWxlYXNlIGtjb250cm9scyAqLwotCWxpc3RfZm9yX2Vh
Y2hfZW50cnlfc2FmZShjb250cm9sLCBfY29udHJvbCwgJm1vZHVsZS0+Y3RsX2xpc3QsCi0JCQkJ
IGxpc3QpIHsKLQkJbGlzdF9kZWwoJmNvbnRyb2wtPmxpc3QpOwotCQlkZXZtX2tmcmVlKG1vZHVs
ZS0+ZGV2LCBjb250cm9sKTsKLQl9Ci0JaWYgKG1vZHVsZS0+Y29udHJvbHMpCi0JCWRldm1fa2Zy
ZWUobW9kdWxlLT5kZXYsIG1vZHVsZS0+Y29udHJvbHMpOwotCi0JLyogcmVsZWFzZSB3aWRnZXQg
Y29udHJvbHMgKi8KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoY29udHJvbCwgX2NvbnRyb2ws
ICZtb2R1bGUtPndpZGdldF9jdGxfbGlzdCwKLQkJCQkgbGlzdCkgewotCQlsaXN0X2RlbCgmY29u
dHJvbC0+bGlzdCk7Ci0JCWRldm1fa2ZyZWUobW9kdWxlLT5kZXYsIGNvbnRyb2wpOwotCX0KLQot
CS8qIHJlbGVhc2Ugd2lkZ2V0cyAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh3aWRnZXQs
IF93aWRnZXQsICZtb2R1bGUtPndpZGdldF9saXN0LAotCQkJCSBsaXN0KSB7Ci0JCWxpc3RfZGVs
KCZ3aWRnZXQtPmxpc3QpOwotCQlkZXZtX2tmcmVlKG1vZHVsZS0+ZGV2LCB3aWRnZXQpOwotCX0K
LQlpZiAobW9kdWxlLT5kYXBtX3dpZGdldHMpCi0JCWRldm1fa2ZyZWUobW9kdWxlLT5kZXYsIG1v
ZHVsZS0+ZGFwbV93aWRnZXRzKTsKLQotCS8qIHJlbGVhc2Ugcm91dGVzICovCi0JaWYgKG1vZHVs
ZS0+ZGFwbV9yb3V0ZXMpCi0JCWRldm1fa2ZyZWUobW9kdWxlLT5kZXYsIG1vZHVsZS0+ZGFwbV9y
b3V0ZXMpOwotfQotLSAKMi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpncmV5YnVzLWRldiBtYWlsaW5nIGxpc3QKZ3JleWJ1cy1kZXZAbGlzdHMu
bGluYXJvLm9yZwpodHRwczovL2xpc3RzLmxpbmFyby5vcmcvbWFpbG1hbi9saXN0aW5mby9ncmV5
YnVzLWRldgo=
