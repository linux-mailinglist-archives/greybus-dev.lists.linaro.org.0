Return-Path: <greybus-dev-bounces@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [107.22.173.205])
	by mail.lfdr.de (Postfix) with ESMTPS id 1195F2AA738
	for <lists+greybus-dev@lfdr.de>; Sat,  7 Nov 2020 18:34:01 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id B39E7607A4
	for <lists+greybus-dev@lfdr.de>; Sat,  7 Nov 2020 17:33:59 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
	id A7E3D60850; Sat,  7 Nov 2020 17:33:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on lists.linaro.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI,RCVD_IN_MSPIKE_H2,SPF_HELO_NONE autolearn=disabled
	version=3.4.2
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id B4914608BA;
	Sat,  7 Nov 2020 17:33:31 +0000 (UTC)
X-Original-To: greybus-dev@lists.linaro.org
Delivered-To: greybus-dev@lists.linaro.org
Received: from lists.linaro.org (localhost [127.0.0.1])
 by lists.linaro.org (Postfix) with ESMTP id 755DF607A4
 for <greybus-dev@lists.linaro.org>; Sat,  7 Nov 2020 17:33:28 +0000 (UTC)
Received: by lists.linaro.org (Postfix, from userid 109)
 id 5DB096088F; Sat,  7 Nov 2020 17:33:28 +0000 (UTC)
Received: from mail-il1-f179.google.com (mail-il1-f179.google.com
 [209.85.166.179])
 by lists.linaro.org (Postfix) with ESMTPS id 670E7607A4
 for <greybus-dev@lists.linaro.org>; Sat,  7 Nov 2020 17:33:26 +0000 (UTC)
Received: by mail-il1-f179.google.com with SMTP id e16so4469952ile.0
 for <greybus-dev@lists.linaro.org>; Sat, 07 Nov 2020 09:33:26 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:subject:to:cc:references:from:message-id:date
 :user-agent:mime-version:in-reply-to:content-language
 :content-transfer-encoding;
 bh=Tz/vXzDvR4gBDyHS7HrgFw6lDufyMI3fVnwZBchO/28=;
 b=qg6PuLOd7SbGMTAfT68TIgQ55xpDtyI3kANtNRwyr3p59n1RCm5GG/4XHHETm0ZxAs
 eT9S4enk/gTi4QyYwwgNn6AP95Us2z01MId8F7HvYGPRLLtbiVcfuZ5qWg6cMpODc8+f
 ShNLxNOy9LCsjOwoFTmMNs3Syql5Sk+fVhxRo8TZOFfr/SBukOANW8vV2j+QB6ub3Sjj
 tOQquBt/GSlivT77A8sGhDAFLVfmdFBy+ESiT0qe7s0Z/rv9qTd6Xa5SA4fU9qRj9kym
 MoUtJl+CgokoJG2a61VKEyXDUAFgBL/3cE85Q2UdiQz4UcCn4FG6EWdfK2UNyxINBbgq
 gooQ==
X-Gm-Message-State: AOAM530dFShMoZDCWM5eOZliIo1bgl/MW3UF3t4m4xbS2gq7aTuZHXNe
 BxG+VCfFgqc7ZtxiV37Xw47mtg0PnKHxrYKW9/I=
X-Google-Smtp-Source: ABdhPJwzQeqHyYzhUMEaoSySE/R5JZvFWc71bveBU6mz4LXveYjZ/hNrjDDKj9UGUBG69Q0SOWblNg==
X-Received: by 2002:a92:89d0:: with SMTP id w77mr5334788ilk.101.1604770405580; 
 Sat, 07 Nov 2020 09:33:25 -0800 (PST)
Received: from [172.22.22.26] (c-73-185-129-58.hsd1.mn.comcast.net.
 [73.185.129.58])
 by smtp.googlemail.com with ESMTPSA id z17sm3450081ilk.53.2020.11.07.09.33.24
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Sat, 07 Nov 2020 09:33:24 -0800 (PST)
To: Christopher Friedt <chrisfriedt@gmail.com>, greybus-dev@lists.linaro.org
References: <CAF4BF-R1gKuRZ3g3DSHROSxbmBT2gFJxSsZkzjNgBcw1mjuv5Q@mail.gmail.com>
From: Alex Elder <elder@linaro.org>
Message-ID: <135673dd-2732-e453-5833-796af3ea867b@linaro.org>
Date: Sat, 7 Nov 2020 11:33:23 -0600
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.3.2
MIME-Version: 1.0
In-Reply-To: <CAF4BF-R1gKuRZ3g3DSHROSxbmBT2gFJxSsZkzjNgBcw1mjuv5Q@mail.gmail.com>
Content-Language: en-US
X-Virus-Scanned: ClamAV using ClamSMTP
Cc: Greg KH <greg@kroah.com>, johan@kernel.org
Subject: Re: [greybus-dev] Authentication and Ecryption
X-BeenThere: greybus-dev@lists.linaro.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
List-Unsubscribe: <https://lists.linaro.org/mailman/options/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=unsubscribe>
List-Archive: <http://lists.linaro.org/pipermail/greybus-dev/>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Subscribe: <https://lists.linaro.org/mailman/listinfo/greybus-dev>,
 <mailto:greybus-dev-request@lists.linaro.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: greybus-dev-bounces@lists.linaro.org
Sender: "greybus-dev" <greybus-dev-bounces@lists.linaro.org>
X-Virus-Scanned: ClamAV using ClamSMTP

T24gOS8xMS8yMCA4OjUyIEFNLCBDaHJpc3RvcGhlciBGcmllZHQgd3JvdGU6Cj4gSGkgZXZlcnlv
bmUsCgpDaHJpc3RvcGhlciwgSSB3YXMgb24gdmFjYXRpb24gZHVyaW5nIHRoZSBQbHVtYmVycyBj
b25mZXJlbmNlLAphbmQgZmluYWxseSBzcGVudCB0aGUgdGltZSB5ZXN0ZXJkYXkgdG8gd2F0Y2gg
eW91ciBwcmVzZW50YXRpb24KYXQgdGhlICJZb3UsIE1lLCBhbmQgSW9UIFR3byIgbWljcm9jb25m
ZXJlbmNlIHRoZXJlLiAgWW91cgpjb3ZlcmFnZSBvZiBQcm9qZWN0IEFyYSB3YXMgYWxtb3N0IGVu
dGlyZWx5IGNvcnJlY3QsIGFuZCBJCmFwcHJlY2lhdGVkIGxlYXJuaW5nIGEgZmV3IHRoaW5ncyBh
Ym91dCBaZXBoeXIuICBJIGFsc28gd2F0Y2hlZAp0aGUgcHJlc2VudGF0aW9uIGJ5IFZhaXNobmF2
LiAgQW55d2F5LCBhZnRlciB0aGF0IEkgcmV0dXJuZWQgdG8KdGhpcyBtZXNzYWdlIGFuZCByZWFk
IHRocm91Z2ggaXQgYWdhaW4gbW9yZSBjbG9zZWx5LgoKSSB3aWxsIHN0YXJ0IGJ5IG1lbnRpb25p
bmcgc29tZSB0aGluZ3MgSSBkb24ndCBrbm93IGVub3VnaAphYm91dC4gIEZpcnN0LCBJIGRvbid0
IGtub3cgbXVjaCBhYm91dCBob3cgc2VjdXJlIHNvY2tldHMgYXJlCmltcGxlbWVudGVkLiAgSSBn
ZW5lcmFsbHkgdW5kZXJzdGFuZCBwdWJsaWMga2V5IGF1dGhlbnRpY2F0aW9uCmJ1dCBJIGxhY2sg
ZGV0YWlsIG9uIGhvdyBhIG5lZ290aWF0ZWQgc2Vzc2lvbiBrZXkgaXMgYWN0dWFsbHkKdXNlZCBi
eSB0aGUgc29ja2V0IGxheWVyIChvciBieSB0aGUgQVBJIHRoYXQgdXNlcyB0aGUgc29ja2V0Cmxh
eWVyKSB0byBlbmNyeXB0IHRyYWZmaWMuCgpTZWNvbmQsIEkgaGF2ZW4ndCBsb29rZWQgY2xvc2Vs
eSBhdCBBbGV4YW5kcmUncyBHQnJpZGdlIGNvZGUsCmJ1dCBJIHRoaW5rIEkgdW5kZXJzdGFuZCB3
aGF0IGl0IGlzIHRyeWluZyB0byBkby0tc2ltdWxhdGluZwpwYXJ0cyBvZiB0aGUgUHJvamVjdCBB
cmEgbW9kZWwgKFNWQyBhbmQgcHJvY2Vzc29yIGJyaWRnZXMpLgoKSSBhbHNvIGNvbmN1ciB3aXRo
IEdyZWcncyBxdWVzdGlvbnMgYWJvdXQgd2h5IHlvdSBmZWVsCnRoZXNlIHRoaW5ncyBuZWVkIHRv
IGJlIGluY29ycG9yYXRlZCAqaW50byogR3JleWJ1cywgcmF0aGVyCnRoYW4gc2V0IHVwICphcm91
bmQqIEdyZXlidXMgc29tZWhvdy4gIE9uIFByb2plY3QgQXJhLCB0aGUKdW5kZXJseWluZyB0cmFu
c3BvcnQgd2FzIGEgVW5pUHJvIG5ldHdvcmsuICBPdXIgYmFzaWMKYXNzdW1wdGlvbiB3YXMgdGhh
dCB0aGUgVW5pUHJvIG5ldHdvcmsgd2FzIGVtYmVkZGVkIGFuZApwcm92aWRlZCBwaHlzaWNhbCBz
ZWN1cml0eS4gIEknbSBmb3JnZXR0aW5nIHNvbWUgZGV0YWlscwpub3cgYnV0IG1vZHVsZSBmaXJt
d2FyZSB3YXMgZW5jcnlwdGVkIHVzaW5nIGtleWluZyBtYXRlcmlhbAp0aWVkIHRvIHRoZSBtb2R1
bGUuICBBbmQgdGhlIG1vZHVsZSBpZGVudGlmaWVkIGl0c2VsZiB0bwp0aGUgQVAgaW4gYSB3YXkg
dGhhdCBzb21laG93IHVzZWQgcHVibGljL3ByaXZhdGUga2V5cy4gIChJCnNob3VsZCBwcm9iYWJs
eSBzZWUgaWYgSSBoYXZlIGFueSBvbGQgbm90ZXMgb24gdGhpcy4uLikKCkluIGFueSBjYXNlIEkg
ZG8gaGF2ZSBhIGZldyBjb21tZW50cyB0byBzaGFyZSBvbiB3aGF0IHlvdQpoYXZlIHdyaXR0ZW4s
IGluY2x1ZGluZyBvbmUgdGhvdWdodHMgYWJvdXQgd2h5IHlvdSBtaWdodApuZWVkIHRvIGRvIHNv
bWV0aGluZyBpbnNpZGUgR3JleWJ1cyB0byBzdXBwb3J0IGVuY3J5cHRlZApjb21tdW5pY2F0aW9u
LgoKPiBJIHRob3VnaHQgaXQgbWlnaHQgYmUgYSBnb29kIHRpbWUgdG8gc3RhcnQgLyByZS1zdGFy
dCAvIGpvaW4gdGhlCj4gY29udmVyc2F0aW9uIGFib3V0IGF1dGhlbnRpY2F0aW9uIGFuZCBlbmNy
eXB0aW9uIGluIEdyZXlidXMsIGFuZCBpbgo+IHBhcnRpY3VsYXIsIGZvciB1c2luZyBhIHRyYW5z
cG9ydCAoYW5kIGxvd2VyIGxheWVycykgb3RoZXIgdGhhbgo+IFVuaVByby4gVGhpcyBpcyB0aGUg
bG9naWNhbCBuZXh0IHN0ZXAgYWZ0ZXIgZ2V0dGluZyB0aGUgVENQL0lQCj4gdHJhbnNwb3J0IHdv
cmtpbmcgd2l0aCBnYnJpZGdlIG92ZXIgQkxFLCA4MDIuMTUuNCwgV2lGaSwgZXRoZXJuZXQsCj4g
VUFSVCwgZXRjLgoKVGhpcyBzb3VuZHMgZ3JlYXQuICBNb3N0IGRldGFpbHMgb2YgdGhlIEdyZXli
dXMgcHJvdG9jb2wgYXJlCmluZGVwZW5kZW50IG9mIHRoZSB1bmRlcmx5aW5nIHRyYW5zcG9ydCBi
eSBkZXNpZ24sIGFuZCB0aGlzCnByb3ZlcyB3ZSB3ZXJlIHN1Y2Nlc3NmdWwuICBJdCBzZWVtcyB0
byBtZSB0aGF0IHNvbWUgdGhpbmdzCihlc3BlY2lhbGx5IHNvbWUgU1ZDIGludGVyYWN0aW9ucykg
d2VyZSBwcm9iYWJseSBkZXNpZ25lZApiYXNlZCBvbiBpZGlvc3luY3Jhc2llcyBvZiB0aGUgVW5p
UHJvIG5ldHdvcmsvc3dpdGNoIHdlCndlcmUgd29ya2luZyB3aXRoIHRob3VnaC4KCj4gVGhlcmUg
aXMgdGhlIENvbXBvbmVudCBBdXRoZW50aWNhdGlvbiBQcm90b2NvbCB0aGF0IGV4aXN0cyBhbHJl
YWR5LAo+IGJ1dCBJJ20gbm90IHRlcnJpYmx5IGZhbWlsaWFyIHdpdGggaXQuIElzIGFueW9uZSBh
YmxlIHRvIGNsYXJpZnkgaWYKPiB0aGVyZSBpcyBzb21lIG92ZXJsYXAgYmV0d2VlbiBDQVAgYW5k
IHNvbWUgb2YgdGhlIHdvcmsgdGhhdCBmb2xsb3dzPwo+IElmIGl0J3MgcG9zc2libGUgdG8gcmUt
dXNlIHNvbWUgb2YgdGhlIENBUCwgdGhhdCB3b3VsZCBiZSBuaWNlLgoKSSBjYW4ndCBjb21tZW50
IG9uIHRoaXMuCgo+IEp1c3Qgb3ZlciBhIHllYXIgYWdvIEkgc2V0IHVwIGF1dGhlbnRpY2F0aW9u
IGFuZCBlbmNyeXB0aW9uIG92ZXIKPiBHcmV5YnVzIGZvciBCZWFnbGVCb2FyZC5vcmcuIEkgd2Fz
IGFibGUgdG8gZGVtb25zdHJhdGUgaXQgd29ya2luZyBvdmVyCj4gYSBUQ1AvSVAgdHJhbnNwb3J0
LiBIZXJlIGlzIHNvbWUgY29kZSB0aGF0IGlzIG9uIHRoZSBiYWNrLWJ1cm5lciBmb3IKPiBub3cu
Cj4gCj4gaHR0cHM6Ly9naXRodWIuY29tL2ZyaWVkdGNvL2dicmlkZ2UvYmxvYi9mZWF0dXJlL3Rj
cGlwLWJsZS1pcHNwL3BrYXV0aC5oCj4gaHR0cHM6Ly9naXRodWIuY29tL2ZyaWVkdGNvL2dicmlk
Z2UvYmxvYi9mZWF0dXJlL3RjcGlwLWJsZS1pcHNwL3BrYXV0aC5jCgpJIGhhdmUgbG9va2VkIGF0
IHRoZSBoZWFkZXIgYW5kIGdsYW5jZWQgYXQgdGhlIGNvZGUgYnV0IGhhdmVuJ3QKbG9va2VkIGF0
IGl0IHZlcnkgY2xvc2VseS4gIEl0J3Mgbm90IGNvbXBsZXRlbHkgY2xlYXIgdG8gbWUKKndoZXJl
KiB0aGlzIGNvZGUgcnVucy0taXMgaXQgaW4gdXNlciBzcGFjZT8gIElzIGl0IGFzc29jaWF0ZWQK
d2l0aCBjb25uZWN0aW9ucz8gIEl0IHNlZW1zIGxpa2UgaXQncyBhIGNvbXBsZXRlbHkgbmV3IEdy
ZXlidXMKcHJvdG9jb2wsIHdoaWNoIHdvdWxkIG5vdCBiZSB1c2FibGUgYnkgdGhlIG90aGVyIGV4
aXN0aW5nCnByb3RvY29scy4gIE5vdCBoYXZpbmcgcmVhZCB0aGUgY29kZSBvciBzZWVuIGhvdyBp
dCB0aWVzIGluCnRvIG90aGVyIGNvZGUgKGluY2x1ZGluZyBHQnJpZGdlKSBJIGRvbid0IHRoaW5r
IEkgdW5zZXJzdGFuZAp0aGUgb3ZlcmFsbCBtb2RlbCwgYW5kIHdoZXJlIHRoaXMgZml0cyBpbnRv
IGl0LgoKSGVyZSBhcmUgYSBmZXcgdGhvdWdodHMgdGhvdWdoLgoKT3ZlcmFsbCwgaWYgdHJhZmZp
YyBvdmVyIGEgR3JleWJ1cyBjb25uZWN0aW9uIHdlcmUgdG8gYmUKZW5jcnlwdGVkLCBhbGwgZXhp
c3RpbmcgcHJvdG9jb2xzIHNob3VsZCBiZW5lZml0IGZyb20gaG93CnRoYXQgaXMgaW1wbGVtZW50
ZWQuICBUaGF0IGlzLCBjb25uZWN0aW9uIHRyYWZmaWMgc2hvdWxkIGJlCmVuY3J5cHRlZCBvciBu
b3QsIGFuZCB0aGUgZHJpdmVyIHRoYXQgdXNlcyB0aGUgKGZvciBleGFtcGxlKQpHUElPIGNvbm5l
Y3Rpb24gc2hvdWxkIG5vdCBuZWVkIHRvIGJlIGF3YXJlIG9mIHRoYXQuCgpUaGUgZW5jcnlwdGlv
biBzaG91bGQgYmUgcHJvdmlkZWQgYnkgdGhlIHVuZGVybHlpbmcgdHJhbnNwb3J0LgpJbiB0aGUg
Y2FzZSBvZiBUQ1AgdGhhdCBwcm9iYWJseSBtZWFucyBHcmV5YnVzIHNpdHMgb24gdG9wIG9mCnRo
ZSBUTFMvU1NMIChhcHBsaWNhdGlvbikgbGF5ZXIuICBUaGlzIGltcGxpZXMgdGhhdCBhIHNlc3Np
b24Ka2V5IGlzIG5lZ290aWF0ZWQsIGFuZCBJIHByZXN1bWUgdGhlcmUgYWxyZWFkeSBleGlzdCB3
YXlzIHRvCmRvIHRoYXQsIGJ1dCB0aGlzIGlzIHdoZXJlIG9uZSBvZiB0aGUgaG9sZXMgaW4gbXkg
a25vd2xlZGdlCnNob3dzLgoKSXQgc2VlbXMgdG8gbWUgdGhhdCB0aGVyZSBjb3VsZCBiZSBhIGNo
aWNrZW4tYW5kLWVnZyBwcm9ibGVtCndpdGggbmVnb3RpYXRpbmcgdGhlIHNlc3Npb24ga2V5LCBh
bmQgY29uY2VpdmFibHkgdGhhdCBjb3VsZAptZWFuIEdyZXlidXMgbmVlZHMgdG8gYmUgaW52b2x2
ZWQgc29tZWhvdy4gIEJ1dCBhZ2FpbiwgaWYKd2UgYWxyZWFkeSBrbm93IHdlJ3JlIHVzaW5nIFRD
UCBzb2NrZXRzLCB0aGVyZSBtdXN0IGhhdmUKYWxyZWFkeSBiZWVuIGEgd2F5IGZvciB0aGF0IGNv
bm5lY3Rpb24gdG8gYmUgc2V0IHVwIGZvcgpHcmV0YnVzIHRvIHVzZSwgc28gaXQganVzdCBpc24n
dCBjbGVhciB3aHkgdGhpcyB3b3VsZCBiZQpuZWVkZWQuCgpBcyBJIG1lbnRpb25lZCwgbW9kdWxl
cyAoaW50ZXJmYWNlcywgcmVhbGx5LCBvciB0byBiZQpyZWFsbHkgc3BlY2lmaWMsIEdQIGJyaWRn
ZXMpIHdlcmUgZXhwZWN0ZWQgdG8gaG9sZCBzZWN1cmUKa2V5IGluZm9ybWF0aW9uLiAgSWYgd2Ug
bmVlZCBzdWNoIGEga2V5IHdlIHNob3VsZCB1c2Ugd2hhdAphbHJlYWR5IGV4aXN0cyBhbmQgbm90
IGFkZCBzb21ldGhpbmcgbW9yZS4gIFRvIGJlIGhvbmVzdApJIGRvbid0IHJlY2FsbCBmb3JtYWxp
emluZyBob3cgdGhhdCB3b3VsZCBiZSBhY2Nlc3NlZAp0aG91Z2gsIHNvIHRoaXMgbWlnaHQgbm90
IGJlIGEgdmVyeSBoZWxwZnVsIGNvbW1lbnQuLi4KCj4gSSBoYXZlIGEgUFIgb3BlbiB0byBhbm9i
bGkvZ2JyaWRnZSBvbiBHaXRIdWIgdGhhdCBwdWxscyBpbiB0aGUKPiBub24tYXV0aGVudGljYXRp
b24gLyBlbmNyeXB0aW9uIGNoYW5nZXMuIFNvIHRoZSBjaGFuZ2UgdGhhdCBkZWFscyB3aXRoCj4g
YXV0aCBhbmQgZW5jcnlwdGlvbiBpcyBmYWlybHkgc21hbGwuIE9uIHRoZSBIb3N0IHNpZGUsIGl0
IHVzZXMKPiBPcGVuU1NMLgo+IAo+IFdlIGFyZSB1c2luZyByZWd1bGFyIFNTSCBrZXlzIGZvciBh
c3ltbWV0cmljIGF1dGhlbnRpY2F0aW9uIGFuZCB0aGUKPiBpbml0aWFsIHNlY3VyZSBjaGFubmVs
LCB0aGVuIGdlbmVyYXRpbmcgYW5kIHNoYXJpbmcgYW4gQUVTLTEyOCBzZXNzaW9uCj4ga2V5IGZv
ciBzeW1tZXRyaWMgZW5jcnlwdGlvbiBvZiB0aGUgc3Vic2VxdWVudCBjb21tdW5pY2F0aW9ucy4g
VGhlCj4gd2lyZWxlc3MgU29DIHdlJ3JlIHVzaW5nIGZvciB0ZXN0aW5nIGlzIHRoZSBDQzEzNTJS
IGZyb20gVEksIGFuZCBpdAo+IGhhcyBib3RoIEFFUyBhbmQgUEsgaGFyZHdhcmUgYWNjZWxlcmF0
b3JzLiBNb3N0IFNvQydzIHRoZXNlIGRheXMgaGF2ZQo+IGFuIEFFUyBhY2NlbGVyYXRvciwgYXQg
bGVhc3QuCj4gCj4gVGhlIGhhbmRzaGFrZSBpcyBkZXNjcmliZWQgaGVyZSwgYnV0IEknbGwgY29w
eSBpdCBpbnRvIHRoZSBlbWFpbCBhcyB3ZWxsLgo+IAo+IGh0dHBzOi8vZ2l0aHViLmNvbS9mcmll
ZHRjby9nYnJpZGdlL2Jsb2IvZmVhdHVyZS90Y3BpcC1ibGUtaXBzcC9wa2F1dGguYyNMMTE2MQoK
SSdtIGdvaW5nIHRvIGlnbm9yZSB0aGUgcG9pbnRzIEkgbWFkZSBhYm92ZSwgYW5kIHByb3ZpZGUg
eW91CndpdGggc29tZSBmZWVkYmFjayBvbiB5b3VyIHByb3Bvc2VkIEdyZXlidXMgcHJvdG9jb2wu
CgpUaGlzIG1pZ2h0IG5vdCBhbGlnbiB3aXRoIG90aGVyIGV4aXN0aW5nIFBLQSBtZWNoYW5pc21z
LCBidXQKSSBoYXZlIGEgc2ltcGxlciBtZXRob2QgdGhhdCBJIHdvdWxkIHByb3Bvc2UgaW4gcGxh
Y2Ugb2Ygd2hhdAp5b3UgaGF2ZSBkZXNjcmliZWQuICBJLmUuIGlmIEkgd2VyZSBkZXNpZ25pbmcg
dGhpcyBHcmV5YnVzCm1lc3NhZ2UgZXhjaGFuZ2UgbXlzZWxmLCBJIG1pZ2h0IGhhdmUgc3VnZ2Vz
dGVkIHdoYXQgZm9sbG93cy4KCkZpcnN0LCBpbiBHcmV5YnVzLCB0aGUgQVAgaXMgdGhlIGtpbmcg
b2YgdGhlIHdvcmxkLiBTbyB0aGUgZmlyc3QKdGhpbmcgdGhhdCBzaG91bGQgY2hhbmdlIGluIHlv
dXIgcHJvdG9jb2wgaXMgdGhhdCB0aGUgQVAsIG5vdAp0aGUgbW9kdWxlIChob3N0LCBub3QgdGhl
IGRldmljZSkgc2hvdWxkIGluaXRpYXRlIHRoZSBleGNoYW5nZS4KSS5lLiwgZm9yIHlvdXIgcHJv
dG9jb2wsIHN0ZXAgMSB3b3VsZCBiZSAiQVAgc2VuZHMgZGV2aWNlIGl0cwpwdWJsaWMga2V5LiIK
ClNlY29uZCwgeW91ciBwcm90b2NvbCBpbnZvbHZlcyBhIGxvdCBvZiBtZXNzYWdlcy4gIEkgdGhp
bmsKdGhpcyBtaWdodCBtYWtlIGhhbmRsaW5nIGVhY2ggbWVzc2FnZSBzdGF0ZWxlc3MsIGJ1dCBJ
IGRvbid0CmJlbGlldmUgdGhhdCdzIGEgY3JpdGljYWwgcHJvcGVydHkgaW4gR3JleWJ1cyBwcm90
b2NvbHMuICBUaGUKKG11dHVhbCkgYXV0aGVudGljYXRpb24gcHJvY2VzcyBpcyBhIHByb2Nlc3Ms
IGFmdGVyIGFsbCwgYW5kCml0IGlzIG9ubHkgc3VjY2Vzc2Z1bCBhZnRlciB0aGUgc2VyaWVzIG9m
IG1lc3NhZ2VzLCBpbiBzZXF1ZW5jZSwKaXMgY29tcGxldGUuCgpTbyB3aXRoIHRoYXQsIGhlcmUg
aXMgd2hhdCBJIHdvdWxkIHN1Z2dlc3QgYXMgYW4gYWx0ZXJuYXRpdmUuCkl0IGNvbnNpc3RzIG9m
IHR3byBvcGVyYXRpb25zICh0d28gcmVxdWVzdC9yZXNwb25zZSBwYWlycyksCmJvdGggaW5pdGlh
dGVkIGJ5IHRoZSBBUC4gIFRoZSBBUCBhbmQgYWxsIG1vZHVsZXMgaGF2ZSB1bmlxdWUKcHVibGlj
IGFuZCBwcml2YXRlIGtleXMuICBGb3IgUHJvamVjdCBBcmEgd2UgYXNzdW1lZCB0aGUgQVAKaGFk
IHRoZSBhYmlsaXR5IHRvIGNvbnN1bHQgYW4gb25saW5lIHJlcG9zaXRvcnkgb2YgbGVnaXRpbWF0
ZQptb2R1bGUgcHVibGljIGtleXMuICBJbiBlYWNoIG1lc3NhZ2UgYmVsb3csIHVubGVzcyBhIHZh
bHVlIGhhcwphIGtub3duIGZpeGVkIGxlbmd0aCwgYSBsZW5ndGgtb2YtdmFsdWUgZmllbGQgd291
bGQgYWxzbyBiZQpwcmVzZW50LgoKMS4gIEFQIHNlbmRzIGFuIElERU5USUZZIG9wZXJhdGlvbiBy
ZXF1ZXN0IG1lc3NhZ2UgdG8gdGhlCiAgICBtb2R1bGUuICBJdCBjb250YWluczoKICAgICAgQVAg
cHVibGljIGtleSBpbiBwbGFpbiB0ZXh0IChhbmQgbGVuZ3RoLi4uKQogICAgTW9kdWxlIHJlY2Vp
dmVzIHRoZSBJREVOVElGWSByZXF1ZXN0IGFuZCBleHRyYWN0cyB0aGUKICAgIEFQIHB1YmxpYyBr
ZXkuICBJdCByZWNvcmRzIHRoaXMgZm9yIGZ1dHVyZSB1c2UuCiAgICAtIFRoZSBtb2R1bGUgY291
bGQgY2hlY2sgaXRzICJhdXRob3JpemVkIGtleXMiIHRvCiAgICAgIGRldGVybWluZSB3aGV0aGVy
IHRoZSBBUCBsZWdpdGltYXRlLCBidXQgdGhpcyBpcwogICAgICBub3QgcmVhbGx5IHByYWN0aWNh
bC4KMi4gIE1vZHVsZSBzZW5kcyBhbiBJREVOVElGWSByZXNwb25zZSBtZXNzYWdlIHRvIHRoZSBB
UC4KICAgIEl0IGNvbnRhaW5zOgogICAgICBNb2R1bGUgcHVibGljIGtleSBlbmNyeXB0ZWQgd2l0
aCBBUCBwdWJsaWMga2V5CiAgICAgIEFQIHB1YmxpYyBrZXkgZW5jcnlwdGVkIHdpdGggbW9kdWxl
IHByaXZhdGUga2V5CiAgICBBUCByZWNlaXZlcyB0aGUgcmVzcG9uc2UgbWVzc2FnZSBhbmQgZXh0
cmFjdHMgdGhlIHR3bwogICAgdmFsdWVzIGl0IGNvbnRhaW5zLgogICAgLSBBUCBkZWNyeXB0cyB0
aGUgZmlyc3QgdmFsdWUgd2l0aCBpdHMgQVAgcHJpdmF0ZSBrZXkKICAgICAgdG8gcHJvZHVjZSB0
aGUgbW9kdWxlIHB1YmxpYyBrZXkuICBJdCByZWNvcmRzIHRoaXMuCiAgICAtIEFQIGNhbiBjb25z
dWx0IGl0cyAiYXV0aG9yaXplZCBrZXlzIiBsaXN0IGFuZCBhYm9ydHMKICAgICAgdGhlIHNlc3Np
b24gc2V0dXAgaWYgaXQgaXMgbm90IGxlZ2l0aW1hdGUuCiAgICAtIEFQIGRlY3J5cHRzIHRoZSBz
ZWNvbmQgdmFsdWUgd2l0aCB0aGUgbW9kdWxlIHB1YmxpYwogICAgICBrZXkuICBJZiBpdCBtYXRj
aGVzIHRoZSBBUCBwdWJsaWMga2V5LCB0aGUgbW9kdWxlCiAgICAgIGlzIHRoZSBhdXRoZW50aWMg
b3duZXIgb2YgdGhlIG1vZHVsZSBwdWJsaWMga2V5LgogICAgQVAgY3JlYXRlcyBhIHN5bW1ldHJp
YyBzZXNzaW9uIGtleSB0byB1c2UuCjMuICBBUCBzZW5kcyBhIFNFU1NJT05fS0VZIHJlcXVlc3Qg
bWVzc2FnZSB0byB0aGUgbW9kdWxlLgogICAgSXQgY29udGFpbnM6CiAgICAgIE1vZHVsZSBwdWJs
aWMga2V5IGVuY3J5cHRlZCB3aXRoIHRoZSBBUCBwcml2YXRlIGtleQogICAgICBTZXNzaW9uIGtl
eSBlbmNyeXB0ZWQgd2l0aCB0aGUgbW9kdWxlIHB1YmxpYyBrZXkKICAgIE1vZHVsZSByZWNlaXZl
cyB0aGUgU0VTU0lPTl9LRVkgcmVxdWVzdCBhbmQgZXh0cmFjdHMKICAgIHRoZSB0d28gdmFsdWVz
IGl0IGNvbnRhaW5zLgogICAgLSBNb2R1bGUgZGVjcnlwdHMgdGhlIGZpcnN0IHZhbHVlIHdpdGgg
dGhlIEFQIHB1YmxpYwogICAgICBrZXkuICBJZiBpdCBtYXRjaGVzIHRoZSBtb2R1bGUgcHVibGlj
IGtleSB0aGUgQVAKICAgICAgaXMgdGhlIGF1dGhlbnRpYyBvd25lciBvZiB0aGF0IEFQIHB1Ymxp
YyBrZXkuCiAgICAtIE1vZHVsZSBkZWNyeXB0cyB0aGUgc2Vjb25kIHZhbHVlIHdpdGggaXRzIG1v
ZHVsZQogICAgICBwcml2YXRlIGtleS4gIFRoaXMgaXMgcmVjb3JkZWQgYXMgdGhlIHNlc3Npb24g
a2V5Lgo0LiAgTW9kdWxlIHNlbmRzIGEgU0VTU0lPTl9LRVkgcmVzcG9uc2UgbWVzc2FnZSB0byB0
aGUgQVAuCiAgICBJdCBjb250YWlucyBvbmx5IGEgcmVzdWx0IGNvZGUgKHN1Y2Nlc3Mgb3IgZmFp
bCkuCiAgICAtIE1vZHVsZSBhc3NvY2lhdGVzIHNlc3Npb24ga2V5IHdpdGggc29ja2V0CiAgICBB
UCByZWNlaXZlcyB0aGUgU0VTU0lPTl9LRVkgcmVzcG9uc2UKICAgIC0gSWYgcmVzdWx0IGNvZGUg
aXMgc3VjY2VzcywgQVAgYXNzb2NpYXRlcyBzZXNzaW9uCiAgICAgIGtleSB3aXRoIHNvY2tldC4K
Ckkgc3VwcGx5IHRoZSBhYm92ZSBtYWlubHkgdG8gZ2l2ZSB5b3UgZmVlZGJhY2sgYWJvdXQgd2hh
dApJIHdvdWxkIGNvbnNpZGVyIGdvb2QgcHJhY3RpY2UgaW4gZGVzaWduaW5nIGEgR3JleWJ1cwpw
cm90b2NvbC4gIEtlZXAgaXQgc2ltcGxlIGFuZCBjb25jaXNlLCBhbmQgdGFrZSBhZHZhbnRhZ2UK
b2YgdGhlIGFiaWxpdHkgdG8gY2FycnkgaW5mb3JtYXRpb24gaW4gYm90aCB0aGUgcmVxdWVzdAph
bmQgcmVzcG9uc2UgbWVzc2FnZXMuICBJIGRvbid0IGd1YXJhbnRlZSB0aGF0IHRoaXMgd291bGQK
c3Vydml2ZSByaWdvcm91cyBzZWN1cml0eSBhbmFseXNpcy4KCkFib3ZlIGFsbCB0aG91Z2gsIEkg
YW0gbm90IGNvbnZpbmNlZCB3ZSBuZWVkIHRvIGRvIHRoaXMKbmVnb3RpYXRpb24gKndpdGhpbiog
R3JleWJ1cy4KCkkgcmVhbGx5IGFwcHJlY2lhdGUgdGhlIHJlbmV3ZWQgaW50ZXJlc3QgaW4gR3Jl
eWJ1cy4gIFdlCndobyB3b3JrZWQgb24gaXQgZmVsdCBpdCBoYWQgdmFsdWUgYmV5b25kIFByb2pl
Y3QgQXJhLCBhcwpyZWZsZWN0ZWQgaW4gR3JlZydzIHB1c2ggdG8gZ2V0IGl0IG1lcmdlZCBpbnRv
IHRoZSBMaW51eApkZXZpY2Ugc3RhZ2luZyB0cmVlLgoKCQkJCQktQWxleAoKPiAxLiBEZXZpY2Ug
c2VuZHMgaXRzIHB1YmxpYyBrZXkKPiAyLiBIb3N0IGNvbXBhcmVzIGRldmljZSBwdWJsaWMga2V5
IHdpdGggdGhvc2UgaW4gYSBjb2xsZWN0aW9uIG9mCj4gdHJ1c3RlZCBwdWJsaWMga2V5cy4gaWYg
bm90IGZvdW5kIGNvbm5lY3Rpb24gY2xvc2VkLgo+IDMuIEhvc3Qgc2VuZHMgaXRzIHB1YmxpYyBr
ZXkKPiA0LiBEZXZpY2UgY29tcGFyZXMgaG9zdCBwdWJsaWMga2V5IHdpdGggdGhvc2UgaW4gYSBj
b2xsZWN0aW9uIG9mCj4gdHJ1c3RlZCBwdWJsaWMga2V5cy4gaWYgbm90IGZvdW5kIGNvbm5lY3Rp
b24gY2xvc2VkLgo+IDUuIERldmljZSBjcmVhdGVzIGEgcmFuZG9tbHkgZ2VuZXJhdGVkIG1lc3Nh
Z2UsICJQbGFpblRleHQgQSIuCj4gNi4gRGV2aWNlIGVuY3J5cHRzICJQbGFpblRleHQgQSIgdXNp
bmcgSG9zdCBwdWJsaWMga2V5LCBjcmVhdGluZyAiQ2lwaGVyVGV4dCBBIi4KPiA3LiBEZXZpY2Ug
dHJhbnNtaXRzICJDaXBoZXJUZXh0IEEiIHRvIEhvc3QuCj4gOC4gSG9zdCBkZWNyeXB0cyAiQ2lw
aGVyVGV4dCBBIiB3aXRoIEhvc3QgcHJpdmF0ZSBrZXksIHJlc3VsdGluZyBpbgo+ICJQbGFpblRl
eHQgQiIuCj4gOS4gSG9zdCBlbmNyeXB0cyAiUGxhaW5UZXh0IEIiIHVzaW5nIERldmljZSBwdWJs
aWMga2V5LCBjcmVhdGluZyAiQ2lwaGVyVGV4dCBCIi4KPiAxMC4gSG9zdCB0cmFuc21pdHMgIkNp
cGhlclRleHQgQiIgdG8gRGV2aWNlLgo+IDExLiBEZXZpY2UgZGVjcnlwdHMgIkNpcGhlclRleHQg
QiIgd2l0aCBEZXZpY2UgcHJpdmF0ZSBrZXksIHJlc3VsdGluZwo+IGluICJQbGFpblRleHQgQyIu
Cj4gMTIuIERldmljZSBjb21wYXJlcyAiUGxhaW5UZXh0IEEiIGFuZCAiUGxhaW5UZXh0IEMiLCBh
bmQgcmVzcG9uZHMgd2l0aAo+IHN1Y2Nlc3Mgb3Igbm9hdXRoLgo+IDEzLiBIb3N0IGNyZWF0ZXMg
YSByYW5kb21seSBnZW5lcmF0ZWQgbWVzc2FnZSwgIlBsYWluVGV4dCBEIi4KPiAxNC4gSG9zdCBl
bmNyeXB0cyAiUGxhaW5UZXh0IEQiIHVzaW5nIERldmljZSBwdWJsaWMga2V5LCBjcmVhdGluZwo+
ICJDaXBoZXJUZXh0IEQiLgo+IDE1LiBIb3N0IHRyYW5zbWl0cyAiQ2lwaGVyVGV4dCBEIiB0byBE
ZXZpY2UuCj4gMTYuIERldmljZSBkZWNyeXB0cyAiQ2lwaGVyVGV4dCBEIiB3aXRoIERldmljZSBw
cml2YXRlIGtleSwgcmVzdWx0aW5nCj4gaW4gIlBsYWluVGV4dCBFIi4KPiAxNy4gRGV2aWNlIGVu
Y3J5cHRzICJQbGFpblRleHQgRSIgdXNpbmcgSG9zdCBwdWJsaWMga2V5LCBjcmVhdGluZwo+ICJD
aXBoZXJUZXh0IEUiLgo+IDE4LiBEZXZpY2UgdHJhbnNtaXRzICJDaXBoZXJUZXh0IEUiIHRvIEhv
c3QuCj4gMTkuIEhvc3QgZGVjcnlwdHMgIkNpcGhlclRleHQgRSIgd2l0aCBIb3N0IHByaXZhdGUg
a2V5LCByZXN1bHRpbmcgaW4KPiAiUGxhaW5UZXh0IEYiLgo+IDIwLiBIb3N0IGNvbXBhcmVzICJQ
bGFpblRleHQgRCIgYW5kICJQbGFpblRleHQgRiIsIGFuZCByZXNwb25kcyB3aXRoCj4gc3VjY2Vz
cyBvciBub2F1dGguCj4gMjEuIEhvc3QgZ2VuZXJhdGVzIHN5bW1ldHJpYyBzZXNzaW9uIGtleSBh
cyAiUGxhaW5UZXh0IEciLCBwYWlycwo+IHNlc3Npb24ga2V5IHdpdGggc29ja2V0Lgo+IDIyLiBI
b3N0IGVuY3J5cHRzICJQbGFpblRleHQgRyIgd2l0aCBEZXZpY2UgcHVibGljIGtleSwgcmVzdWx0
aW5nIGluCj4gIkNpcGhlclRleHQgRyIuCj4gMjMuIEhvc3QgdHJhbnNtaXRzICJDaXBoZXJUZXh0
IEciIHRvIGRldmljZS4KPiAyNC4gRGV2aWNlIGRlY3J5cHRzICJDaXBoZXJUZXh0IEciIHVzaW5n
IERldmljZSBwcml2YXRlIGtleSwgcmVzdWx0aW5nCj4gaW4gIlBsYWluVGV4dCBIIi4KPiAyNS4g
RGV2aWNlIHBhaXJzIHRoZSBzZXNzaW9uIGtleSAoIlBsYWluVGV4dCBIIikgd2l0aCBzb2NrZXQu
Cj4gCj4gQ3VycmVudGx5LCB0aGlzIGhhbmRzaGFrZSBoYXBwZW5zIHdoZW4gYSBuZXcgY29ubmVj
dGlvbiBpcyBjcmVhdGVkIG9uCj4gYW55IHBvcnQgLyBDUG9ydCAoYmUgaXQgQ29udHJvbCwgR1BJ
TywgSTJDLCBTUEksIGV0YykuCj4gCj4gV2hpbGUgSSB1bmRlcnN0YW5kIHRoYXQgdGhpcyBzZWN1
cml0eSBtZWNoYW5pc20gaXMgbm90IG5lYXJseSBhcwo+IHNvcGhpc3RpY2F0ZWQgYXMgdGhhdCBv
ZiBUaHJlYWQsIGZvciBleGFtcGxlLCBpdCdzIGZhaXJseSBlYXN5IHRvCj4gaW1wbGVtZW50IGxv
Y2FsbHkgZm9yIGRldmVsb3BlcnMuCj4gCj4gSG93ZXZlciwgd2Ugd291bGQgdWx0aW1hdGVseSBs
aWtlIHRvIHN1cHBvcnQgbW9yZSB0aGFuIG9uZSBtZXRob2Qgb2YKPiBhdXRoZW50aWNhdGlvbiBh
bmQgZW5jcnlwdGlvbiBpbiBHcmV5YnVzLiBGb3IgdGhlIHZlcnkgYmFzaWMgbWV0aG9kIHdlCj4g
aW1wbGVtZW50ZWQgYWJvdmUsIDUgYWRkaXRpb25hbCBtZXNzYWdlIHByaW1pdGl2ZXMgd2VyZSBy
ZXF1aXJlZDoKPiAKPiBodHRwczovL2dpdGh1Yi5jb20vZnJpZWR0Y28vZ2JyaWRnZS9ibG9iL2Zl
YXR1cmUvdGNwaXAtYmxlLWlwc3AvcGthdXRoLmgjTDMyCj4gCj4gI2RlZmluZSBHQl9QS0FVVEhf
VFlQRV9WRVJTSU9OIDB4N2EKPiAjZGVmaW5lIEdCX1BLQVVUSF9UWVBFX1BVQktFWSAweDdiCj4g
I2RlZmluZSBHQl9QS0FVVEhfVFlQRV9DSEFMTEVOR0UgMHg3Ywo+ICNkZWZpbmUgR0JfUEtBVVRI
X1RZUEVfQ0hBTExFTkdFX1JFU1AgMHg3ZAo+ICNkZWZpbmUgR0JfUEtBVVRIX1RZUEVfU0VTU0lP
Tl9LRVkgMHg3ZQo+IAo+IEZvciBmdWxsIG5lZ290aWF0aW9uIG9mIHRoZSBhdXRoIG1lY2hhbmlz
bSBhbmQgZW5jcnlwdGlvbiBhbGdvcml0aG0KPiAoZS5nLiBPQXV0aDIgYXV0aGVudGljYXRpb24g
KyAzREVTIGVuY3J5cHRpb24pIHdlJ2xsIHByb2JhYmx5IG5lZWQgYQo+IGZldyBtb3JlIG1lc3Nh
Z2UgcHJpbWl0aXZlcywgYW5kIGxpa2VseSBhIG5ldyBtaW5vciB2ZXJzaW9uIChhdCBsZWFzdCkK
PiBmb3IgZWFjaCBDUG9ydCBwcm90b2NvbC4KPiAKPiBJdCBzaG91bGQgYmUgcG9zc2libGUgKGFs
dGhvdWdoIGRpc2NvdXJhZ2VkKSB0byBvcHQgZm9yIGV2ZXJ5dGhpbmcgaW4KPiBwbGFpbnRleHQs
IGJ1dCB0aGF0IHdvdWxkIGFsc28gYmUgdGhlIGRlZmF1bHQgY2FzZSBmb3IgdGhlIENQb3J0Cj4g
cHJvdG9jb2xzIGFzIHRoZXkgZXhpc3QgdG9kYXkuCj4gCj4gSSB3b3VsZCBsb3ZlIHRvIGhlYXIg
c29tZSBpZGVhcyBhYm91dCB0aGlzIGZyb20gd2hvZXZlciBpcyBpbnRlcmVzdGVkLgo+IAo+IENo
ZWVycywKPiAKPiBDCj4gCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpncmV5YnVzLWRldiBtYWlsaW5nIGxpc3QKZ3JleWJ1cy1kZXZAbGlzdHMubGluYXJv
Lm9yZwpodHRwczovL2xpc3RzLmxpbmFyby5vcmcvbWFpbG1hbi9saXN0aW5mby9ncmV5YnVzLWRl
dgo=
