Return-Path: <greybus-dev-bounces+lists+greybus-dev=lfdr.de@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [3.208.193.21])
	by mail.lfdr.de (Postfix) with ESMTPS id 38812665DB2
	for <lists+greybus-dev@lfdr.de>; Wed, 11 Jan 2023 15:25:05 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 486C43EF98
	for <lists+greybus-dev@lfdr.de>; Wed, 11 Jan 2023 14:25:04 +0000 (UTC)
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
	by lists.linaro.org (Postfix) with ESMTPS id BDCA03EF78
	for <greybus-dev@lists.linaro.org>; Wed, 11 Jan 2023 14:24:56 +0000 (UTC)
Authentication-Results: lists.linaro.org;
	dkim=pass header.d=intel.com header.s=Intel header.b="Yo/5oF9R";
	spf=none (lists.linaro.org: domain of ilpo.jarvinen@linux.intel.com has no SPF policy when checking 192.55.52.151) smtp.mailfrom=ilpo.jarvinen@linux.intel.com;
	dmarc=pass (policy=none) header.from=intel.com
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1673447096; x=1704983096;
  h=from:to:cc:subject:date:message-id:in-reply-to:
   references:mime-version:content-transfer-encoding;
  bh=PRO9D6FhTscnYzI0vbvYF4k5EJgW6UJDcQwdeuhGuNE=;
  b=Yo/5oF9RG5GYkJ+Dw45drSNYmqFNh3B7JmHSxvbg6Bkb6OMbGbOCfujU
   g9CKZDMwgsfIEsNnUOQBXW++i/BbOZUkICKgxqC/s7ZfyvAVbvyDSJFKN
   w5CgMocLFqw3jWj/nTrzwddGDdUELvxSHOxrwEBRWvBEKY3DgfhJt5nnw
   a1MZYNvXshfoHxVrUP5slk/B6dXXI4rnzZhqxNq7dAiKS9Io2bjcgibPW
   3dZ6DSCtzJwfDRd1xMj2atmxSF9aqARN7oHUzHCBBPQ+lMB0TI4z9UgsU
   K8Ks66M5FIp8FK/6LDg6FuF0sR3Y0kRCq1OTY0tttZI4H6tGXtkAuoHr5
   w==;
X-IronPort-AV: E=McAfee;i="6500,9779,10586"; a="303793769"
X-IronPort-AV: E=Sophos;i="5.96,317,1665471600";
   d="scan'208";a="303793769"
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 11 Jan 2023 06:24:55 -0800
X-IronPort-AV: E=McAfee;i="6500,9779,10586"; a="607382066"
X-IronPort-AV: E=Sophos;i="5.96,317,1665471600";
   d="scan'208";a="607382066"
Received: from mihaiana-mobl1.ger.corp.intel.com (HELO ijarvine-MOBL2.ger.corp.intel.com) ([10.251.222.62])
  by orsmga003-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 11 Jan 2023 06:24:47 -0800
From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
To: linux-serial@vger.kernel.org,
	Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	Jiri Slaby <jirislaby@kernel.org>,
	Johan Hovold <johan@kernel.org>,
	=?UTF-8?q?Samuel=20Iglesias=20Gons=C3=A1lvez?= <siglesias@igalia.com>,
	Rodolfo Giometti <giometti@enneenne.com>,
	Arnd Bergmann <arnd@arndb.de>,
	Ulf Hansson <ulf.hansson@linaro.org>,
	David Lin <dtwlin@gmail.com>,
	Alex Elder <elder@kernel.org>,
	Shawn Guo <shawnguo@kernel.org>,
	Sascha Hauer <s.hauer@pengutronix.de>,
	Pengutronix Kernel Team <kernel@pengutronix.de>,
	Fabio Estevam <festevam@gmail.com>,
	NXP Linux Team <linux-imx@nxp.com>,
	linux-kernel@vger.kernel.org,
	linux-mmc@vger.kernel.org,
	greybus-dev@lists.linaro.org,
	linux-staging@lists.linux.dev,
	linuxppc-dev@lists.ozlabs.org,
	linux-arm-kernel@lists.infradead.org,
	linux-usb@vger.kernel.org
Date: Wed, 11 Jan 2023 16:23:29 +0200
Message-Id: <20230111142331.34518-12-ilpo.jarvinen@linux.intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20230111142331.34518-1-ilpo.jarvinen@linux.intel.com>
References: <20230111142331.34518-1-ilpo.jarvinen@linux.intel.com>
MIME-Version: 1.0
X-Spamd-Result: default: False [-5.50 / 15.00];
	DWL_DNSWL_HI(-3.50)[intel.com:dkim];
	BAYES_HAM(-3.00)[100.00%];
	SUSPICIOUS_RECIPS(1.50)[];
	MID_CONTAINS_FROM(1.00)[];
	RCVD_DKIM_ARC_DNSWL_MED(-0.50)[];
	DMARC_POLICY_ALLOW(-0.50)[intel.com,none];
	RCVD_IN_DNSWL_MED(-0.20)[192.55.52.151:from];
	R_DKIM_ALLOW(-0.20)[intel.com:s=Intel];
	MIME_GOOD(-0.10)[text/plain];
	RCVD_TLS_LAST(0.00)[];
	FREEMAIL_TO(0.00)[vger.kernel.org,linuxfoundation.org,kernel.org,igalia.com,enneenne.com,arndb.de,linaro.org,gmail.com,pengutronix.de,nxp.com,lists.linaro.org,lists.linux.dev,lists.ozlabs.org,lists.infradead.org];
	ASN(0.00)[asn:4983, ipnet:192.55.52.0/24, country:US];
	FROM_EQ_ENVFROM(0.00)[];
	R_SPF_NA(0.00)[no SPF record];
	MIME_TRACE(0.00)[0:+];
	TO_DN_SOME(0.00)[];
	RCPT_COUNT_TWELVE(0.00)[23];
	RCVD_COUNT_THREE(0.00)[3];
	NEURAL_HAM(-0.00)[-1.000];
	TO_MATCH_ENVRCPT_SOME(0.00)[];
	FROM_HAS_DN(0.00)[];
	DKIM_TRACE(0.00)[intel.com:+];
	ARC_NA(0.00)[]
X-Rspamd-Action: no action
X-Rspamd-Server: lists.linaro.org
X-Rspamd-Queue-Id: BDCA03EF78
X-Spamd-Bar: -----
Message-ID-Hash: TSAQRXYGM3LO3FCSFZGQDSKZDTIJXIAB
X-Message-ID-Hash: TSAQRXYGM3LO3FCSFZGQDSKZDTIJXIAB
X-MailFrom: ilpo.jarvinen@linux.intel.com
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
X-Mailman-Version: 3.3.5
Precedence: list
Subject: [greybus-dev] [PATCH v3 11/13] tty/serial: Call ->dtr_rts() parameter active consistently
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
Archived-At: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/message/TSAQRXYGM3LO3FCSFZGQDSKZDTIJXIAB/>
List-Archive: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Owner: <mailto:greybus-dev-owner@lists.linaro.org>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Subscribe: <mailto:greybus-dev-join@lists.linaro.org>
List-Unsubscribe: <mailto:greybus-dev-leave@lists.linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

Q29udmVydCB2YXJpb3VzIHBhcmFtZXRlciBuYW1lcyBmb3IgLT5kdHJfcnRzKCkgYW5kIHJlbGF0
ZWQgZnVuY3Rpb25zDQpmcm9tIG9ub2ZmLCBvbiwgYW5kIHJhaXNlIHRvIGFjdGl2ZS4NCg0KUmV2
aWV3ZWQtYnk6IEppcmkgU2xhYnkgPGppcmlzbGFieUBrZXJuZWwub3JnPg0KU2lnbmVkLW9mZi1i
eTogSWxwbyBKw6RydmluZW4gPGlscG8uamFydmluZW5AbGludXguaW50ZWwuY29tPg0KLS0tDQog
ZHJpdmVycy9jaGFyL3BjbWNpYS9zeW5jbGlua19jcy5jIHwgNiArKystLS0NCiBkcml2ZXJzL21t
Yy9jb3JlL3NkaW9fdWFydC5jICAgICAgfCA2ICsrKy0tLQ0KIGRyaXZlcnMvc3RhZ2luZy9ncmV5
YnVzL3VhcnQuYyAgICB8IDQgKystLQ0KIGRyaXZlcnMvdHR5L2FtaXNlcmlhbC5jICAgICAgICAg
ICB8IDQgKystLQ0KIGRyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5oICAgICB8IDIgKy0NCiBk
cml2ZXJzL3R0eS9odmMvaHZjX2l1Y3YuYyAgICAgICAgfCA2ICsrKy0tLQ0KIGRyaXZlcnMvdHR5
L214c2VyLmMgICAgICAgICAgICAgICB8IDQgKystLQ0KIGRyaXZlcnMvdHR5L25fZ3NtLmMgICAg
ICAgICAgICAgICB8IDQgKystLQ0KIGRyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxfY29yZS5jICB8
IDggKysrKy0tLS0NCiBkcml2ZXJzL3R0eS9zeW5jbGlua19ndC5jICAgICAgICAgfCA0ICsrLS0N
CiBpbmNsdWRlL2xpbnV4L3R0eV9wb3J0LmggICAgICAgICAgfCA0ICsrLS0NCiBpbmNsdWRlL2xp
bnV4L3VzYi9zZXJpYWwuaCAgICAgICAgfCAyICstDQogMTIgZmlsZXMgY2hhbmdlZCwgMjcgaW5z
ZXJ0aW9ucygrKSwgMjcgZGVsZXRpb25zKC0pDQoNCmRpZmYgLS1naXQgYS9kcml2ZXJzL2NoYXIv
cGNtY2lhL3N5bmNsaW5rX2NzLmMgYi9kcml2ZXJzL2NoYXIvcGNtY2lhL3N5bmNsaW5rX2NzLmMN
CmluZGV4IDQ2YTBiNTg2ZDIzNC4uMTU3N2ViYTZmZTBlIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9j
aGFyL3BjbWNpYS9zeW5jbGlua19jcy5jDQorKysgYi9kcml2ZXJzL2NoYXIvcGNtY2lhL3N5bmNs
aW5rX2NzLmMNCkBAIC0zNzgsNyArMzc4LDcgQEAgc3RhdGljIHZvaWQgYXN5bmNfbW9kZShNR1NM
UENfSU5GTyAqaW5mbyk7DQogc3RhdGljIHZvaWQgdHhfdGltZW91dChzdHJ1Y3QgdGltZXJfbGlz
dCAqdCk7DQogDQogc3RhdGljIGJvb2wgY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpw
b3J0KTsNCi1zdGF0aWMgdm9pZCBkdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBv
bm9mZik7DQorc3RhdGljIHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wg
YWN0aXZlKTsNCiANCiAjaWYgU1lOQ0xJTktfR0VORVJJQ19IRExDDQogI2RlZmluZSBkZXZfdG9f
cG9ydChEKSAoZGV2X3RvX2hkbGMoRCktPnByaXYpDQpAQCAtMjQ0MiwxMyArMjQ0MiwxMyBAQCBz
dGF0aWMgYm9vbCBjYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVy
biBpbmZvLT5zZXJpYWxfc2lnbmFscyAmIFNlcmlhbFNpZ25hbF9EQ0Q7DQogfQ0KIA0KLXN0YXRp
YyB2b2lkIGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9ub2ZmKQ0KK3N0YXRp
YyB2b2lkIGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIGFjdGl2ZSkNCiB7DQog
CU1HU0xQQ19JTkZPICppbmZvID0gY29udGFpbmVyX29mKHBvcnQsIE1HU0xQQ19JTkZPLCBwb3J0
KTsNCiAJdW5zaWduZWQgbG9uZyBmbGFnczsNCiANCiAJc3Bpbl9sb2NrX2lycXNhdmUoJmluZm8t
PmxvY2ssIGZsYWdzKTsNCi0JaWYgKG9ub2ZmKQ0KKwlpZiAoYWN0aXZlKQ0KIAkJaW5mby0+c2Vy
aWFsX3NpZ25hbHMgfD0gU2VyaWFsU2lnbmFsX1JUUyB8IFNlcmlhbFNpZ25hbF9EVFI7DQogCWVs
c2UNCiAJCWluZm8tPnNlcmlhbF9zaWduYWxzICY9IH4oU2VyaWFsU2lnbmFsX1JUUyB8IFNlcmlh
bFNpZ25hbF9EVFIpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMg
Yi9kcml2ZXJzL21tYy9jb3JlL3NkaW9fdWFydC5jDQppbmRleCBjNmI0YjJiMmE0YjIuLjUwNTM2
ZmU1OWYxYSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMNCisrKyBi
L2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMNCkBAIC01NDIsMjAgKzU0MiwyMCBAQCBzdGF0
aWMgYm9vbCB1YXJ0X2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqdHBvcnQpDQogLyoq
DQogICoJdWFydF9kdHJfcnRzCQktCSBwb3J0IGhlbHBlciB0byBzZXQgdWFydCBzaWduYWxzDQog
ICoJQHRwb3J0OiB0dHkgcG9ydCB0byBiZSB1cGRhdGVkDQotICoJQG9ub2ZmOiBzZXQgdG8gdHVy
biBvbiBEVFIvUlRTDQorICoJQGFjdGl2ZTogc2V0IHRvIHR1cm4gb24gRFRSL1JUUw0KICAqDQog
ICoJQ2FsbGVkIGJ5IHRoZSB0dHkgcG9ydCBoZWxwZXJzIHdoZW4gdGhlIG1vZGVtIHNpZ25hbHMg
bmVlZCB0byBiZQ0KICAqCWFkanVzdGVkIGR1cmluZyBhbiBvcGVuLCBjbG9zZSBhbmQgaGFuZ3Vw
Lg0KICAqLw0KIA0KLXN0YXRpYyB2b2lkIHVhcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnRw
b3J0LCBib29sIG9ub2ZmKQ0KK3N0YXRpYyB2b2lkIHVhcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3Bv
cnQgKnRwb3J0LCBib29sIGFjdGl2ZSkNCiB7DQogCXN0cnVjdCBzZGlvX3VhcnRfcG9ydCAqcG9y
dCA9DQogCQkJY29udGFpbmVyX29mKHRwb3J0LCBzdHJ1Y3Qgc2Rpb191YXJ0X3BvcnQsIHBvcnQp
Ow0KIAlpbnQgcmV0ID0gc2Rpb191YXJ0X2NsYWltX2Z1bmMocG9ydCk7DQogCWlmIChyZXQpDQog
CQlyZXR1cm47DQotCWlmICghb25vZmYpDQorCWlmICghYWN0aXZlKQ0KIAkJc2Rpb191YXJ0X2Ns
ZWFyX21jdHJsKHBvcnQsIFRJT0NNX0RUUiB8IFRJT0NNX1JUUyk7DQogCWVsc2UNCiAJCXNkaW9f
dWFydF9zZXRfbWN0cmwocG9ydCwgVElPQ01fRFRSIHwgVElPQ01fUlRTKTsNCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy91YXJ0LmMgYi9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1
cy91YXJ0LmMNCmluZGV4IDkyZDQ5NzQwZDVhNC4uMjBhMzQ1OTk4NTlmIDEwMDY0NA0KLS0tIGEv
ZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvdWFydC5jDQorKysgYi9kcml2ZXJzL3N0YWdpbmcvZ3Jl
eWJ1cy91YXJ0LmMNCkBAIC03MDEsNyArNzAxLDcgQEAgc3RhdGljIGludCBnYl90dHlfaW9jdGwo
c3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgdW5zaWduZWQgaW50IGNtZCwNCiAJcmV0dXJuIC1FTk9J
T0NUTENNRDsNCiB9DQogDQotc3RhdGljIHZvaWQgZ2JfdHR5X2R0cl9ydHMoc3RydWN0IHR0eV9w
b3J0ICpwb3J0LCBib29sIG9uKQ0KK3N0YXRpYyB2b2lkIGdiX3R0eV9kdHJfcnRzKHN0cnVjdCB0
dHlfcG9ydCAqcG9ydCwgYm9vbCBhY3RpdmUpDQogew0KIAlzdHJ1Y3QgZ2JfdHR5ICpnYl90dHk7
DQogCXU4IG5ld2N0cmw7DQpAQCAtNzA5LDcgKzcwOSw3IEBAIHN0YXRpYyB2b2lkIGdiX3R0eV9k
dHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBvbikNCiAJZ2JfdHR5ID0gY29udGFp
bmVyX29mKHBvcnQsIHN0cnVjdCBnYl90dHksIHBvcnQpOw0KIAluZXdjdHJsID0gZ2JfdHR5LT5j
dHJsb3V0Ow0KIA0KLQlpZiAob24pDQorCWlmIChhY3RpdmUpDQogCQluZXdjdHJsIHw9IChHQl9V
QVJUX0NUUkxfRFRSIHwgR0JfVUFSVF9DVFJMX1JUUyk7DQogCWVsc2UNCiAJCW5ld2N0cmwgJj0g
fihHQl9VQVJUX0NUUkxfRFRSIHwgR0JfVUFSVF9DVFJMX1JUUyk7DQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy90dHkvYW1pc2VyaWFsLmMgYi9kcml2ZXJzL3R0eS9hbWlzZXJpYWwuYw0KaW5kZXggMjlk
NGM1NTRmNmI4Li5kNzUxNWQ2MTY1OWUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS9hbWlzZXJp
YWwuYw0KKysrIGIvZHJpdmVycy90dHkvYW1pc2VyaWFsLmMNCkBAIC0xNDU5LDEzICsxNDU5LDEz
IEBAIHN0YXRpYyBib29sIGFtaWdhX2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqcG9y
dCkNCiAJcmV0dXJuICEoY2lhYi5wcmEgJiBTRVJfRENEKTsNCiB9DQogDQotc3RhdGljIHZvaWQg
YW1pZ2FfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgcmFpc2UpDQorc3RhdGlj
IHZvaWQgYW1pZ2FfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgYWN0aXZlKQ0K
IHsNCiAJc3RydWN0IHNlcmlhbF9zdGF0ZSAqaW5mbyA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1
Y3Qgc2VyaWFsX3N0YXRlLA0KIAkJCXRwb3J0KTsNCiAJdW5zaWduZWQgbG9uZyBmbGFnczsNCiAN
Ci0JaWYgKHJhaXNlKQ0KKwlpZiAoYWN0aXZlKQ0KIAkJaW5mby0+TUNSIHw9IFNFUl9EVFJ8U0VS
X1JUUzsNCiAJZWxzZQ0KIAkJaW5mby0+TUNSICY9IH4oU0VSX0RUUnxTRVJfUlRTKTsNCmRpZmYg
LS1naXQgYS9kcml2ZXJzL3R0eS9odmMvaHZjX2NvbnNvbGUuaCBiL2RyaXZlcnMvdHR5L2h2Yy9o
dmNfY29uc29sZS5oDQppbmRleCA2ZDM0MjhiZjg2OGYuLjk2NjhmODIxZGIwMSAxMDA2NDQNCi0t
LSBhL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5oDQorKysgYi9kcml2ZXJzL3R0eS9odmMv
aHZjX2NvbnNvbGUuaA0KQEAgLTY2LDcgKzY2LDcgQEAgc3RydWN0IGh2X29wcyB7DQogCWludCAo
KnRpb2Ntc2V0KShzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAsIHVuc2lnbmVkIGludCBzZXQsIHVuc2ln
bmVkIGludCBjbGVhcik7DQogDQogCS8qIENhbGxiYWNrcyB0byBoYW5kbGUgdHR5IHBvcnRzICov
DQotCXZvaWQgKCpkdHJfcnRzKShzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAsIGJvb2wgcmFpc2UpOw0K
Kwl2b2lkICgqZHRyX3J0cykoc3RydWN0IGh2Y19zdHJ1Y3QgKmhwLCBib29sIGFjdGl2ZSk7DQog
fTsNCiANCiAvKiBSZWdpc3RlciBhIHZ0ZXJtIGFuZCBhIHNsb3QgaW5kZXggZm9yIHVzZSBhcyBh
IGNvbnNvbGUgKGNvbnNvbGVfaW5pdCkgKi8NCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9odmMv
aHZjX2l1Y3YuYyBiL2RyaXZlcnMvdHR5L2h2Yy9odmNfaXVjdi5jDQppbmRleCBmZTg2MmE2ODgy
ZDYuLjU0M2YzNWRkZjUyMyAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdHR5L2h2Yy9odmNfaXVjdi5j
DQorKysgYi9kcml2ZXJzL3R0eS9odmMvaHZjX2l1Y3YuYw0KQEAgLTY1OCwxMyArNjU4LDEzIEBA
IHN0YXRpYyB2b2lkIGh2Y19pdWN2X25vdGlmaWVyX2hhbmd1cChzdHJ1Y3QgaHZjX3N0cnVjdCAq
aHAsIGludCBpZCkNCiAvKioNCiAgKiBodmNfaXVjdl9kdHJfcnRzKCkgLSBIVkMgbm90aWZpZXIg
Zm9yIGhhbmRsaW5nIERUUi9SVFMNCiAgKiBAaHA6CQlQb2ludGVyIHRoZSBIVkMgZGV2aWNlIChz
dHJ1Y3QgaHZjX3N0cnVjdCkNCi0gKiBAcmFpc2U6CVRydWUgdG8gcmFpc2Ugb3IgZmFsc2UgdG8g
bG93ZXIgRFRSL1JUUyBsaW5lcw0KKyAqIEBhY3RpdmU6CVRydWUgdG8gcmFpc2Ugb3IgZmFsc2Ug
dG8gbG93ZXIgRFRSL1JUUyBsaW5lcw0KICAqDQogICogVGhpcyByb3V0aW5lIG5vdGlmaWVzIHRo
ZSBIVkMgYmFjay1lbmQgdG8gcmFpc2Ugb3IgbG93ZXIgRFRSL1JUUw0KICAqIGxpbmVzLiAgUmFp
c2luZyBEVFIvUlRTIGlzIGlnbm9yZWQuICBMb3dlcmluZyBEVFIvUlRTIGluZGljYXRlcyB0bw0K
ICAqIGRyb3AgdGhlIElVQ1YgY29ubmVjdGlvbiAoc2ltaWxhciB0byBoYW5nIHVwIHRoZSBtb2Rl
bSkuDQogICovDQotc3RhdGljIHZvaWQgaHZjX2l1Y3ZfZHRyX3J0cyhzdHJ1Y3QgaHZjX3N0cnVj
dCAqaHAsIGJvb2wgcmFpc2UpDQorc3RhdGljIHZvaWQgaHZjX2l1Y3ZfZHRyX3J0cyhzdHJ1Y3Qg
aHZjX3N0cnVjdCAqaHAsIGJvb2wgYWN0aXZlKQ0KIHsNCiAJc3RydWN0IGh2Y19pdWN2X3ByaXZh
dGUgKnByaXY7DQogCXN0cnVjdCBpdWN2X3BhdGggICAgICAgICpwYXRoOw0KQEAgLTY3Miw3ICs2
NzIsNyBAQCBzdGF0aWMgdm9pZCBodmNfaXVjdl9kdHJfcnRzKHN0cnVjdCBodmNfc3RydWN0ICpo
cCwgYm9vbCByYWlzZSkNCiAJLyogUmFpc2luZyB0aGUgRFRSL1JUUyBpcyBpZ25vcmVkIGFzIElV
Q1YgY29ubmVjdGlvbnMgY2FuIGJlDQogCSAqIGVzdGFibGlzaGVkIGF0IGFueSB0aW1lcy4NCiAJ
ICovDQotCWlmIChyYWlzZSkNCisJaWYgKGFjdGl2ZSkNCiAJCXJldHVybjsNCiANCiAJcHJpdiA9
IGh2Y19pdWN2X2dldF9wcml2YXRlKGhwLT52dGVybW5vKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJz
L3R0eS9teHNlci5jIGIvZHJpdmVycy90dHkvbXhzZXIuYw0KaW5kZXggZDRmYjExZTM5YmIxLi5l
ZjMxMTZlODc5NzUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS9teHNlci5jDQorKysgYi9kcml2
ZXJzL3R0eS9teHNlci5jDQpAQCAtNDY1LDcgKzQ2NSw3IEBAIHN0YXRpYyBib29sIG14c2VyX2Nh
cnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCkNCiAJcmV0dXJuIGluYihtcC0+aW9h
ZGRyICsgVUFSVF9NU1IpICYgVUFSVF9NU1JfRENEOw0KIH0NCiANCi1zdGF0aWMgdm9pZCBteHNl
cl9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBvbikNCitzdGF0aWMgdm9pZCBt
eHNlcl9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBhY3RpdmUpDQogew0KIAlz
dHJ1Y3QgbXhzZXJfcG9ydCAqbXAgPSBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IG14c2VyX3Bv
cnQsIHBvcnQpOw0KIAl1bnNpZ25lZCBsb25nIGZsYWdzOw0KQEAgLTQ3Myw3ICs0NzMsNyBAQCBz
dGF0aWMgdm9pZCBteHNlcl9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBvbikN
CiANCiAJc3Bpbl9sb2NrX2lycXNhdmUoJm1wLT5zbG9jaywgZmxhZ3MpOw0KIAltY3IgPSBpbmIo
bXAtPmlvYWRkciArIFVBUlRfTUNSKTsNCi0JaWYgKG9uKQ0KKwlpZiAoYWN0aXZlKQ0KIAkJbWNy
IHw9IFVBUlRfTUNSX0RUUiB8IFVBUlRfTUNSX1JUUzsNCiAJZWxzZQ0KIAkJbWNyICY9IH4oVUFS
VF9NQ1JfRFRSIHwgVUFSVF9NQ1JfUlRTKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9uX2dz
bS5jIGIvZHJpdmVycy90dHkvbl9nc20uYw0KaW5kZXggOGRkMGQ2NDQxYzQyLi40ZjI5YjAwZjI2
NDUgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS9uX2dzbS5jDQorKysgYi9kcml2ZXJzL3R0eS9u
X2dzbS5jDQpAQCAtMzc5MiwxMSArMzc5MiwxMSBAQCBzdGF0aWMgYm9vbCBnc21fY2Fycmllcl9y
YWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gZGxjaS0+bW9kZW1fcnggJiBU
SU9DTV9DRDsNCiB9DQogDQotc3RhdGljIHZvaWQgZ3NtX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0
ICpwb3J0LCBib29sIG9ub2ZmKQ0KK3N0YXRpYyB2b2lkIGdzbV9kdHJfcnRzKHN0cnVjdCB0dHlf
cG9ydCAqcG9ydCwgYm9vbCBhY3RpdmUpDQogew0KIAlzdHJ1Y3QgZ3NtX2RsY2kgKmRsY2kgPSBj
b250YWluZXJfb2YocG9ydCwgc3RydWN0IGdzbV9kbGNpLCBwb3J0KTsNCiAJdW5zaWduZWQgaW50
IG1vZGVtX3R4ID0gZGxjaS0+bW9kZW1fdHg7DQotCWlmIChvbm9mZikNCisJaWYgKGFjdGl2ZSkN
CiAJCW1vZGVtX3R4IHw9IFRJT0NNX0RUUiB8IFRJT0NNX1JUUzsNCiAJZWxzZQ0KIAkJbW9kZW1f
dHggJj0gfihUSU9DTV9EVFIgfCBUSU9DTV9SVFMpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5
L3NlcmlhbC9zZXJpYWxfY29yZS5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMN
CmluZGV4IGI4ZmZmNjY3ZDRmMC4uZGE0ZTRlOGEyYjUwIDEwMDY0NA0KLS0tIGEvZHJpdmVycy90
dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMNCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxf
Y29yZS5jDQpAQCAtMTY5LDkgKzE2OSw5IEBAIHVhcnRfdXBkYXRlX21jdHJsKHN0cnVjdCB1YXJ0
X3BvcnQgKnBvcnQsIHVuc2lnbmVkIGludCBzZXQsIHVuc2lnbmVkIGludCBjbGVhcikNCiAjZGVm
aW5lIHVhcnRfc2V0X21jdHJsKHBvcnQsIHNldCkJdWFydF91cGRhdGVfbWN0cmwocG9ydCwgc2V0
LCAwKQ0KICNkZWZpbmUgdWFydF9jbGVhcl9tY3RybChwb3J0LCBjbGVhcikJdWFydF91cGRhdGVf
bWN0cmwocG9ydCwgMCwgY2xlYXIpDQogDQotc3RhdGljIHZvaWQgdWFydF9wb3J0X2R0cl9ydHMo
c3RydWN0IHVhcnRfcG9ydCAqdXBvcnQsIGJvb2wgcmFpc2UpDQorc3RhdGljIHZvaWQgdWFydF9w
b3J0X2R0cl9ydHMoc3RydWN0IHVhcnRfcG9ydCAqdXBvcnQsIGJvb2wgYWN0aXZlKQ0KIHsNCi0J
aWYgKHJhaXNlKQ0KKwlpZiAoYWN0aXZlKQ0KIAkJdWFydF9zZXRfbWN0cmwodXBvcnQsIFRJT0NN
X0RUUiB8IFRJT0NNX1JUUyk7DQogCWVsc2UNCiAJCXVhcnRfY2xlYXJfbWN0cmwodXBvcnQsIFRJ
T0NNX0RUUiB8IFRJT0NNX1JUUyk7DQpAQCAtMTg4NSw3ICsxODg1LDcgQEAgc3RhdGljIGJvb2wg
dWFydF9jYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVybiBtY3Ry
bCAmIFRJT0NNX0NBUjsNCiB9DQogDQotc3RhdGljIHZvaWQgdWFydF9kdHJfcnRzKHN0cnVjdCB0
dHlfcG9ydCAqcG9ydCwgYm9vbCByYWlzZSkNCitzdGF0aWMgdm9pZCB1YXJ0X2R0cl9ydHMoc3Ry
dWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIGFjdGl2ZSkNCiB7DQogCXN0cnVjdCB1YXJ0X3N0YXRl
ICpzdGF0ZSA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3QgdWFydF9zdGF0ZSwgcG9ydCk7DQog
CXN0cnVjdCB1YXJ0X3BvcnQgKnVwb3J0Ow0KQEAgLTE4OTMsNyArMTg5Myw3IEBAIHN0YXRpYyB2
b2lkIHVhcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgcmFpc2UpDQogCXVw
b3J0ID0gdWFydF9wb3J0X3JlZihzdGF0ZSk7DQogCWlmICghdXBvcnQpDQogCQlyZXR1cm47DQot
CXVhcnRfcG9ydF9kdHJfcnRzKHVwb3J0LCByYWlzZSk7DQorCXVhcnRfcG9ydF9kdHJfcnRzKHVw
b3J0LCBhY3RpdmUpOw0KIAl1YXJ0X3BvcnRfZGVyZWYodXBvcnQpOw0KIH0NCiANCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3R0eS9zeW5jbGlua19ndC5jIGIvZHJpdmVycy90dHkvc3luY2xpbmtfZ3Qu
Yw0KaW5kZXggMmI3ODYyNjVjZTdiLi4zM2YyNThkNmZlZjkgMTAwNjQ0DQotLS0gYS9kcml2ZXJz
L3R0eS9zeW5jbGlua19ndC5jDQorKysgYi9kcml2ZXJzL3R0eS9zeW5jbGlua19ndC5jDQpAQCAt
MzEzOCwxMyArMzEzOCwxMyBAQCBzdGF0aWMgYm9vbCBjYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5
X3BvcnQgKnBvcnQpDQogCXJldHVybiBpbmZvLT5zaWduYWxzICYgU2VyaWFsU2lnbmFsX0RDRDsN
CiB9DQogDQotc3RhdGljIHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wg
b24pDQorc3RhdGljIHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgYWN0
aXZlKQ0KIHsNCiAJdW5zaWduZWQgbG9uZyBmbGFnczsNCiAJc3RydWN0IHNsZ3RfaW5mbyAqaW5m
byA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3Qgc2xndF9pbmZvLCBwb3J0KTsNCiANCiAJc3Bp
bl9sb2NrX2lycXNhdmUoJmluZm8tPmxvY2ssZmxhZ3MpOw0KLQlpZiAob24pDQorCWlmIChhY3Rp
dmUpDQogCQlpbmZvLT5zaWduYWxzIHw9IFNlcmlhbFNpZ25hbF9SVFMgfCBTZXJpYWxTaWduYWxf
RFRSOw0KIAllbHNlDQogCQlpbmZvLT5zaWduYWxzICY9IH4oU2VyaWFsU2lnbmFsX1JUUyB8IFNl
cmlhbFNpZ25hbF9EVFIpOw0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvdHR5X3BvcnQuaCBi
L2luY2x1ZGUvbGludXgvdHR5X3BvcnQuaA0KaW5kZXggYzQ0ZTQ4OWRlMGZmLi5lZGY2ODVhMjRm
N2MgMTAwNjQ0DQotLS0gYS9pbmNsdWRlL2xpbnV4L3R0eV9wb3J0LmgNCisrKyBiL2luY2x1ZGUv
bGludXgvdHR5X3BvcnQuaA0KQEAgLTE2LDcgKzE2LDcgQEAgc3RydWN0IHR0eV9zdHJ1Y3Q7DQog
LyoqDQogICogc3RydWN0IHR0eV9wb3J0X29wZXJhdGlvbnMgLS0gb3BlcmF0aW9ucyBvbiB0dHlf
cG9ydA0KICAqIEBjYXJyaWVyX3JhaXNlZDogcmV0dXJuIHRydWUgaWYgdGhlIGNhcnJpZXIgaXMg
cmFpc2VkIG9uIEBwb3J0DQotICogQGR0cl9ydHM6IHJhaXNlIHRoZSBEVFIgbGluZSBpZiBAcmFp
c2UgaXMgdHJ1ZSwgb3RoZXJ3aXNlIGxvd2VyIERUUg0KKyAqIEBkdHJfcnRzOiByYWlzZSB0aGUg
RFRSIGxpbmUgaWYgQGFjdGl2ZSBpcyB0cnVlLCBvdGhlcndpc2UgbG93ZXIgRFRSDQogICogQHNo
dXRkb3duOiBjYWxsZWQgd2hlbiB0aGUgbGFzdCBjbG9zZSBjb21wbGV0ZXMgb3IgYSBoYW5ndXAg
ZmluaXNoZXMgSUZGIHRoZQ0KICAqCXBvcnQgd2FzIGluaXRpYWxpemVkLiBEbyBub3QgdXNlIHRv
IGZyZWUgcmVzb3VyY2VzLiBUdXJuIG9mZiB0aGUgZGV2aWNlDQogICoJb25seS4gQ2FsbGVkIHVu
ZGVyIHRoZSBwb3J0IG11dGV4IHRvIHNlcmlhbGl6ZSBhZ2FpbnN0IEBhY3RpdmF0ZSBhbmQNCkBA
IC0zMiw3ICszMiw3IEBAIHN0cnVjdCB0dHlfc3RydWN0Ow0KICAqLw0KIHN0cnVjdCB0dHlfcG9y
dF9vcGVyYXRpb25zIHsNCiAJYm9vbCAoKmNhcnJpZXJfcmFpc2VkKShzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQpOw0KLQl2b2lkICgqZHRyX3J0cykoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIHJh
aXNlKTsNCisJdm9pZCAoKmR0cl9ydHMpKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBhY3Rp
dmUpOw0KIAl2b2lkICgqc2h1dGRvd24pKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCk7DQogCWludCAo
KmFjdGl2YXRlKShzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIHN0cnVjdCB0dHlfc3RydWN0ICp0dHkp
Ow0KIAl2b2lkICgqZGVzdHJ1Y3QpKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCk7DQpkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC91c2Ivc2VyaWFsLmggYi9pbmNsdWRlL2xpbnV4L3VzYi9zZXJpYWwu
aA0KaW5kZXggYmFkMzQzYzVlOGE3Li4zM2FmZDlmM2ViYmUgMTAwNjQ0DQotLS0gYS9pbmNsdWRl
L2xpbnV4L3VzYi9zZXJpYWwuaA0KKysrIGIvaW5jbHVkZS9saW51eC91c2Ivc2VyaWFsLmgNCkBA
IC0yOTIsNyArMjkyLDcgQEAgc3RydWN0IHVzYl9zZXJpYWxfZHJpdmVyIHsNCiAJCQlzdHJ1Y3Qg
c2VyaWFsX2ljb3VudGVyX3N0cnVjdCAqaWNvdW50KTsNCiAJLyogQ2FsbGVkIGJ5IHRoZSB0dHkg
bGF5ZXIgZm9yIHBvcnQgbGV2ZWwgd29yay4gVGhlcmUgbWF5IG9yIG1heSBub3QNCiAJICAgYmUg
YW4gYXR0YWNoZWQgdHR5IGF0IHRoaXMgcG9pbnQgKi8NCi0Jdm9pZCAoKmR0cl9ydHMpKHN0cnVj
dCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pOw0KKwl2b2lkICgqZHRyX3J0cykoc3Ry
dWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgYm9vbCBhY3RpdmUpOw0KIAlib29sICgqY2Fycmll
cl9yYWlzZWQpKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQpOw0KIAkvKiBDYWxsZWQgYnkg
dGhlIHVzYiBzZXJpYWwgaG9va3MgdG8gYWxsb3cgdGhlIHVzZXIgdG8gcmV3b3JrIHRoZQ0KIAkg
ICB0ZXJtaW9zIHN0YXRlICovDQotLSANCjIuMzAuMg0KDQpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpncmV5YnVzLWRldiBtYWlsaW5nIGxpc3QgLS0gZ3Jl
eWJ1cy1kZXZAbGlzdHMubGluYXJvLm9yZwpUbyB1bnN1YnNjcmliZSBzZW5kIGFuIGVtYWlsIHRv
IGdyZXlidXMtZGV2LWxlYXZlQGxpc3RzLmxpbmFyby5vcmcK
