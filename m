Return-Path: <greybus-dev-bounces+lists+greybus-dev=lfdr.de@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [3.208.193.21])
	by mail.lfdr.de (Postfix) with ESMTPS id 37E9866D93D
	for <lists+greybus-dev@lfdr.de>; Tue, 17 Jan 2023 10:05:27 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id E08D73EF35
	for <lists+greybus-dev@lfdr.de>; Tue, 17 Jan 2023 09:05:25 +0000 (UTC)
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
	by lists.linaro.org (Postfix) with ESMTPS id 320AF3EF35
	for <greybus-dev@lists.linaro.org>; Tue, 17 Jan 2023 09:05:17 +0000 (UTC)
Authentication-Results: lists.linaro.org;
	dkim=pass header.d=intel.com header.s=Intel header.b=DWTgEtWk;
	spf=none (lists.linaro.org: domain of ilpo.jarvinen@linux.intel.com has no SPF policy when checking 192.55.52.115) smtp.mailfrom=ilpo.jarvinen@linux.intel.com;
	dmarc=pass (policy=none) header.from=intel.com
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1673946317; x=1705482317;
  h=from:to:cc:subject:date:message-id:in-reply-to:
   references:mime-version:content-transfer-encoding;
  bh=mc4IIvtsUqhAI5kkpaTnZtGUtVo9P7s6TINo203YwNY=;
  b=DWTgEtWkj10EdLRDxk8y3/NU/NAFV7+RiedAhWkBXvuZG/dSNtXvTwnj
   edb+EGHq4HSpn3mNnFgZ5rK4PayydJmKyV34d+VUBGRDxzKfGF6eCbXT6
   g4MVUj/2M09DGQPvXOWtQzV8h6LTVZlXnhwqym0GARqlzQIAsLaioR2wj
   EVx4rhhRr8nG4zLOHfDilMAhUSymA0u19j5pYdYqYeufLF0DP0o972E3d
   uXHqvWNar4CiW6ZNmo4+uRcEm6q+tItvuLs3MFOmPnZA66R0wBdpZBAOj
   gzxiQcVZSjs0D7oSCWUm79C7JaCGKKODpTM1SMUNixQFIFhTkHnOqQnE8
   A==;
X-IronPort-AV: E=McAfee;i="6500,9779,10592"; a="324701080"
X-IronPort-AV: E=Sophos;i="5.97,222,1669104000";
   d="scan'208";a="324701080"
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 17 Jan 2023 01:05:15 -0800
X-IronPort-AV: E=McAfee;i="6500,9779,10592"; a="783174180"
X-IronPort-AV: E=Sophos;i="5.97,222,1669104000";
   d="scan'208";a="783174180"
Received: from tronach-mobl1.ger.corp.intel.com (HELO ijarvine-MOBL2.ger.corp.intel.com) ([10.252.40.3])
  by orsmga004-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 17 Jan 2023 01:05:04 -0800
From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
To: linux-serial@vger.kernel.org,
	Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	Jiri Slaby <jirislaby@kernel.org>,
	Rodolfo Giometti <giometti@enneenne.com>,
	Ulf Hansson <ulf.hansson@linaro.org>,
	Johan Hovold <johan@kernel.org>,
	Samuel Iglesias Gonsalvez <siglesias@igalia.com>,
	Arnd Bergmann <arnd@arndb.de>,
	David Lin <dtwlin@gmail.com>,
	Alex Elder <elder@kernel.org>,
	Shawn Guo <shawnguo@kernel.org>,
	Sascha Hauer <s.hauer@pengutronix.de>,
	Pengutronix Kernel Team <kernel@pengutronix.de>,
	Fabio Estevam <festevam@gmail.com>,
	NXP Linux Team <linux-imx@nxp.com>,
	Oliver Neukum <oneukum@suse.com>,
	linux-kernel@vger.kernel.org,
	linux-mmc@vger.kernel.org,
	greybus-dev@lists.linaro.org,
	linux-staging@lists.linux.dev,
	linuxppc-dev@lists.ozlabs.org,
	linux-arm-kernel@lists.infradead.org,
	linux-usb@vger.kernel.org
Date: Tue, 17 Jan 2023 11:03:53 +0200
Message-Id: <20230117090358.4796-8-ilpo.jarvinen@linux.intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20230117090358.4796-1-ilpo.jarvinen@linux.intel.com>
References: <20230117090358.4796-1-ilpo.jarvinen@linux.intel.com>
MIME-Version: 1.0
X-Spamd-Result: default: False [-1.30 / 15.00];
	BAYES_HAM(-3.00)[100.00%];
	SUSPICIOUS_RECIPS(1.50)[];
	MID_CONTAINS_FROM(1.00)[];
	DMARC_POLICY_ALLOW(-0.50)[intel.com,none];
	R_DKIM_ALLOW(-0.20)[intel.com:s=Intel];
	MIME_GOOD(-0.10)[text/plain];
	R_SPF_NA(0.00)[no SPF record];
	FREEMAIL_TO(0.00)[vger.kernel.org,linuxfoundation.org,kernel.org,enneenne.com,linaro.org,igalia.com,arndb.de,gmail.com,pengutronix.de,nxp.com,suse.com,lists.linaro.org,lists.linux.dev,lists.ozlabs.org,lists.infradead.org];
	FROM_EQ_ENVFROM(0.00)[];
	RCVD_TLS_LAST(0.00)[];
	MIME_TRACE(0.00)[0:+];
	ASN(0.00)[asn:4983, ipnet:192.55.52.0/24, country:US];
	DBL_BLOCKED_OPENRESOLVER(0.00)[linaro.org:email];
	RCPT_COUNT_TWELVE(0.00)[24];
	TO_MATCH_ENVRCPT_SOME(0.00)[];
	NEURAL_HAM(-0.00)[-1.000];
	DKIM_TRACE(0.00)[intel.com:+];
	FROM_HAS_DN(0.00)[];
	RCVD_COUNT_THREE(0.00)[3];
	TO_DN_SOME(0.00)[];
	ARC_NA(0.00)[]
X-Rspamd-Action: no action
X-Rspamd-Server: lists.linaro.org
X-Rspamd-Queue-Id: 320AF3EF35
X-Spamd-Bar: -
Message-ID-Hash: DDLNJVSEJKA7Z2P3PIWHPZGGRC7ICJVN
X-Message-ID-Hash: DDLNJVSEJKA7Z2P3PIWHPZGGRC7ICJVN
X-MailFrom: ilpo.jarvinen@linux.intel.com
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
X-Mailman-Version: 3.3.5
Precedence: list
Subject: [greybus-dev] [PATCH v4 07/12] tty: Convert ->dtr_rts() to take bool argument
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
Archived-At: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/message/DDLNJVSEJKA7Z2P3PIWHPZGGRC7ICJVN/>
List-Archive: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Owner: <mailto:greybus-dev-owner@lists.linaro.org>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Subscribe: <mailto:greybus-dev-join@lists.linaro.org>
List-Unsubscribe: <mailto:greybus-dev-leave@lists.linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

Q29udmVydCB0aGUgcmFpc2Uvb24gcGFyYW1ldGVyIGluIC0+ZHRyX3J0cygpIHRvIGJvb2wgdGhy
b3VnaCB0aGUNCmNhbGxjaGFpbi4gVGhlIHBhcmFtZXRlciBpcyB1c2VkIGxpa2UgYm9vbC4gSW4g
VVNCIHNlcmlhbCwgdGhlcmUNCnJlbWFpbnMgYSBmZXcgaW1wbGljaXQgYm9vbCAtPiBsYXJnZXIg
dHlwZSBjb252ZXJzaW9ucyBiZWNhdXNlIHNvbWUNCmRldmljZXMgdXNlIHU4IGluIHRoZWlyIGNv
bnRyb2wgbWVzc2FnZXMuDQoNCkluIG1veGFfdGlvY21nZXQoKSwgZHRyIHZhcmlhYmxlIHdhcyBy
ZXVzZWQgZm9yIGxpbmUgc3RhdHVzIHdoaWNoDQpyZXF1aXJlcyBpbnQgc28gdXNlIGEgc2VwYXJh
dGUgdmFyaWFibGUgZm9yIHN0YXR1cy4NCg0KUmV2aWV3ZWQtYnk6IEppcmkgU2xhYnkgPGppcmlz
bGFieUBrZXJuZWwub3JnPg0KQWNrZWQtYnk6IFVsZiBIYW5zc29uIDx1bGYuaGFuc3NvbkBsaW5h
cm8ub3JnPiAjIEZvciBNTUMNClNpZ25lZC1vZmYtYnk6IElscG8gSsOkcnZpbmVuIDxpbHBvLmph
cnZpbmVuQGxpbnV4LmludGVsLmNvbT4NCi0tLQ0KIGRyaXZlcnMvY2hhci9wY21jaWEvc3luY2xp
bmtfY3MuYyB8ICA0ICstLQ0KIGRyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMgICAgICB8ICA0
ICstLQ0KIGRyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL3VhcnQuYyAgICB8ICAyICstDQogZHJpdmVy
cy90dHkvYW1pc2VyaWFsLmMgICAgICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3R0eS9odmMvaHZj
X2NvbnNvbGUuYyAgICAgfCAgNCArLS0NCiBkcml2ZXJzL3R0eS9odmMvaHZjX2NvbnNvbGUuaCAg
ICAgfCAgMiArLQ0KIGRyaXZlcnMvdHR5L2h2Yy9odmNfaXVjdi5jICAgICAgICB8ICA0ICstLQ0K
IGRyaXZlcnMvdHR5L21veGEuYyAgICAgICAgICAgICAgICB8IDU0ICsrKysrKysrKysrKysrKyst
LS0tLS0tLS0tLS0tLS0NCiBkcml2ZXJzL3R0eS9teHNlci5jICAgICAgICAgICAgICAgfCAgMiAr
LQ0KIGRyaXZlcnMvdHR5L25fZ3NtLmMgICAgICAgICAgICAgICB8ICAyICstDQogZHJpdmVycy90
dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMgIHwgIDggKystLS0NCiBkcml2ZXJzL3R0eS9zeW5jbGlu
a19ndC5jICAgICAgICAgfCAgMiArLQ0KIGRyaXZlcnMvdHR5L3R0eV9wb3J0LmMgICAgICAgICAg
ICB8ICA0ICstLQ0KIGRyaXZlcnMvdXNiL2NsYXNzL2NkYy1hY20uYyAgICAgICB8ICAyICstDQog
ZHJpdmVycy91c2Ivc2VyaWFsL3VzYi1zZXJpYWwuYyAgIHwgIDIgKy0NCiBpbmNsdWRlL2xpbnV4
L3R0eV9wb3J0LmggICAgICAgICAgfCAgNCArLS0NCiAxNiBmaWxlcyBjaGFuZ2VkLCA1MiBpbnNl
cnRpb25zKCspLCA1MCBkZWxldGlvbnMoLSkNCg0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2hhci9w
Y21jaWEvc3luY2xpbmtfY3MuYyBiL2RyaXZlcnMvY2hhci9wY21jaWEvc3luY2xpbmtfY3MuYw0K
aW5kZXggNDM5MTEzOGUxYjhhLi40NmEwYjU4NmQyMzQgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL2No
YXIvcGNtY2lhL3N5bmNsaW5rX2NzLmMNCisrKyBiL2RyaXZlcnMvY2hhci9wY21jaWEvc3luY2xp
bmtfY3MuYw0KQEAgLTM3OCw3ICszNzgsNyBAQCBzdGF0aWMgdm9pZCBhc3luY19tb2RlKE1HU0xQ
Q19JTkZPICppbmZvKTsNCiBzdGF0aWMgdm9pZCB0eF90aW1lb3V0KHN0cnVjdCB0aW1lcl9saXN0
ICp0KTsNCiANCiBzdGF0aWMgYm9vbCBjYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBv
cnQpOw0KLXN0YXRpYyB2b2lkIGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBpbnQgb25v
ZmYpOw0KK3N0YXRpYyB2b2lkIGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9u
b2ZmKTsNCiANCiAjaWYgU1lOQ0xJTktfR0VORVJJQ19IRExDDQogI2RlZmluZSBkZXZfdG9fcG9y
dChEKSAoZGV2X3RvX2hkbGMoRCktPnByaXYpDQpAQCAtMjQ0Miw3ICsyNDQyLDcgQEAgc3RhdGlj
IGJvb2wgY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gaW5m
by0+c2VyaWFsX3NpZ25hbHMgJiBTZXJpYWxTaWduYWxfRENEOw0KIH0NCiANCi1zdGF0aWMgdm9p
ZCBkdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50IG9ub2ZmKQ0KK3N0YXRpYyB2b2lk
IGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9ub2ZmKQ0KIHsNCiAJTUdTTFBD
X0lORk8gKmluZm8gPSBjb250YWluZXJfb2YocG9ydCwgTUdTTFBDX0lORk8sIHBvcnQpOw0KIAl1
bnNpZ25lZCBsb25nIGZsYWdzOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191
YXJ0LmMgYi9kcml2ZXJzL21tYy9jb3JlL3NkaW9fdWFydC5jDQppbmRleCA0N2Y1ODI1OGQ4ZmYu
LmM2YjRiMmIyYTRiMiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMN
CisrKyBiL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMNCkBAIC01NDgsMTQgKzU0OCwxNCBA
QCBzdGF0aWMgYm9vbCB1YXJ0X2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqdHBvcnQp
DQogICoJYWRqdXN0ZWQgZHVyaW5nIGFuIG9wZW4sIGNsb3NlIGFuZCBoYW5ndXAuDQogICovDQog
DQotc3RhdGljIHZvaWQgdWFydF9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqdHBvcnQsIGludCBv
bm9mZikNCitzdGF0aWMgdm9pZCB1YXJ0X2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICp0cG9ydCwg
Ym9vbCBvbm9mZikNCiB7DQogCXN0cnVjdCBzZGlvX3VhcnRfcG9ydCAqcG9ydCA9DQogCQkJY29u
dGFpbmVyX29mKHRwb3J0LCBzdHJ1Y3Qgc2Rpb191YXJ0X3BvcnQsIHBvcnQpOw0KIAlpbnQgcmV0
ID0gc2Rpb191YXJ0X2NsYWltX2Z1bmMocG9ydCk7DQogCWlmIChyZXQpDQogCQlyZXR1cm47DQot
CWlmIChvbm9mZiA9PSAwKQ0KKwlpZiAoIW9ub2ZmKQ0KIAkJc2Rpb191YXJ0X2NsZWFyX21jdHJs
KHBvcnQsIFRJT0NNX0RUUiB8IFRJT0NNX1JUUyk7DQogCWVsc2UNCiAJCXNkaW9fdWFydF9zZXRf
bWN0cmwocG9ydCwgVElPQ01fRFRSIHwgVElPQ01fUlRTKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJz
L3N0YWdpbmcvZ3JleWJ1cy91YXJ0LmMgYi9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy91YXJ0LmMN
CmluZGV4IDkwZmYwN2YyY2JmNy4uOTJkNDk3NDBkNWE0IDEwMDY0NA0KLS0tIGEvZHJpdmVycy9z
dGFnaW5nL2dyZXlidXMvdWFydC5jDQorKysgYi9kcml2ZXJzL3N0YWdpbmcvZ3JleWJ1cy91YXJ0
LmMNCkBAIC03MDEsNyArNzAxLDcgQEAgc3RhdGljIGludCBnYl90dHlfaW9jdGwoc3RydWN0IHR0
eV9zdHJ1Y3QgKnR0eSwgdW5zaWduZWQgaW50IGNtZCwNCiAJcmV0dXJuIC1FTk9JT0NUTENNRDsN
CiB9DQogDQotc3RhdGljIHZvaWQgZ2JfdHR5X2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0
LCBpbnQgb24pDQorc3RhdGljIHZvaWQgZ2JfdHR5X2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpw
b3J0LCBib29sIG9uKQ0KIHsNCiAJc3RydWN0IGdiX3R0eSAqZ2JfdHR5Ow0KIAl1OCBuZXdjdHJs
Ow0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L2FtaXNlcmlhbC5jIGIvZHJpdmVycy90dHkvYW1p
c2VyaWFsLmMNCmluZGV4IDAxYzRmZDNjZTdjOC4uMjlkNGM1NTRmNmI4IDEwMDY0NA0KLS0tIGEv
ZHJpdmVycy90dHkvYW1pc2VyaWFsLmMNCisrKyBiL2RyaXZlcnMvdHR5L2FtaXNlcmlhbC5jDQpA
QCAtMTQ1OSw3ICsxNDU5LDcgQEAgc3RhdGljIGJvb2wgYW1pZ2FfY2Fycmllcl9yYWlzZWQoc3Ry
dWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gIShjaWFiLnByYSAmIFNFUl9EQ0QpOw0KIH0N
CiANCi1zdGF0aWMgdm9pZCBhbWlnYV9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50
IHJhaXNlKQ0KK3N0YXRpYyB2b2lkIGFtaWdhX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0
LCBib29sIHJhaXNlKQ0KIHsNCiAJc3RydWN0IHNlcmlhbF9zdGF0ZSAqaW5mbyA9IGNvbnRhaW5l
cl9vZihwb3J0LCBzdHJ1Y3Qgc2VyaWFsX3N0YXRlLA0KIAkJCXRwb3J0KTsNCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9odmMvaHZjX2NvbnNvbGUuYyBiL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29u
c29sZS5jDQppbmRleCBhNjgzZTIxZGYxOWMuLjEwYzEwY2ZkZjkyYSAxMDA2NDQNCi0tLSBhL2Ry
aXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5jDQorKysgYi9kcml2ZXJzL3R0eS9odmMvaHZjX2Nv
bnNvbGUuYw0KQEAgLTM3Niw3ICszNzYsNyBAQCBzdGF0aWMgaW50IGh2Y19vcGVuKHN0cnVjdCB0
dHlfc3RydWN0ICp0dHksIHN0cnVjdCBmaWxlICogZmlscCkNCiAJCS8qIFdlIGFyZSByZWFkeS4u
LiByYWlzZSBEVFIvUlRTICovDQogCQlpZiAoQ19CQVVEKHR0eSkpDQogCQkJaWYgKGhwLT5vcHMt
PmR0cl9ydHMpDQotCQkJCWhwLT5vcHMtPmR0cl9ydHMoaHAsIDEpOw0KKwkJCQlocC0+b3BzLT5k
dHJfcnRzKGhwLCB0cnVlKTsNCiAJCXR0eV9wb3J0X3NldF9pbml0aWFsaXplZCgmaHAtPnBvcnQs
IHRydWUpOw0KIAl9DQogDQpAQCAtNDA2LDcgKzQwNiw3IEBAIHN0YXRpYyB2b2lkIGh2Y19jbG9z
ZShzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1Y3QgZmlsZSAqIGZpbHApDQogDQogCQlpZiAo
Q19IVVBDTCh0dHkpKQ0KIAkJCWlmIChocC0+b3BzLT5kdHJfcnRzKQ0KLQkJCQlocC0+b3BzLT5k
dHJfcnRzKGhwLCAwKTsNCisJCQkJaHAtPm9wcy0+ZHRyX3J0cyhocCwgZmFsc2UpOw0KIA0KIAkJ
aWYgKGhwLT5vcHMtPm5vdGlmaWVyX2RlbCkNCiAJCQlocC0+b3BzLT5ub3RpZmllcl9kZWwoaHAs
IGhwLT5kYXRhKTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9odmMvaHZjX2NvbnNvbGUuaCBi
L2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5oDQppbmRleCAxOGQwMDU4MTRlNGIuLjZkMzQy
OGJmODY4ZiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5oDQorKysg
Yi9kcml2ZXJzL3R0eS9odmMvaHZjX2NvbnNvbGUuaA0KQEAgLTY2LDcgKzY2LDcgQEAgc3RydWN0
IGh2X29wcyB7DQogCWludCAoKnRpb2Ntc2V0KShzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAsIHVuc2ln
bmVkIGludCBzZXQsIHVuc2lnbmVkIGludCBjbGVhcik7DQogDQogCS8qIENhbGxiYWNrcyB0byBo
YW5kbGUgdHR5IHBvcnRzICovDQotCXZvaWQgKCpkdHJfcnRzKShzdHJ1Y3QgaHZjX3N0cnVjdCAq
aHAsIGludCByYWlzZSk7DQorCXZvaWQgKCpkdHJfcnRzKShzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAs
IGJvb2wgcmFpc2UpOw0KIH07DQogDQogLyogUmVnaXN0ZXIgYSB2dGVybSBhbmQgYSBzbG90IGlu
ZGV4IGZvciB1c2UgYXMgYSBjb25zb2xlIChjb25zb2xlX2luaXQpICovDQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy90dHkvaHZjL2h2Y19pdWN2LmMgYi9kcml2ZXJzL3R0eS9odmMvaHZjX2l1Y3YuYw0K
aW5kZXggN2Q0OWE4NzJkZTQ4Li5mZTg2MmE2ODgyZDYgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0
eS9odmMvaHZjX2l1Y3YuYw0KKysrIGIvZHJpdmVycy90dHkvaHZjL2h2Y19pdWN2LmMNCkBAIC02
NTgsMTMgKzY1OCwxMyBAQCBzdGF0aWMgdm9pZCBodmNfaXVjdl9ub3RpZmllcl9oYW5ndXAoc3Ry
dWN0IGh2Y19zdHJ1Y3QgKmhwLCBpbnQgaWQpDQogLyoqDQogICogaHZjX2l1Y3ZfZHRyX3J0cygp
IC0gSFZDIG5vdGlmaWVyIGZvciBoYW5kbGluZyBEVFIvUlRTDQogICogQGhwOgkJUG9pbnRlciB0
aGUgSFZDIGRldmljZSAoc3RydWN0IGh2Y19zdHJ1Y3QpDQotICogQHJhaXNlOglOb24temVybyB0
byByYWlzZSBvciB6ZXJvIHRvIGxvd2VyIERUUi9SVFMgbGluZXMNCisgKiBAcmFpc2U6CVRydWUg
dG8gcmFpc2Ugb3IgZmFsc2UgdG8gbG93ZXIgRFRSL1JUUyBsaW5lcw0KICAqDQogICogVGhpcyBy
b3V0aW5lIG5vdGlmaWVzIHRoZSBIVkMgYmFjay1lbmQgdG8gcmFpc2Ugb3IgbG93ZXIgRFRSL1JU
Uw0KICAqIGxpbmVzLiAgUmFpc2luZyBEVFIvUlRTIGlzIGlnbm9yZWQuICBMb3dlcmluZyBEVFIv
UlRTIGluZGljYXRlcyB0bw0KICAqIGRyb3AgdGhlIElVQ1YgY29ubmVjdGlvbiAoc2ltaWxhciB0
byBoYW5nIHVwIHRoZSBtb2RlbSkuDQogICovDQotc3RhdGljIHZvaWQgaHZjX2l1Y3ZfZHRyX3J0
cyhzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAsIGludCByYWlzZSkNCitzdGF0aWMgdm9pZCBodmNfaXVj
dl9kdHJfcnRzKHN0cnVjdCBodmNfc3RydWN0ICpocCwgYm9vbCByYWlzZSkNCiB7DQogCXN0cnVj
dCBodmNfaXVjdl9wcml2YXRlICpwcml2Ow0KIAlzdHJ1Y3QgaXVjdl9wYXRoICAgICAgICAqcGF0
aDsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9tb3hhLmMgYi9kcml2ZXJzL3R0eS9tb3hhLmMN
CmluZGV4IDZhMWU3OGUzM2EyYy4uOWJlM2Q1ODVkNWE5IDEwMDY0NA0KLS0tIGEvZHJpdmVycy90
dHkvbW94YS5jDQorKysgYi9kcml2ZXJzL3R0eS9tb3hhLmMNCkBAIC01MDIsMTUgKzUwMiwxNSBA
QCBzdGF0aWMgdm9pZCBtb3hhX3BvbGwoc3RydWN0IHRpbWVyX2xpc3QgKik7DQogc3RhdGljIHZv
aWQgbW94YV9zZXRfdHR5X3BhcmFtKHN0cnVjdCB0dHlfc3RydWN0ICosIGNvbnN0IHN0cnVjdCBr
dGVybWlvcyAqKTsNCiBzdGF0aWMgdm9pZCBtb3hhX3NodXRkb3duKHN0cnVjdCB0dHlfcG9ydCAq
KTsNCiBzdGF0aWMgYm9vbCBtb3hhX2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqKTsN
Ci1zdGF0aWMgdm9pZCBtb3hhX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICosIGludCk7DQorc3Rh
dGljIHZvaWQgbW94YV9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqLCBib29sKTsNCiAvKg0KICAq
IG1veGEgYm9hcmQgaW50ZXJmYWNlIGZ1bmN0aW9uczoNCiAgKi8NCiBzdGF0aWMgdm9pZCBNb3hh
UG9ydEVuYWJsZShzdHJ1Y3QgbW94YV9wb3J0ICopOw0KIHN0YXRpYyB2b2lkIE1veGFQb3J0RGlz
YWJsZShzdHJ1Y3QgbW94YV9wb3J0ICopOw0KIHN0YXRpYyBpbnQgTW94YVBvcnRTZXRUZXJtaW8o
c3RydWN0IG1veGFfcG9ydCAqLCBzdHJ1Y3Qga3Rlcm1pb3MgKiwgc3BlZWRfdCk7DQotc3RhdGlj
IGludCBNb3hhUG9ydEdldExpbmVPdXQoc3RydWN0IG1veGFfcG9ydCAqLCBpbnQgKiwgaW50ICop
Ow0KLXN0YXRpYyB2b2lkIE1veGFQb3J0TGluZUN0cmwoc3RydWN0IG1veGFfcG9ydCAqLCBpbnQs
IGludCk7DQorc3RhdGljIGludCBNb3hhUG9ydEdldExpbmVPdXQoc3RydWN0IG1veGFfcG9ydCAq
LCBib29sICosIGJvb2wgKik7DQorc3RhdGljIHZvaWQgTW94YVBvcnRMaW5lQ3RybChzdHJ1Y3Qg
bW94YV9wb3J0ICosIGJvb2wsIGJvb2wpOw0KIHN0YXRpYyB2b2lkIE1veGFQb3J0Rmxvd0N0cmwo
c3RydWN0IG1veGFfcG9ydCAqLCBpbnQsIGludCwgaW50LCBpbnQsIGludCk7DQogc3RhdGljIGlu
dCBNb3hhUG9ydExpbmVTdGF0dXMoc3RydWN0IG1veGFfcG9ydCAqKTsNCiBzdGF0aWMgdm9pZCBN
b3hhUG9ydEZsdXNoRGF0YShzdHJ1Y3QgbW94YV9wb3J0ICosIGludCk7DQpAQCAtMTQ0Myw3ICsx
NDQzLDcgQEAgc3RhdGljIGJvb2wgbW94YV9jYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQpDQogCXJldHVybiBkY2Q7DQogfQ0KIA0KLXN0YXRpYyB2b2lkIG1veGFfZHRyX3J0cyhz
dHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGludCBvbm9mZikNCitzdGF0aWMgdm9pZCBtb3hhX2R0cl9y
dHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9ub2ZmKQ0KIHsNCiAJc3RydWN0IG1veGFf
cG9ydCAqY2ggPSBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IG1veGFfcG9ydCwgcG9ydCk7DQog
CU1veGFQb3J0TGluZUN0cmwoY2gsIG9ub2ZmLCBvbm9mZik7DQpAQCAtMTQ4MSw3ICsxNDgxLDcg
QEAgc3RhdGljIGludCBtb3hhX29wZW4oc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IGZp
bGUgKmZpbHApDQogCWlmICghdHR5X3BvcnRfaW5pdGlhbGl6ZWQoJmNoLT5wb3J0KSkgew0KIAkJ
Y2gtPnN0YXR1c2ZsYWdzID0gMDsNCiAJCW1veGFfc2V0X3R0eV9wYXJhbSh0dHksICZ0dHktPnRl
cm1pb3MpOw0KLQkJTW94YVBvcnRMaW5lQ3RybChjaCwgMSwgMSk7DQorCQlNb3hhUG9ydExpbmVD
dHJsKGNoLCB0cnVlLCB0cnVlKTsNCiAJCU1veGFQb3J0RW5hYmxlKGNoKTsNCiAJCU1veGFTZXRG
aWZvKGNoLCBjaC0+dHlwZSA9PSBQT1JUXzE2NTUwQSk7DQogCQl0dHlfcG9ydF9zZXRfaW5pdGlh
bGl6ZWQoJmNoLT5wb3J0LCB0cnVlKTsNCkBAIC0xNTU3LDE5ICsxNTU3LDIxIEBAIHN0YXRpYyB1
bnNpZ25lZCBpbnQgbW94YV9jaGFyc19pbl9idWZmZXIoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSkN
CiBzdGF0aWMgaW50IG1veGFfdGlvY21nZXQoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSkNCiB7DQog
CXN0cnVjdCBtb3hhX3BvcnQgKmNoID0gdHR5LT5kcml2ZXJfZGF0YTsNCi0JaW50IGZsYWcgPSAw
LCBkdHIsIHJ0czsNCisJYm9vbCBkdHIsIHJ0czsNCisJaW50IGZsYWcgPSAwOw0KKwlpbnQgc3Rh
dHVzOw0KIA0KIAlNb3hhUG9ydEdldExpbmVPdXQoY2gsICZkdHIsICZydHMpOw0KIAlpZiAoZHRy
KQ0KIAkJZmxhZyB8PSBUSU9DTV9EVFI7DQogCWlmIChydHMpDQogCQlmbGFnIHw9IFRJT0NNX1JU
UzsNCi0JZHRyID0gTW94YVBvcnRMaW5lU3RhdHVzKGNoKTsNCi0JaWYgKGR0ciAmIDEpDQorCXN0
YXR1cyA9IE1veGFQb3J0TGluZVN0YXR1cyhjaCk7DQorCWlmIChzdGF0dXMgJiAxKQ0KIAkJZmxh
ZyB8PSBUSU9DTV9DVFM7DQotCWlmIChkdHIgJiAyKQ0KKwlpZiAoc3RhdHVzICYgMikNCiAJCWZs
YWcgfD0gVElPQ01fRFNSOw0KLQlpZiAoZHRyICYgNCkNCisJaWYgKHN0YXR1cyAmIDQpDQogCQlm
bGFnIHw9IFRJT0NNX0NEOw0KIAlyZXR1cm4gZmxhZzsNCiB9DQpAQCAtMTU3OCw3ICsxNTgwLDcg
QEAgc3RhdGljIGludCBtb3hhX3Rpb2Ntc2V0KHN0cnVjdCB0dHlfc3RydWN0ICp0dHksDQogCQkJ
IHVuc2lnbmVkIGludCBzZXQsIHVuc2lnbmVkIGludCBjbGVhcikNCiB7DQogCXN0cnVjdCBtb3hh
X3BvcnQgKmNoOw0KLQlpbnQgZHRyLCBydHM7DQorCWJvb2wgZHRyLCBydHM7DQogDQogCW11dGV4
X2xvY2soJm1veGFfb3BlbmxvY2spOw0KIAljaCA9IHR0eS0+ZHJpdmVyX2RhdGE7DQpAQCAtMTU4
OSwxMyArMTU5MSwxMyBAQCBzdGF0aWMgaW50IG1veGFfdGlvY21zZXQoc3RydWN0IHR0eV9zdHJ1
Y3QgKnR0eSwNCiANCiAJTW94YVBvcnRHZXRMaW5lT3V0KGNoLCAmZHRyLCAmcnRzKTsNCiAJaWYg
KHNldCAmIFRJT0NNX1JUUykNCi0JCXJ0cyA9IDE7DQorCQlydHMgPSB0cnVlOw0KIAlpZiAoc2V0
ICYgVElPQ01fRFRSKQ0KLQkJZHRyID0gMTsNCisJCWR0ciA9IHRydWU7DQogCWlmIChjbGVhciAm
IFRJT0NNX1JUUykNCi0JCXJ0cyA9IDA7DQorCQlydHMgPSBmYWxzZTsNCiAJaWYgKGNsZWFyICYg
VElPQ01fRFRSKQ0KLQkJZHRyID0gMDsNCisJCWR0ciA9IGZhbHNlOw0KIAlNb3hhUG9ydExpbmVD
dHJsKGNoLCBkdHIsIHJ0cyk7DQogCW11dGV4X3VubG9jaygmbW94YV9vcGVubG9jayk7DQogCXJl
dHVybiAwOw0KQEAgLTE4NzcsMTIgKzE4NzksMTIgQEAgc3RhdGljIHZvaWQgTW94YVBvcnRGbHVz
aERhdGEoc3RydWN0IG1veGFfcG9ydCAqcG9ydCwgaW50IG1vZGUpDQogICoNCiAgKiAgICAgIEZ1
bmN0aW9uIDEzOiAgICBHZXQgdGhlIERUUi9SVFMgc3RhdGUgb2YgdGhpcyBwb3J0Lg0KICAqICAg
ICAgU3ludGF4Og0KLSAqICAgICAgaW50ICBNb3hhUG9ydEdldExpbmVPdXQoaW50IHBvcnQsIGlu
dCAqZHRyU3RhdGUsIGludCAqcnRzU3RhdGUpOw0KKyAqICAgICAgaW50ICBNb3hhUG9ydEdldExp
bmVPdXQoaW50IHBvcnQsIGJvb2wgKmR0clN0YXRlLCBib29sICpydHNTdGF0ZSk7DQogICogICAg
ICAgICAgIGludCBwb3J0ICAgICAgICAgICA6IHBvcnQgbnVtYmVyICgwIC0gMTI3KQ0KLSAqICAg
ICAgICAgICBpbnQgKiBkdHJTdGF0ZSAgICAgOiBwb2ludGVyIHRvIElOVCB0byByZWNlaXZlIHRo
ZSBjdXJyZW50IERUUg0KKyAqICAgICAgICAgICBib29sICogZHRyU3RhdGUgICAgOiBwb2ludGVy
IHRvIGJvb2wgdG8gcmVjZWl2ZSB0aGUgY3VycmVudCBEVFINCiAgKiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgc3RhdGUuIChpZiBOVUxMLCB0aGlzIGZ1bmN0aW9uIHdpbGwgbm90DQog
ICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlIHRvIHRoaXMgYWRkcmVzcykN
Ci0gKiAgICAgICAgICAgaW50ICogcnRzU3RhdGUgICAgIDogcG9pbnRlciB0byBJTlQgdG8gcmVj
ZWl2ZSB0aGUgY3VycmVudCBSVFMNCisgKiAgICAgICAgICAgYm9vbCAqIHJ0c1N0YXRlICAgIDog
cG9pbnRlciB0byBib29sIHRvIHJlY2VpdmUgdGhlIGN1cnJlbnQgUlRTDQogICogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHN0YXRlLiAoaWYgTlVMTCwgdGhpcyBmdW5jdGlvbiB3aWxs
IG5vdA0KICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZSB0byB0aGlzIGFk
ZHJlc3MpDQogICoNCkBAIC0xODkyLDEwICsxODk0LDEwIEBAIHN0YXRpYyB2b2lkIE1veGFQb3J0
Rmx1c2hEYXRhKHN0cnVjdCBtb3hhX3BvcnQgKnBvcnQsIGludCBtb2RlKQ0KICAqDQogICogICAg
ICBGdW5jdGlvbiAxNDogICAgU2V0dGluZyB0aGUgRFRSL1JUUyBvdXRwdXQgc3RhdGUgb2YgdGhp
cyBwb3J0Lg0KICAqICAgICAgU3ludGF4Og0KLSAqICAgICAgdm9pZCBNb3hhUG9ydExpbmVDdHJs
KGludCBwb3J0LCBpbnQgZHRyU3RhdGUsIGludCBydHNTdGF0ZSk7DQorICogICAgICB2b2lkIE1v
eGFQb3J0TGluZUN0cmwoaW50IHBvcnQsIGJvb2wgZHRyU3RhdGUsIGJvb2wgcnRzU3RhdGUpOw0K
ICAqICAgICAgICAgICBpbnQgcG9ydCAgICAgICAgICAgOiBwb3J0IG51bWJlciAoMCAtIDEyNykN
Ci0gKiAgICAgICAgICAgaW50IGR0clN0YXRlICAgICAgIDogRFRSIG91dHB1dCBzdGF0ZSAoMDog
b2ZmLCAxOiBvbikNCi0gKiAgICAgICAgICAgaW50IHJ0c1N0YXRlICAgICAgIDogUlRTIG91dHB1
dCBzdGF0ZSAoMDogb2ZmLCAxOiBvbikNCisgKiAgICAgICAgICAgYm9vbCBkdHJTdGF0ZSAgICAg
IDogRFRSIG91dHB1dCBzdGF0ZQ0KKyAqICAgICAgICAgICBib29sIHJ0c1N0YXRlICAgICAgOiBS
VFMgb3V0cHV0IHN0YXRlDQogICoNCiAgKg0KICAqICAgICAgRnVuY3Rpb24gMTU6ICAgIFNldHRp
bmcgdGhlIGZsb3cgY29udHJvbCBvZiB0aGlzIHBvcnQuDQpAQCAtMjEwMywxOCArMjEwNSwxOCBA
QCBzdGF0aWMgaW50IE1veGFQb3J0U2V0VGVybWlvKHN0cnVjdCBtb3hhX3BvcnQgKnBvcnQsIHN0
cnVjdCBrdGVybWlvcyAqdGVybWlvLA0KIAlyZXR1cm4gYmF1ZDsNCiB9DQogDQotc3RhdGljIGlu
dCBNb3hhUG9ydEdldExpbmVPdXQoc3RydWN0IG1veGFfcG9ydCAqcG9ydCwgaW50ICpkdHJTdGF0
ZSwNCi0JCWludCAqcnRzU3RhdGUpDQorc3RhdGljIGludCBNb3hhUG9ydEdldExpbmVPdXQoc3Ry
dWN0IG1veGFfcG9ydCAqcG9ydCwgYm9vbCAqZHRyU3RhdGUsDQorCQlib29sICpydHNTdGF0ZSkN
CiB7DQogCWlmIChkdHJTdGF0ZSkNCi0JCSpkdHJTdGF0ZSA9ICEhKHBvcnQtPmxpbmVDdHJsICYg
RFRSX09OKTsNCisJCSpkdHJTdGF0ZSA9IHBvcnQtPmxpbmVDdHJsICYgRFRSX09OOw0KIAlpZiAo
cnRzU3RhdGUpDQotCQkqcnRzU3RhdGUgPSAhIShwb3J0LT5saW5lQ3RybCAmIFJUU19PTik7DQor
CQkqcnRzU3RhdGUgPSBwb3J0LT5saW5lQ3RybCAmIFJUU19PTjsNCiANCiAJcmV0dXJuIDA7DQog
fQ0KIA0KLXN0YXRpYyB2b2lkIE1veGFQb3J0TGluZUN0cmwoc3RydWN0IG1veGFfcG9ydCAqcG9y
dCwgaW50IGR0ciwgaW50IHJ0cykNCitzdGF0aWMgdm9pZCBNb3hhUG9ydExpbmVDdHJsKHN0cnVj
dCBtb3hhX3BvcnQgKnBvcnQsIGJvb2wgZHRyLCBib29sIHJ0cykNCiB7DQogCXU4IG1vZGUgPSAw
Ow0KIA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L214c2VyLmMgYi9kcml2ZXJzL3R0eS9teHNl
ci5jDQppbmRleCA5NmM3MmU2OTFjZDcuLmQ0ZmIxMWUzOWJiMSAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvdHR5L214c2VyLmMNCisrKyBiL2RyaXZlcnMvdHR5L214c2VyLmMNCkBAIC00NjUsNyArNDY1
LDcgQEAgc3RhdGljIGJvb2wgbXhzZXJfY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpw
b3J0KQ0KIAlyZXR1cm4gaW5iKG1wLT5pb2FkZHIgKyBVQVJUX01TUikgJiBVQVJUX01TUl9EQ0Q7
DQogfQ0KIA0KLXN0YXRpYyB2b2lkIG14c2VyX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0
LCBpbnQgb24pDQorc3RhdGljIHZvaWQgbXhzZXJfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBv
cnQsIGJvb2wgb24pDQogew0KIAlzdHJ1Y3QgbXhzZXJfcG9ydCAqbXAgPSBjb250YWluZXJfb2Yo
cG9ydCwgc3RydWN0IG14c2VyX3BvcnQsIHBvcnQpOw0KIAl1bnNpZ25lZCBsb25nIGZsYWdzOw0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L25fZ3NtLmMgYi9kcml2ZXJzL3R0eS9uX2dzbS5jDQpp
bmRleCA4MWZjMmVjMzY5M2YuLjhkZDBkNjQ0MWM0MiAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdHR5
L25fZ3NtLmMNCisrKyBiL2RyaXZlcnMvdHR5L25fZ3NtLmMNCkBAIC0zNzkyLDcgKzM3OTIsNyBA
QCBzdGF0aWMgYm9vbCBnc21fY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0K
IAlyZXR1cm4gZGxjaS0+bW9kZW1fcnggJiBUSU9DTV9DRDsNCiB9DQogDQotc3RhdGljIHZvaWQg
Z3NtX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBpbnQgb25vZmYpDQorc3RhdGljIHZv
aWQgZ3NtX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9ub2ZmKQ0KIHsNCiAJ
c3RydWN0IGdzbV9kbGNpICpkbGNpID0gY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCBnc21fZGxj
aSwgcG9ydCk7DQogCXVuc2lnbmVkIGludCBtb2RlbV90eCA9IGRsY2ktPm1vZGVtX3R4Ow0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxfY29yZS5jIGIvZHJpdmVycy90dHkv
c2VyaWFsL3NlcmlhbF9jb3JlLmMNCmluZGV4IDIwZWQ4YTA4OGIyZC4uMDUzNTM1ODQ2YmEyIDEw
MDY0NA0KLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMNCisrKyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC9zZXJpYWxfY29yZS5jDQpAQCAtMTY5LDcgKzE2OSw3IEBAIHVhcnRfdXBk
YXRlX21jdHJsKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHVuc2lnbmVkIGludCBzZXQsIHVuc2ln
bmVkIGludCBjbGVhcikNCiAjZGVmaW5lIHVhcnRfc2V0X21jdHJsKHBvcnQsIHNldCkJdWFydF91
cGRhdGVfbWN0cmwocG9ydCwgc2V0LCAwKQ0KICNkZWZpbmUgdWFydF9jbGVhcl9tY3RybChwb3J0
LCBjbGVhcikJdWFydF91cGRhdGVfbWN0cmwocG9ydCwgMCwgY2xlYXIpDQogDQotc3RhdGljIHZv
aWQgdWFydF9wb3J0X2R0cl9ydHMoc3RydWN0IHVhcnRfcG9ydCAqdXBvcnQsIGludCByYWlzZSkN
CitzdGF0aWMgdm9pZCB1YXJ0X3BvcnRfZHRyX3J0cyhzdHJ1Y3QgdWFydF9wb3J0ICp1cG9ydCwg
Ym9vbCByYWlzZSkNCiB7DQogCWlmIChyYWlzZSkNCiAJCXVhcnRfc2V0X21jdHJsKHVwb3J0LCBU
SU9DTV9EVFIgfCBUSU9DTV9SVFMpOw0KQEAgLTIzOSw3ICsyMzksNyBAQCBzdGF0aWMgaW50IHVh
cnRfcG9ydF9zdGFydHVwKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHN0cnVjdCB1YXJ0X3N0YXRl
ICpzdGF0ZSwNCiAJCSAqIHBvcnQgaXMgb3BlbiBhbmQgcmVhZHkgdG8gcmVzcG9uZC4NCiAJCSAq
Lw0KIAkJaWYgKGluaXRfaHcgJiYgQ19CQVVEKHR0eSkpDQotCQkJdWFydF9wb3J0X2R0cl9ydHMo
dXBvcnQsIDEpOw0KKwkJCXVhcnRfcG9ydF9kdHJfcnRzKHVwb3J0LCB0cnVlKTsNCiAJfQ0KIA0K
IAkvKg0KQEAgLTMwMiw3ICszMDIsNyBAQCBzdGF0aWMgdm9pZCB1YXJ0X3NodXRkb3duKHN0cnVj
dCB0dHlfc3RydWN0ICp0dHksIHN0cnVjdCB1YXJ0X3N0YXRlICpzdGF0ZSkNCiAJCX0NCiANCiAJ
CWlmICghdHR5IHx8IENfSFVQQ0wodHR5KSkNCi0JCQl1YXJ0X3BvcnRfZHRyX3J0cyh1cG9ydCwg
MCk7DQorCQkJdWFydF9wb3J0X2R0cl9ydHModXBvcnQsIGZhbHNlKTsNCiANCiAJCXVhcnRfcG9y
dF9zaHV0ZG93bihwb3J0KTsNCiAJfQ0KQEAgLTE4ODUsNyArMTg4NSw3IEBAIHN0YXRpYyBib29s
IHVhcnRfY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gbWN0
cmwgJiBUSU9DTV9DQVI7DQogfQ0KIA0KLXN0YXRpYyB2b2lkIHVhcnRfZHRyX3J0cyhzdHJ1Y3Qg
dHR5X3BvcnQgKnBvcnQsIGludCByYWlzZSkNCitzdGF0aWMgdm9pZCB1YXJ0X2R0cl9ydHMoc3Ry
dWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIHJhaXNlKQ0KIHsNCiAJc3RydWN0IHVhcnRfc3RhdGUg
KnN0YXRlID0gY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCB1YXJ0X3N0YXRlLCBwb3J0KTsNCiAJ
c3RydWN0IHVhcnRfcG9ydCAqdXBvcnQ7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc3luY2xp
bmtfZ3QuYyBiL2RyaXZlcnMvdHR5L3N5bmNsaW5rX2d0LmMNCmluZGV4IDRiYTcxZWM3NjRmNy4u
MmI3ODYyNjVjZTdiIDEwMDY0NA0KLS0tIGEvZHJpdmVycy90dHkvc3luY2xpbmtfZ3QuYw0KKysr
IGIvZHJpdmVycy90dHkvc3luY2xpbmtfZ3QuYw0KQEAgLTMxMzgsNyArMzEzOCw3IEBAIHN0YXRp
YyBib29sIGNhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCkNCiAJcmV0dXJuIGlu
Zm8tPnNpZ25hbHMgJiBTZXJpYWxTaWduYWxfRENEOw0KIH0NCiANCi1zdGF0aWMgdm9pZCBkdHJf
cnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRpYyB2b2lkIGR0cl9ydHMo
c3RydWN0IHR0eV9wb3J0ICpwb3J0LCBib29sIG9uKQ0KIHsNCiAJdW5zaWduZWQgbG9uZyBmbGFn
czsNCiAJc3RydWN0IHNsZ3RfaW5mbyAqaW5mbyA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3Qg
c2xndF9pbmZvLCBwb3J0KTsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS90dHlfcG9ydC5jIGIv
ZHJpdmVycy90dHkvdHR5X3BvcnQuYw0KaW5kZXggYTU3M2M1MDBmOTViLi5hNzg4YTZiZjQ4N2Qg
MTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS90dHlfcG9ydC5jDQorKysgYi9kcml2ZXJzL3R0eS90
dHlfcG9ydC5jDQpAQCAtNDYzLDcgKzQ2Myw3IEBAIEVYUE9SVF9TWU1CT0wodHR5X3BvcnRfY2Fy
cmllcl9yYWlzZWQpOw0KIHZvaWQgdHR5X3BvcnRfcmFpc2VfZHRyX3J0cyhzdHJ1Y3QgdHR5X3Bv
cnQgKnBvcnQpDQogew0KIAlpZiAocG9ydC0+b3BzLT5kdHJfcnRzKQ0KLQkJcG9ydC0+b3BzLT5k
dHJfcnRzKHBvcnQsIDEpOw0KKwkJcG9ydC0+b3BzLT5kdHJfcnRzKHBvcnQsIHRydWUpOw0KIH0N
CiBFWFBPUlRfU1lNQk9MKHR0eV9wb3J0X3JhaXNlX2R0cl9ydHMpOw0KIA0KQEAgLTQ3OCw3ICs0
NzgsNyBAQCBFWFBPUlRfU1lNQk9MKHR0eV9wb3J0X3JhaXNlX2R0cl9ydHMpOw0KIHZvaWQgdHR5
X3BvcnRfbG93ZXJfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogew0KIAlpZiAocG9y
dC0+b3BzLT5kdHJfcnRzKQ0KLQkJcG9ydC0+b3BzLT5kdHJfcnRzKHBvcnQsIDApOw0KKwkJcG9y
dC0+b3BzLT5kdHJfcnRzKHBvcnQsIGZhbHNlKTsNCiB9DQogRVhQT1JUX1NZTUJPTCh0dHlfcG9y
dF9sb3dlcl9kdHJfcnRzKTsNCiANCmRpZmYgLS1naXQgYS9kcml2ZXJzL3VzYi9jbGFzcy9jZGMt
YWNtLmMgYi9kcml2ZXJzL3VzYi9jbGFzcy9jZGMtYWNtLmMNCmluZGV4IDM2YmYwNTFiMzQ1Yi4u
ZDRmOTIyMGI4MTYyIDEwMDY0NA0KLS0tIGEvZHJpdmVycy91c2IvY2xhc3MvY2RjLWFjbS5jDQor
KysgYi9kcml2ZXJzL3VzYi9jbGFzcy9jZGMtYWNtLmMNCkBAIC02NTEsNyArNjUxLDcgQEAgc3Rh
dGljIGludCBhY21fdHR5X29wZW4oc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IGZpbGUg
KmZpbHApDQogCXJldHVybiB0dHlfcG9ydF9vcGVuKCZhY20tPnBvcnQsIHR0eSwgZmlscCk7DQog
fQ0KIA0KLXN0YXRpYyB2b2lkIGFjbV9wb3J0X2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0
LCBpbnQgcmFpc2UpDQorc3RhdGljIHZvaWQgYWNtX3BvcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3Bv
cnQgKnBvcnQsIGJvb2wgcmFpc2UpDQogew0KIAlzdHJ1Y3QgYWNtICphY20gPSBjb250YWluZXJf
b2YocG9ydCwgc3RydWN0IGFjbSwgcG9ydCk7DQogCWludCB2YWw7DQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy91c2Ivc2VyaWFsL3VzYi1zZXJpYWwuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC91c2Itc2Vy
aWFsLmMNCmluZGV4IDAxOTcyMGE2M2ZhYy4uZjg0MDQwNzM1NThiIDEwMDY0NA0KLS0tIGEvZHJp
dmVycy91c2Ivc2VyaWFsL3VzYi1zZXJpYWwuYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFsL3Vz
Yi1zZXJpYWwuYw0KQEAgLTc2NSw3ICs3NjUsNyBAQCBzdGF0aWMgYm9vbCBzZXJpYWxfcG9ydF9j
YXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVybiB0cnVlOw0KIH0N
CiANCi1zdGF0aWMgdm9pZCBzZXJpYWxfcG9ydF9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9y
dCwgaW50IG9uKQ0KK3N0YXRpYyB2b2lkIHNlcmlhbF9wb3J0X2R0cl9ydHMoc3RydWN0IHR0eV9w
b3J0ICpwb3J0LCBib29sIG9uKQ0KIHsNCiAJc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcCA9IGNv
bnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0LCBwb3J0KTsNCiAJc3RydWN0
IHVzYl9zZXJpYWxfZHJpdmVyICpkcnYgPSBwLT5zZXJpYWwtPnR5cGU7DQpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC90dHlfcG9ydC5oIGIvaW5jbHVkZS9saW51eC90dHlfcG9ydC5oDQppbmRl
eCBjZjA5ODQ1OWNiMDEuLmM0NGU0ODlkZTBmZiAxMDA2NDQNCi0tLSBhL2luY2x1ZGUvbGludXgv
dHR5X3BvcnQuaA0KKysrIGIvaW5jbHVkZS9saW51eC90dHlfcG9ydC5oDQpAQCAtMTYsNyArMTYs
NyBAQCBzdHJ1Y3QgdHR5X3N0cnVjdDsNCiAvKioNCiAgKiBzdHJ1Y3QgdHR5X3BvcnRfb3BlcmF0
aW9ucyAtLSBvcGVyYXRpb25zIG9uIHR0eV9wb3J0DQogICogQGNhcnJpZXJfcmFpc2VkOiByZXR1
cm4gdHJ1ZSBpZiB0aGUgY2FycmllciBpcyByYWlzZWQgb24gQHBvcnQNCi0gKiBAZHRyX3J0czog
cmFpc2UgdGhlIERUUiBsaW5lIGlmIEByYWlzZSBpcyBub256ZXJvLCBvdGhlcndpc2UgbG93ZXIg
RFRSDQorICogQGR0cl9ydHM6IHJhaXNlIHRoZSBEVFIgbGluZSBpZiBAcmFpc2UgaXMgdHJ1ZSwg
b3RoZXJ3aXNlIGxvd2VyIERUUg0KICAqIEBzaHV0ZG93bjogY2FsbGVkIHdoZW4gdGhlIGxhc3Qg
Y2xvc2UgY29tcGxldGVzIG9yIGEgaGFuZ3VwIGZpbmlzaGVzIElGRiB0aGUNCiAgKglwb3J0IHdh
cyBpbml0aWFsaXplZC4gRG8gbm90IHVzZSB0byBmcmVlIHJlc291cmNlcy4gVHVybiBvZmYgdGhl
IGRldmljZQ0KICAqCW9ubHkuIENhbGxlZCB1bmRlciB0aGUgcG9ydCBtdXRleCB0byBzZXJpYWxp
emUgYWdhaW5zdCBAYWN0aXZhdGUgYW5kDQpAQCAtMzIsNyArMzIsNyBAQCBzdHJ1Y3QgdHR5X3N0
cnVjdDsNCiAgKi8NCiBzdHJ1Y3QgdHR5X3BvcnRfb3BlcmF0aW9ucyB7DQogCWJvb2wgKCpjYXJy
aWVyX3JhaXNlZCkoc3RydWN0IHR0eV9wb3J0ICpwb3J0KTsNCi0Jdm9pZCAoKmR0cl9ydHMpKHN0
cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50IHJhaXNlKTsNCisJdm9pZCAoKmR0cl9ydHMpKHN0cnVj
dCB0dHlfcG9ydCAqcG9ydCwgYm9vbCByYWlzZSk7DQogCXZvaWQgKCpzaHV0ZG93bikoc3RydWN0
IHR0eV9wb3J0ICpwb3J0KTsNCiAJaW50ICgqYWN0aXZhdGUpKHN0cnVjdCB0dHlfcG9ydCAqcG9y
dCwgc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSk7DQogCXZvaWQgKCpkZXN0cnVjdCkoc3RydWN0IHR0
eV9wb3J0ICpwb3J0KTsNCi0tIA0KMi4zMC4yDQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCmdyZXlidXMtZGV2IG1haWxpbmcgbGlzdCAtLSBncmV5YnVz
LWRldkBsaXN0cy5saW5hcm8ub3JnClRvIHVuc3Vic2NyaWJlIHNlbmQgYW4gZW1haWwgdG8gZ3Jl
eWJ1cy1kZXYtbGVhdmVAbGlzdHMubGluYXJvLm9yZwo=
