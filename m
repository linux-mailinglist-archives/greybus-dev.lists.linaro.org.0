Return-Path: <greybus-dev-bounces+lists+greybus-dev=lfdr.de@lists.linaro.org>
X-Original-To: lists+greybus-dev@lfdr.de
Delivered-To: lists+greybus-dev@lfdr.de
Received: from lists.linaro.org (lists.linaro.org [3.208.193.21])
	by mail.lfdr.de (Postfix) with ESMTPS id 373DD665DB1
	for <lists+greybus-dev@lfdr.de>; Wed, 11 Jan 2023 15:24:44 +0100 (CET)
Received: from lists.linaro.org (localhost [127.0.0.1])
	by lists.linaro.org (Postfix) with ESMTP id 275C53EF78
	for <lists+greybus-dev@lfdr.de>; Wed, 11 Jan 2023 14:24:43 +0000 (UTC)
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
	by lists.linaro.org (Postfix) with ESMTPS id A4F773EF78
	for <greybus-dev@lists.linaro.org>; Wed, 11 Jan 2023 14:24:35 +0000 (UTC)
Authentication-Results: lists.linaro.org;
	dkim=pass header.d=intel.com header.s=Intel header.b=jZmdUcES;
	spf=none (lists.linaro.org: domain of ilpo.jarvinen@linux.intel.com has no SPF policy when checking 192.55.52.151) smtp.mailfrom=ilpo.jarvinen@linux.intel.com;
	dmarc=pass (policy=none) header.from=intel.com
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1673447075; x=1704983075;
  h=from:to:cc:subject:date:message-id:in-reply-to:
   references:mime-version:content-transfer-encoding;
  bh=9oM487Gge9nUOySFbYTpTgCIhbjnBQ4+cJwC7unkEbw=;
  b=jZmdUcESSOO0ioZ8eBSfBzNj5YL1dYLblEfZE/oKtUMmd6w4qw/tqY1Y
   h9XAiLbKibuSKYBtpQ4q/tWcoAqu35ocPXp1giDqxvkgkTXL3Tk5kdEaE
   9gCpJjGxf5987MOrbm6qYotKDLbu2Kqf0hE8DApcsDFxMchyoFio5zoKB
   dVeWCbIefAeWj1Ubi3jST/678koW01UeFkfTpynkQ3t7B4lu+5mOD+SVP
   m12s8b2e5OkpkJ6q5RxMbGVZLC9KXZUk2WQmNaqhmB+ZQEcT+uADm+XYr
   xSyBxTZE1prrF9GBABu5+vNFS7SE5sfUsRYScfIEpHcY6b8dOqAjQEfTg
   w==;
X-IronPort-AV: E=McAfee;i="6500,9779,10586"; a="303793631"
X-IronPort-AV: E=Sophos;i="5.96,317,1665471600";
   d="scan'208";a="303793631"
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 11 Jan 2023 06:24:33 -0800
X-IronPort-AV: E=McAfee;i="6500,9779,10586"; a="607381944"
X-IronPort-AV: E=Sophos;i="5.96,317,1665471600";
   d="scan'208";a="607381944"
Received: from mihaiana-mobl1.ger.corp.intel.com (HELO ijarvine-MOBL2.ger.corp.intel.com) ([10.251.222.62])
  by orsmga003-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 11 Jan 2023 06:24:24 -0800
From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
To: linux-serial@vger.kernel.org,
	Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
	Jiri Slaby <jirislaby@kernel.org>,
	Johan Hovold <johan@kernel.org>,
	=?UTF-8?q?Samuel=20Iglesias=20Gons=C3=A1lvez?= <siglesias@igalia.com>,
	Rodolfo Giometti <giometti@enneenne.com>,
	Arnd Bergmann <arnd@arndb.de>,
	Ulf Hansson <ulf.hansson@linaro.org>,
	David Lin <dtwlin@gmail.com>,
	Alex Elder <elder@kernel.org>,
	Shawn Guo <shawnguo@kernel.org>,
	Sascha Hauer <s.hauer@pengutronix.de>,
	Pengutronix Kernel Team <kernel@pengutronix.de>,
	Fabio Estevam <festevam@gmail.com>,
	NXP Linux Team <linux-imx@nxp.com>,
	Oliver Neukum <oneukum@suse.com>,
	linux-kernel@vger.kernel.org,
	linux-mmc@vger.kernel.org,
	greybus-dev@lists.linaro.org,
	linux-staging@lists.linux.dev,
	linuxppc-dev@lists.ozlabs.org,
	linux-arm-kernel@lists.infradead.org,
	linux-usb@vger.kernel.org
Date: Wed, 11 Jan 2023 16:23:25 +0200
Message-Id: <20230111142331.34518-8-ilpo.jarvinen@linux.intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20230111142331.34518-1-ilpo.jarvinen@linux.intel.com>
References: <20230111142331.34518-1-ilpo.jarvinen@linux.intel.com>
MIME-Version: 1.0
X-Spamd-Result: default: False [-2.00 / 15.00];
	BAYES_HAM(-3.00)[100.00%];
	SUSPICIOUS_RECIPS(1.50)[];
	MID_CONTAINS_FROM(1.00)[];
	RCVD_DKIM_ARC_DNSWL_MED(-0.50)[];
	DMARC_POLICY_ALLOW(-0.50)[intel.com,none];
	R_DKIM_ALLOW(-0.20)[intel.com:s=Intel];
	RCVD_IN_DNSWL_MED(-0.20)[192.55.52.151:from];
	MIME_GOOD(-0.10)[text/plain];
	R_SPF_NA(0.00)[no SPF record];
	FREEMAIL_TO(0.00)[vger.kernel.org,linuxfoundation.org,kernel.org,igalia.com,enneenne.com,arndb.de,linaro.org,gmail.com,pengutronix.de,nxp.com,suse.com,lists.linaro.org,lists.linux.dev,lists.ozlabs.org,lists.infradead.org];
	FROM_EQ_ENVFROM(0.00)[];
	RCVD_TLS_LAST(0.00)[];
	ASN(0.00)[asn:4983, ipnet:192.55.52.0/24, country:US];
	MIME_TRACE(0.00)[0:+];
	DKIM_TRACE(0.00)[intel.com:+];
	TO_MATCH_ENVRCPT_SOME(0.00)[];
	NEURAL_HAM(-0.00)[-1.000];
	RCPT_COUNT_TWELVE(0.00)[24];
	FROM_HAS_DN(0.00)[];
	RCVD_COUNT_THREE(0.00)[3];
	TO_DN_SOME(0.00)[];
	ARC_NA(0.00)[]
X-Rspamd-Action: no action
X-Rspamd-Server: lists.linaro.org
X-Rspamd-Queue-Id: A4F773EF78
X-Spamd-Bar: --
Message-ID-Hash: ZVK4F3GMVDJ66TXNWO2XCV7J34W44MPW
X-Message-ID-Hash: ZVK4F3GMVDJ66TXNWO2XCV7J34W44MPW
X-MailFrom: ilpo.jarvinen@linux.intel.com
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
X-Mailman-Version: 3.3.5
Precedence: list
Subject: [greybus-dev] [PATCH v3 07/13] tty: Convert ->dtr_rts() to take bool argument
List-Id: Greybus Development Mail List <greybus-dev.lists.linaro.org>
Archived-At: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/message/ZVK4F3GMVDJ66TXNWO2XCV7J34W44MPW/>
List-Archive: <https://lists.linaro.org/archives/list/greybus-dev@lists.linaro.org/>
List-Help: <mailto:greybus-dev-request@lists.linaro.org?subject=help>
List-Owner: <mailto:greybus-dev-owner@lists.linaro.org>
List-Post: <mailto:greybus-dev@lists.linaro.org>
List-Subscribe: <mailto:greybus-dev-join@lists.linaro.org>
List-Unsubscribe: <mailto:greybus-dev-leave@lists.linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

Q29udmVydCB0aGUgcmFpc2Uvb24gcGFyYW1ldGVyIGluIC0+ZHRyX3J0cygpIHRvIGJvb2wgdGhy
b3VnaCB0aGUNCmNhbGxjaGFpbi4gVGhlIHBhcmFtZXRlciBpcyB1c2VkIGxpa2UgYm9vbC4gSW4g
VVNCIHNlcmlhbCwgdGhlcmUNCnJlbWFpbnMgYSBmZXcgaW1wbGljaXQgYm9vbCAtPiBsYXJnZXIg
dHlwZSBjb252ZXJzaW9ucyBiZWNhdXNlIHNvbWUNCmRldmljZXMgdXNlIHU4IGluIHRoZWlyIGNv
bnRyb2wgbWVzc2FnZXMuDQoNCkluIG1veGFfdGlvY21nZXQoKSwgZHRyIHZhcmlhYmxlIHdhcyBy
ZXVzZWQgZm9yIGxpbmUgc3RhdHVzIHdoaWNoDQpyZXF1aXJlcyBpbnQgc28gdXNlIGEgc2VwYXJh
dGUgdmFyaWFibGUgZm9yIHN0YXR1cy4NCg0KUmV2aWV3ZWQtYnk6IEppcmkgU2xhYnkgPGppcmlz
bGFieUBrZXJuZWwub3JnPg0KU2lnbmVkLW9mZi1ieTogSWxwbyBKw6RydmluZW4gPGlscG8uamFy
dmluZW5AbGludXguaW50ZWwuY29tPg0KLS0tDQogZHJpdmVycy9jaGFyL3BjbWNpYS9zeW5jbGlu
a19jcy5jICAgIHwgIDQgKy0tDQogZHJpdmVycy9tbWMvY29yZS9zZGlvX3VhcnQuYyAgICAgICAg
IHwgIDQgKy0tDQogZHJpdmVycy9zdGFnaW5nL2dyZXlidXMvdWFydC5jICAgICAgIHwgIDIgKy0N
CiBkcml2ZXJzL3R0eS9hbWlzZXJpYWwuYyAgICAgICAgICAgICAgfCAgMiArLQ0KIGRyaXZlcnMv
dHR5L2h2Yy9odmNfY29uc29sZS5jICAgICAgICB8ICA0ICstLQ0KIGRyaXZlcnMvdHR5L2h2Yy9o
dmNfY29uc29sZS5oICAgICAgICB8ICAyICstDQogZHJpdmVycy90dHkvaHZjL2h2Y19pdWN2LmMg
ICAgICAgICAgIHwgIDQgKy0tDQogZHJpdmVycy90dHkvbW94YS5jICAgICAgICAgICAgICAgICAg
IHwgNTQgKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLQ0KIGRyaXZlcnMvdHR5L214c2VyLmMg
ICAgICAgICAgICAgICAgICB8ICAyICstDQogZHJpdmVycy90dHkvbl9nc20uYyAgICAgICAgICAg
ICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsX2NvcmUuYyAgICAgfCAg
OCArKy0tLQ0KIGRyaXZlcnMvdHR5L3N5bmNsaW5rX2d0LmMgICAgICAgICAgICB8ICAyICstDQog
ZHJpdmVycy90dHkvdHR5X3BvcnQuYyAgICAgICAgICAgICAgIHwgIDQgKy0tDQogZHJpdmVycy91
c2IvY2xhc3MvY2RjLWFjbS5jICAgICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3VzYi9zZXJpYWwv
Y2gzNDEuYyAgICAgICAgICAgfCAgMiArLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC9jcDIxMHguYyAg
ICAgICAgICB8ICA0ICstLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC9jeXByZXNzX204LmMgICAgICB8
ICA2ICsrLS0NCiBkcml2ZXJzL3VzYi9zZXJpYWwvZGlnaV9hY2NlbGVwb3J0LmMgfCAgNiArKy0t
DQogZHJpdmVycy91c2Ivc2VyaWFsL2Y4MTIzMi5jICAgICAgICAgIHwgIDIgKy0NCiBkcml2ZXJz
L3VzYi9zZXJpYWwvZjgxNTM0LmMgICAgICAgICAgfCAgMiArLQ0KIGRyaXZlcnMvdXNiL3Nlcmlh
bC9mdGRpX3Npby5jICAgICAgICB8ICAyICstDQogZHJpdmVycy91c2Ivc2VyaWFsL2lwdy5jICAg
ICAgICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3VzYi9zZXJpYWwva2V5c3Bhbi5jICAgICAgICAg
fCAgMiArLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC9rZXlzcGFuX3BkYS5jICAgICB8ICAyICstDQog
ZHJpdmVycy91c2Ivc2VyaWFsL21jdF91MjMyLmMgICAgICAgIHwgIDQgKy0tDQogZHJpdmVycy91
c2Ivc2VyaWFsL214dXBvcnQuYyAgICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3VzYi9zZXJpYWwv
cGwyMzAzLmMgICAgICAgICAgfCAgMiArLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC9xdWF0ZWNoMi5j
ICAgICAgICB8ICAyICstDQogZHJpdmVycy91c2Ivc2VyaWFsL3NpZXJyYS5jICAgICAgICAgIHwg
IDIgKy0NCiBkcml2ZXJzL3VzYi9zZXJpYWwvc3BjcDh4NS5jICAgICAgICAgfCAgMiArLQ0KIGRy
aXZlcnMvdXNiL3NlcmlhbC9zc3UxMDAuYyAgICAgICAgICB8ICAyICstDQogZHJpdmVycy91c2Iv
c2VyaWFsL3VwZDc4ZjA3MzAuYyAgICAgIHwgIDYgKystLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC91
c2Itc2VyaWFsLmMgICAgICB8ICAyICstDQogZHJpdmVycy91c2Ivc2VyaWFsL3VzYi13d2FuLmgg
ICAgICAgIHwgIDIgKy0NCiBkcml2ZXJzL3VzYi9zZXJpYWwvdXNiX3d3YW4uYyAgICAgICAgfCAg
MiArLQ0KIGRyaXZlcnMvdXNiL3NlcmlhbC94cl9zZXJpYWwuYyAgICAgICB8ICA2ICsrLS0NCiBp
bmNsdWRlL2xpbnV4L3R0eV9wb3J0LmggICAgICAgICAgICAgfCAgNCArLS0NCiBpbmNsdWRlL2xp
bnV4L3VzYi9zZXJpYWwuaCAgICAgICAgICAgfCAgMiArLQ0KIDM4IGZpbGVzIGNoYW5nZWQsIDg0
IGluc2VydGlvbnMoKyksIDgyIGRlbGV0aW9ucygtKQ0KDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9j
aGFyL3BjbWNpYS9zeW5jbGlua19jcy5jIGIvZHJpdmVycy9jaGFyL3BjbWNpYS9zeW5jbGlua19j
cy5jDQppbmRleCA0MzkxMTM4ZTFiOGEuLjQ2YTBiNTg2ZDIzNCAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvY2hhci9wY21jaWEvc3luY2xpbmtfY3MuYw0KKysrIGIvZHJpdmVycy9jaGFyL3BjbWNpYS9z
eW5jbGlua19jcy5jDQpAQCAtMzc4LDcgKzM3OCw3IEBAIHN0YXRpYyB2b2lkIGFzeW5jX21vZGUo
TUdTTFBDX0lORk8gKmluZm8pOw0KIHN0YXRpYyB2b2lkIHR4X3RpbWVvdXQoc3RydWN0IHRpbWVy
X2xpc3QgKnQpOw0KIA0KIHN0YXRpYyBib29sIGNhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlfcG9y
dCAqcG9ydCk7DQotc3RhdGljIHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGlu
dCBvbm9mZik7DQorc3RhdGljIHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJv
b2wgb25vZmYpOw0KIA0KICNpZiBTWU5DTElOS19HRU5FUklDX0hETEMNCiAjZGVmaW5lIGRldl90
b19wb3J0KEQpIChkZXZfdG9faGRsYyhEKS0+cHJpdikNCkBAIC0yNDQyLDcgKzI0NDIsNyBAQCBz
dGF0aWMgYm9vbCBjYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVy
biBpbmZvLT5zZXJpYWxfc2lnbmFscyAmIFNlcmlhbFNpZ25hbF9EQ0Q7DQogfQ0KIA0KLXN0YXRp
YyB2b2lkIGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBpbnQgb25vZmYpDQorc3RhdGlj
IHZvaWQgZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgb25vZmYpDQogew0KIAlN
R1NMUENfSU5GTyAqaW5mbyA9IGNvbnRhaW5lcl9vZihwb3J0LCBNR1NMUENfSU5GTywgcG9ydCk7
DQogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9tbWMvY29yZS9z
ZGlvX3VhcnQuYyBiL2RyaXZlcnMvbW1jL2NvcmUvc2Rpb191YXJ0LmMNCmluZGV4IDQ3ZjU4MjU4
ZDhmZi4uYzZiNGIyYjJhNGIyIDEwMDY0NA0KLS0tIGEvZHJpdmVycy9tbWMvY29yZS9zZGlvX3Vh
cnQuYw0KKysrIGIvZHJpdmVycy9tbWMvY29yZS9zZGlvX3VhcnQuYw0KQEAgLTU0OCwxNCArNTQ4
LDE0IEBAIHN0YXRpYyBib29sIHVhcnRfY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICp0
cG9ydCkNCiAgKglhZGp1c3RlZCBkdXJpbmcgYW4gb3BlbiwgY2xvc2UgYW5kIGhhbmd1cC4NCiAg
Ki8NCiANCi1zdGF0aWMgdm9pZCB1YXJ0X2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICp0cG9ydCwg
aW50IG9ub2ZmKQ0KK3N0YXRpYyB2b2lkIHVhcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnRw
b3J0LCBib29sIG9ub2ZmKQ0KIHsNCiAJc3RydWN0IHNkaW9fdWFydF9wb3J0ICpwb3J0ID0NCiAJ
CQljb250YWluZXJfb2YodHBvcnQsIHN0cnVjdCBzZGlvX3VhcnRfcG9ydCwgcG9ydCk7DQogCWlu
dCByZXQgPSBzZGlvX3VhcnRfY2xhaW1fZnVuYyhwb3J0KTsNCiAJaWYgKHJldCkNCiAJCXJldHVy
bjsNCi0JaWYgKG9ub2ZmID09IDApDQorCWlmICghb25vZmYpDQogCQlzZGlvX3VhcnRfY2xlYXJf
bWN0cmwocG9ydCwgVElPQ01fRFRSIHwgVElPQ01fUlRTKTsNCiAJZWxzZQ0KIAkJc2Rpb191YXJ0
X3NldF9tY3RybChwb3J0LCBUSU9DTV9EVFIgfCBUSU9DTV9SVFMpOw0KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvc3RhZ2luZy9ncmV5YnVzL3VhcnQuYyBiL2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVzL3Vh
cnQuYw0KaW5kZXggOTBmZjA3ZjJjYmY3Li45MmQ0OTc0MGQ1YTQgMTAwNjQ0DQotLS0gYS9kcml2
ZXJzL3N0YWdpbmcvZ3JleWJ1cy91YXJ0LmMNCisrKyBiL2RyaXZlcnMvc3RhZ2luZy9ncmV5YnVz
L3VhcnQuYw0KQEAgLTcwMSw3ICs3MDEsNyBAQCBzdGF0aWMgaW50IGdiX3R0eV9pb2N0bChzdHJ1
Y3QgdHR5X3N0cnVjdCAqdHR5LCB1bnNpZ25lZCBpbnQgY21kLA0KIAlyZXR1cm4gLUVOT0lPQ1RM
Q01EOw0KIH0NCiANCi1zdGF0aWMgdm9pZCBnYl90dHlfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCBnYl90dHlfZHRyX3J0cyhzdHJ1Y3QgdHR5X3Bv
cnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAlzdHJ1Y3QgZ2JfdHR5ICpnYl90dHk7DQogCXU4IG5l
d2N0cmw7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvYW1pc2VyaWFsLmMgYi9kcml2ZXJzL3R0
eS9hbWlzZXJpYWwuYw0KaW5kZXggMDFjNGZkM2NlN2M4Li4yOWQ0YzU1NGY2YjggMTAwNjQ0DQot
LS0gYS9kcml2ZXJzL3R0eS9hbWlzZXJpYWwuYw0KKysrIGIvZHJpdmVycy90dHkvYW1pc2VyaWFs
LmMNCkBAIC0xNDU5LDcgKzE0NTksNyBAQCBzdGF0aWMgYm9vbCBhbWlnYV9jYXJyaWVyX3JhaXNl
ZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVybiAhKGNpYWIucHJhICYgU0VSX0RDRCk7
DQogfQ0KIA0KLXN0YXRpYyB2b2lkIGFtaWdhX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0
LCBpbnQgcmFpc2UpDQorc3RhdGljIHZvaWQgYW1pZ2FfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQsIGJvb2wgcmFpc2UpDQogew0KIAlzdHJ1Y3Qgc2VyaWFsX3N0YXRlICppbmZvID0gY29u
dGFpbmVyX29mKHBvcnQsIHN0cnVjdCBzZXJpYWxfc3RhdGUsDQogCQkJdHBvcnQpOw0KZGlmZiAt
LWdpdCBhL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5jIGIvZHJpdmVycy90dHkvaHZjL2h2
Y19jb25zb2xlLmMNCmluZGV4IGE2ODNlMjFkZjE5Yy4uMTBjMTBjZmRmOTJhIDEwMDY0NA0KLS0t
IGEvZHJpdmVycy90dHkvaHZjL2h2Y19jb25zb2xlLmMNCisrKyBiL2RyaXZlcnMvdHR5L2h2Yy9o
dmNfY29uc29sZS5jDQpAQCAtMzc2LDcgKzM3Niw3IEBAIHN0YXRpYyBpbnQgaHZjX29wZW4oc3Ry
dWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IGZpbGUgKiBmaWxwKQ0KIAkJLyogV2UgYXJlIHJl
YWR5Li4uIHJhaXNlIERUUi9SVFMgKi8NCiAJCWlmIChDX0JBVUQodHR5KSkNCiAJCQlpZiAoaHAt
Pm9wcy0+ZHRyX3J0cykNCi0JCQkJaHAtPm9wcy0+ZHRyX3J0cyhocCwgMSk7DQorCQkJCWhwLT5v
cHMtPmR0cl9ydHMoaHAsIHRydWUpOw0KIAkJdHR5X3BvcnRfc2V0X2luaXRpYWxpemVkKCZocC0+
cG9ydCwgdHJ1ZSk7DQogCX0NCiANCkBAIC00MDYsNyArNDA2LDcgQEAgc3RhdGljIHZvaWQgaHZj
X2Nsb3NlKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHN0cnVjdCBmaWxlICogZmlscCkNCiANCiAJ
CWlmIChDX0hVUENMKHR0eSkpDQogCQkJaWYgKGhwLT5vcHMtPmR0cl9ydHMpDQotCQkJCWhwLT5v
cHMtPmR0cl9ydHMoaHAsIDApOw0KKwkJCQlocC0+b3BzLT5kdHJfcnRzKGhwLCBmYWxzZSk7DQog
DQogCQlpZiAoaHAtPm9wcy0+bm90aWZpZXJfZGVsKQ0KIAkJCWhwLT5vcHMtPm5vdGlmaWVyX2Rl
bChocCwgaHAtPmRhdGEpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29s
ZS5oIGIvZHJpdmVycy90dHkvaHZjL2h2Y19jb25zb2xlLmgNCmluZGV4IDE4ZDAwNTgxNGU0Yi4u
NmQzNDI4YmY4NjhmIDEwMDY0NA0KLS0tIGEvZHJpdmVycy90dHkvaHZjL2h2Y19jb25zb2xlLmgN
CisrKyBiL2RyaXZlcnMvdHR5L2h2Yy9odmNfY29uc29sZS5oDQpAQCAtNjYsNyArNjYsNyBAQCBz
dHJ1Y3QgaHZfb3BzIHsNCiAJaW50ICgqdGlvY21zZXQpKHN0cnVjdCBodmNfc3RydWN0ICpocCwg
dW5zaWduZWQgaW50IHNldCwgdW5zaWduZWQgaW50IGNsZWFyKTsNCiANCiAJLyogQ2FsbGJhY2tz
IHRvIGhhbmRsZSB0dHkgcG9ydHMgKi8NCi0Jdm9pZCAoKmR0cl9ydHMpKHN0cnVjdCBodmNfc3Ry
dWN0ICpocCwgaW50IHJhaXNlKTsNCisJdm9pZCAoKmR0cl9ydHMpKHN0cnVjdCBodmNfc3RydWN0
ICpocCwgYm9vbCByYWlzZSk7DQogfTsNCiANCiAvKiBSZWdpc3RlciBhIHZ0ZXJtIGFuZCBhIHNs
b3QgaW5kZXggZm9yIHVzZSBhcyBhIGNvbnNvbGUgKGNvbnNvbGVfaW5pdCkgKi8NCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3R0eS9odmMvaHZjX2l1Y3YuYyBiL2RyaXZlcnMvdHR5L2h2Yy9odmNfaXVj
di5jDQppbmRleCA3ZDQ5YTg3MmRlNDguLmZlODYyYTY4ODJkNiAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvdHR5L2h2Yy9odmNfaXVjdi5jDQorKysgYi9kcml2ZXJzL3R0eS9odmMvaHZjX2l1Y3YuYw0K
QEAgLTY1OCwxMyArNjU4LDEzIEBAIHN0YXRpYyB2b2lkIGh2Y19pdWN2X25vdGlmaWVyX2hhbmd1
cChzdHJ1Y3QgaHZjX3N0cnVjdCAqaHAsIGludCBpZCkNCiAvKioNCiAgKiBodmNfaXVjdl9kdHJf
cnRzKCkgLSBIVkMgbm90aWZpZXIgZm9yIGhhbmRsaW5nIERUUi9SVFMNCiAgKiBAaHA6CQlQb2lu
dGVyIHRoZSBIVkMgZGV2aWNlIChzdHJ1Y3QgaHZjX3N0cnVjdCkNCi0gKiBAcmFpc2U6CU5vbi16
ZXJvIHRvIHJhaXNlIG9yIHplcm8gdG8gbG93ZXIgRFRSL1JUUyBsaW5lcw0KKyAqIEByYWlzZToJ
VHJ1ZSB0byByYWlzZSBvciBmYWxzZSB0byBsb3dlciBEVFIvUlRTIGxpbmVzDQogICoNCiAgKiBU
aGlzIHJvdXRpbmUgbm90aWZpZXMgdGhlIEhWQyBiYWNrLWVuZCB0byByYWlzZSBvciBsb3dlciBE
VFIvUlRTDQogICogbGluZXMuICBSYWlzaW5nIERUUi9SVFMgaXMgaWdub3JlZC4gIExvd2VyaW5n
IERUUi9SVFMgaW5kaWNhdGVzIHRvDQogICogZHJvcCB0aGUgSVVDViBjb25uZWN0aW9uIChzaW1p
bGFyIHRvIGhhbmcgdXAgdGhlIG1vZGVtKS4NCiAgKi8NCi1zdGF0aWMgdm9pZCBodmNfaXVjdl9k
dHJfcnRzKHN0cnVjdCBodmNfc3RydWN0ICpocCwgaW50IHJhaXNlKQ0KK3N0YXRpYyB2b2lkIGh2
Y19pdWN2X2R0cl9ydHMoc3RydWN0IGh2Y19zdHJ1Y3QgKmhwLCBib29sIHJhaXNlKQ0KIHsNCiAJ
c3RydWN0IGh2Y19pdWN2X3ByaXZhdGUgKnByaXY7DQogCXN0cnVjdCBpdWN2X3BhdGggICAgICAg
ICpwYXRoOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L21veGEuYyBiL2RyaXZlcnMvdHR5L21v
eGEuYw0KaW5kZXggNmExZTc4ZTMzYTJjLi45YmUzZDU4NWQ1YTkgMTAwNjQ0DQotLS0gYS9kcml2
ZXJzL3R0eS9tb3hhLmMNCisrKyBiL2RyaXZlcnMvdHR5L21veGEuYw0KQEAgLTUwMiwxNSArNTAy
LDE1IEBAIHN0YXRpYyB2b2lkIG1veGFfcG9sbChzdHJ1Y3QgdGltZXJfbGlzdCAqKTsNCiBzdGF0
aWMgdm9pZCBtb3hhX3NldF90dHlfcGFyYW0oc3RydWN0IHR0eV9zdHJ1Y3QgKiwgY29uc3Qgc3Ry
dWN0IGt0ZXJtaW9zICopOw0KIHN0YXRpYyB2b2lkIG1veGFfc2h1dGRvd24oc3RydWN0IHR0eV9w
b3J0ICopOw0KIHN0YXRpYyBib29sIG1veGFfY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0
ICopOw0KLXN0YXRpYyB2b2lkIG1veGFfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKiwgaW50KTsN
CitzdGF0aWMgdm9pZCBtb3hhX2R0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICosIGJvb2wpOw0KIC8q
DQogICogbW94YSBib2FyZCBpbnRlcmZhY2UgZnVuY3Rpb25zOg0KICAqLw0KIHN0YXRpYyB2b2lk
IE1veGFQb3J0RW5hYmxlKHN0cnVjdCBtb3hhX3BvcnQgKik7DQogc3RhdGljIHZvaWQgTW94YVBv
cnREaXNhYmxlKHN0cnVjdCBtb3hhX3BvcnQgKik7DQogc3RhdGljIGludCBNb3hhUG9ydFNldFRl
cm1pbyhzdHJ1Y3QgbW94YV9wb3J0ICosIHN0cnVjdCBrdGVybWlvcyAqLCBzcGVlZF90KTsNCi1z
dGF0aWMgaW50IE1veGFQb3J0R2V0TGluZU91dChzdHJ1Y3QgbW94YV9wb3J0ICosIGludCAqLCBp
bnQgKik7DQotc3RhdGljIHZvaWQgTW94YVBvcnRMaW5lQ3RybChzdHJ1Y3QgbW94YV9wb3J0ICos
IGludCwgaW50KTsNCitzdGF0aWMgaW50IE1veGFQb3J0R2V0TGluZU91dChzdHJ1Y3QgbW94YV9w
b3J0ICosIGJvb2wgKiwgYm9vbCAqKTsNCitzdGF0aWMgdm9pZCBNb3hhUG9ydExpbmVDdHJsKHN0
cnVjdCBtb3hhX3BvcnQgKiwgYm9vbCwgYm9vbCk7DQogc3RhdGljIHZvaWQgTW94YVBvcnRGbG93
Q3RybChzdHJ1Y3QgbW94YV9wb3J0ICosIGludCwgaW50LCBpbnQsIGludCwgaW50KTsNCiBzdGF0
aWMgaW50IE1veGFQb3J0TGluZVN0YXR1cyhzdHJ1Y3QgbW94YV9wb3J0ICopOw0KIHN0YXRpYyB2
b2lkIE1veGFQb3J0Rmx1c2hEYXRhKHN0cnVjdCBtb3hhX3BvcnQgKiwgaW50KTsNCkBAIC0xNDQz
LDcgKzE0NDMsNyBAQCBzdGF0aWMgYm9vbCBtb3hhX2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB0dHlf
cG9ydCAqcG9ydCkNCiAJcmV0dXJuIGRjZDsNCiB9DQogDQotc3RhdGljIHZvaWQgbW94YV9kdHJf
cnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50IG9ub2ZmKQ0KK3N0YXRpYyB2b2lkIG1veGFf
ZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgb25vZmYpDQogew0KIAlzdHJ1Y3Qg
bW94YV9wb3J0ICpjaCA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3QgbW94YV9wb3J0LCBwb3J0
KTsNCiAJTW94YVBvcnRMaW5lQ3RybChjaCwgb25vZmYsIG9ub2ZmKTsNCkBAIC0xNDgxLDcgKzE0
ODEsNyBAQCBzdGF0aWMgaW50IG1veGFfb3BlbihzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1
Y3QgZmlsZSAqZmlscCkNCiAJaWYgKCF0dHlfcG9ydF9pbml0aWFsaXplZCgmY2gtPnBvcnQpKSB7
DQogCQljaC0+c3RhdHVzZmxhZ3MgPSAwOw0KIAkJbW94YV9zZXRfdHR5X3BhcmFtKHR0eSwgJnR0
eS0+dGVybWlvcyk7DQotCQlNb3hhUG9ydExpbmVDdHJsKGNoLCAxLCAxKTsNCisJCU1veGFQb3J0
TGluZUN0cmwoY2gsIHRydWUsIHRydWUpOw0KIAkJTW94YVBvcnRFbmFibGUoY2gpOw0KIAkJTW94
YVNldEZpZm8oY2gsIGNoLT50eXBlID09IFBPUlRfMTY1NTBBKTsNCiAJCXR0eV9wb3J0X3NldF9p
bml0aWFsaXplZCgmY2gtPnBvcnQsIHRydWUpOw0KQEAgLTE1NTcsMTkgKzE1NTcsMjEgQEAgc3Rh
dGljIHVuc2lnbmVkIGludCBtb3hhX2NoYXJzX2luX2J1ZmZlcihzdHJ1Y3QgdHR5X3N0cnVjdCAq
dHR5KQ0KIHN0YXRpYyBpbnQgbW94YV90aW9jbWdldChzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5KQ0K
IHsNCiAJc3RydWN0IG1veGFfcG9ydCAqY2ggPSB0dHktPmRyaXZlcl9kYXRhOw0KLQlpbnQgZmxh
ZyA9IDAsIGR0ciwgcnRzOw0KKwlib29sIGR0ciwgcnRzOw0KKwlpbnQgZmxhZyA9IDA7DQorCWlu
dCBzdGF0dXM7DQogDQogCU1veGFQb3J0R2V0TGluZU91dChjaCwgJmR0ciwgJnJ0cyk7DQogCWlm
IChkdHIpDQogCQlmbGFnIHw9IFRJT0NNX0RUUjsNCiAJaWYgKHJ0cykNCiAJCWZsYWcgfD0gVElP
Q01fUlRTOw0KLQlkdHIgPSBNb3hhUG9ydExpbmVTdGF0dXMoY2gpOw0KLQlpZiAoZHRyICYgMSkN
CisJc3RhdHVzID0gTW94YVBvcnRMaW5lU3RhdHVzKGNoKTsNCisJaWYgKHN0YXR1cyAmIDEpDQog
CQlmbGFnIHw9IFRJT0NNX0NUUzsNCi0JaWYgKGR0ciAmIDIpDQorCWlmIChzdGF0dXMgJiAyKQ0K
IAkJZmxhZyB8PSBUSU9DTV9EU1I7DQotCWlmIChkdHIgJiA0KQ0KKwlpZiAoc3RhdHVzICYgNCkN
CiAJCWZsYWcgfD0gVElPQ01fQ0Q7DQogCXJldHVybiBmbGFnOw0KIH0NCkBAIC0xNTc4LDcgKzE1
ODAsNyBAQCBzdGF0aWMgaW50IG1veGFfdGlvY21zZXQoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwN
CiAJCQkgdW5zaWduZWQgaW50IHNldCwgdW5zaWduZWQgaW50IGNsZWFyKQ0KIHsNCiAJc3RydWN0
IG1veGFfcG9ydCAqY2g7DQotCWludCBkdHIsIHJ0czsNCisJYm9vbCBkdHIsIHJ0czsNCiANCiAJ
bXV0ZXhfbG9jaygmbW94YV9vcGVubG9jayk7DQogCWNoID0gdHR5LT5kcml2ZXJfZGF0YTsNCkBA
IC0xNTg5LDEzICsxNTkxLDEzIEBAIHN0YXRpYyBpbnQgbW94YV90aW9jbXNldChzdHJ1Y3QgdHR5
X3N0cnVjdCAqdHR5LA0KIA0KIAlNb3hhUG9ydEdldExpbmVPdXQoY2gsICZkdHIsICZydHMpOw0K
IAlpZiAoc2V0ICYgVElPQ01fUlRTKQ0KLQkJcnRzID0gMTsNCisJCXJ0cyA9IHRydWU7DQogCWlm
IChzZXQgJiBUSU9DTV9EVFIpDQotCQlkdHIgPSAxOw0KKwkJZHRyID0gdHJ1ZTsNCiAJaWYgKGNs
ZWFyICYgVElPQ01fUlRTKQ0KLQkJcnRzID0gMDsNCisJCXJ0cyA9IGZhbHNlOw0KIAlpZiAoY2xl
YXIgJiBUSU9DTV9EVFIpDQotCQlkdHIgPSAwOw0KKwkJZHRyID0gZmFsc2U7DQogCU1veGFQb3J0
TGluZUN0cmwoY2gsIGR0ciwgcnRzKTsNCiAJbXV0ZXhfdW5sb2NrKCZtb3hhX29wZW5sb2NrKTsN
CiAJcmV0dXJuIDA7DQpAQCAtMTg3NywxMiArMTg3OSwxMiBAQCBzdGF0aWMgdm9pZCBNb3hhUG9y
dEZsdXNoRGF0YShzdHJ1Y3QgbW94YV9wb3J0ICpwb3J0LCBpbnQgbW9kZSkNCiAgKg0KICAqICAg
ICAgRnVuY3Rpb24gMTM6ICAgIEdldCB0aGUgRFRSL1JUUyBzdGF0ZSBvZiB0aGlzIHBvcnQuDQog
ICogICAgICBTeW50YXg6DQotICogICAgICBpbnQgIE1veGFQb3J0R2V0TGluZU91dChpbnQgcG9y
dCwgaW50ICpkdHJTdGF0ZSwgaW50ICpydHNTdGF0ZSk7DQorICogICAgICBpbnQgIE1veGFQb3J0
R2V0TGluZU91dChpbnQgcG9ydCwgYm9vbCAqZHRyU3RhdGUsIGJvb2wgKnJ0c1N0YXRlKTsNCiAg
KiAgICAgICAgICAgaW50IHBvcnQgICAgICAgICAgIDogcG9ydCBudW1iZXIgKDAgLSAxMjcpDQot
ICogICAgICAgICAgIGludCAqIGR0clN0YXRlICAgICA6IHBvaW50ZXIgdG8gSU5UIHRvIHJlY2Vp
dmUgdGhlIGN1cnJlbnQgRFRSDQorICogICAgICAgICAgIGJvb2wgKiBkdHJTdGF0ZSAgICA6IHBv
aW50ZXIgdG8gYm9vbCB0byByZWNlaXZlIHRoZSBjdXJyZW50IERUUg0KICAqICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBzdGF0ZS4gKGlmIE5VTEwsIHRoaXMgZnVuY3Rpb24gd2lsbCBu
b3QNCiAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGUgdG8gdGhpcyBhZGRy
ZXNzKQ0KLSAqICAgICAgICAgICBpbnQgKiBydHNTdGF0ZSAgICAgOiBwb2ludGVyIHRvIElOVCB0
byByZWNlaXZlIHRoZSBjdXJyZW50IFJUUw0KKyAqICAgICAgICAgICBib29sICogcnRzU3RhdGUg
ICAgOiBwb2ludGVyIHRvIGJvb2wgdG8gcmVjZWl2ZSB0aGUgY3VycmVudCBSVFMNCiAgKiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUuIChpZiBOVUxMLCB0aGlzIGZ1bmN0aW9u
IHdpbGwgbm90DQogICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlIHRvIHRo
aXMgYWRkcmVzcykNCiAgKg0KQEAgLTE4OTIsMTAgKzE4OTQsMTAgQEAgc3RhdGljIHZvaWQgTW94
YVBvcnRGbHVzaERhdGEoc3RydWN0IG1veGFfcG9ydCAqcG9ydCwgaW50IG1vZGUpDQogICoNCiAg
KiAgICAgIEZ1bmN0aW9uIDE0OiAgICBTZXR0aW5nIHRoZSBEVFIvUlRTIG91dHB1dCBzdGF0ZSBv
ZiB0aGlzIHBvcnQuDQogICogICAgICBTeW50YXg6DQotICogICAgICB2b2lkIE1veGFQb3J0TGlu
ZUN0cmwoaW50IHBvcnQsIGludCBkdHJTdGF0ZSwgaW50IHJ0c1N0YXRlKTsNCisgKiAgICAgIHZv
aWQgTW94YVBvcnRMaW5lQ3RybChpbnQgcG9ydCwgYm9vbCBkdHJTdGF0ZSwgYm9vbCBydHNTdGF0
ZSk7DQogICogICAgICAgICAgIGludCBwb3J0ICAgICAgICAgICA6IHBvcnQgbnVtYmVyICgwIC0g
MTI3KQ0KLSAqICAgICAgICAgICBpbnQgZHRyU3RhdGUgICAgICAgOiBEVFIgb3V0cHV0IHN0YXRl
ICgwOiBvZmYsIDE6IG9uKQ0KLSAqICAgICAgICAgICBpbnQgcnRzU3RhdGUgICAgICAgOiBSVFMg
b3V0cHV0IHN0YXRlICgwOiBvZmYsIDE6IG9uKQ0KKyAqICAgICAgICAgICBib29sIGR0clN0YXRl
ICAgICAgOiBEVFIgb3V0cHV0IHN0YXRlDQorICogICAgICAgICAgIGJvb2wgcnRzU3RhdGUgICAg
ICA6IFJUUyBvdXRwdXQgc3RhdGUNCiAgKg0KICAqDQogICogICAgICBGdW5jdGlvbiAxNTogICAg
U2V0dGluZyB0aGUgZmxvdyBjb250cm9sIG9mIHRoaXMgcG9ydC4NCkBAIC0yMTAzLDE4ICsyMTA1
LDE4IEBAIHN0YXRpYyBpbnQgTW94YVBvcnRTZXRUZXJtaW8oc3RydWN0IG1veGFfcG9ydCAqcG9y
dCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW8sDQogCXJldHVybiBiYXVkOw0KIH0NCiANCi1zdGF0
aWMgaW50IE1veGFQb3J0R2V0TGluZU91dChzdHJ1Y3QgbW94YV9wb3J0ICpwb3J0LCBpbnQgKmR0
clN0YXRlLA0KLQkJaW50ICpydHNTdGF0ZSkNCitzdGF0aWMgaW50IE1veGFQb3J0R2V0TGluZU91
dChzdHJ1Y3QgbW94YV9wb3J0ICpwb3J0LCBib29sICpkdHJTdGF0ZSwNCisJCWJvb2wgKnJ0c1N0
YXRlKQ0KIHsNCiAJaWYgKGR0clN0YXRlKQ0KLQkJKmR0clN0YXRlID0gISEocG9ydC0+bGluZUN0
cmwgJiBEVFJfT04pOw0KKwkJKmR0clN0YXRlID0gcG9ydC0+bGluZUN0cmwgJiBEVFJfT047DQog
CWlmIChydHNTdGF0ZSkNCi0JCSpydHNTdGF0ZSA9ICEhKHBvcnQtPmxpbmVDdHJsICYgUlRTX09O
KTsNCisJCSpydHNTdGF0ZSA9IHBvcnQtPmxpbmVDdHJsICYgUlRTX09OOw0KIA0KIAlyZXR1cm4g
MDsNCiB9DQogDQotc3RhdGljIHZvaWQgTW94YVBvcnRMaW5lQ3RybChzdHJ1Y3QgbW94YV9wb3J0
ICpwb3J0LCBpbnQgZHRyLCBpbnQgcnRzKQ0KK3N0YXRpYyB2b2lkIE1veGFQb3J0TGluZUN0cmwo
c3RydWN0IG1veGFfcG9ydCAqcG9ydCwgYm9vbCBkdHIsIGJvb2wgcnRzKQ0KIHsNCiAJdTggbW9k
ZSA9IDA7DQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvbXhzZXIuYyBiL2RyaXZlcnMvdHR5
L214c2VyLmMNCmluZGV4IDk2YzcyZTY5MWNkNy4uZDRmYjExZTM5YmIxIDEwMDY0NA0KLS0tIGEv
ZHJpdmVycy90dHkvbXhzZXIuYw0KKysrIGIvZHJpdmVycy90dHkvbXhzZXIuYw0KQEAgLTQ2NSw3
ICs0NjUsNyBAQCBzdGF0aWMgYm9vbCBteHNlcl9jYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3Bv
cnQgKnBvcnQpDQogCXJldHVybiBpbmIobXAtPmlvYWRkciArIFVBUlRfTVNSKSAmIFVBUlRfTVNS
X0RDRDsNCiB9DQogDQotc3RhdGljIHZvaWQgbXhzZXJfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCBteHNlcl9kdHJfcnRzKHN0cnVjdCB0dHlfcG9y
dCAqcG9ydCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCBteHNlcl9wb3J0ICptcCA9IGNvbnRhaW5l
cl9vZihwb3J0LCBzdHJ1Y3QgbXhzZXJfcG9ydCwgcG9ydCk7DQogCXVuc2lnbmVkIGxvbmcgZmxh
Z3M7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvbl9nc20uYyBiL2RyaXZlcnMvdHR5L25fZ3Nt
LmMNCmluZGV4IDgxZmMyZWMzNjkzZi4uOGRkMGQ2NDQxYzQyIDEwMDY0NA0KLS0tIGEvZHJpdmVy
cy90dHkvbl9nc20uYw0KKysrIGIvZHJpdmVycy90dHkvbl9nc20uYw0KQEAgLTM3OTIsNyArMzc5
Miw3IEBAIHN0YXRpYyBib29sIGdzbV9jYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBv
cnQpDQogCXJldHVybiBkbGNpLT5tb2RlbV9yeCAmIFRJT0NNX0NEOw0KIH0NCiANCi1zdGF0aWMg
dm9pZCBnc21fZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGludCBvbm9mZikNCitzdGF0
aWMgdm9pZCBnc21fZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgb25vZmYpDQog
ew0KIAlzdHJ1Y3QgZ3NtX2RsY2kgKmRsY2kgPSBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IGdz
bV9kbGNpLCBwb3J0KTsNCiAJdW5zaWduZWQgaW50IG1vZGVtX3R4ID0gZGxjaS0+bW9kZW1fdHg7
DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMgYi9kcml2ZXJz
L3R0eS9zZXJpYWwvc2VyaWFsX2NvcmUuYw0KaW5kZXggMjBlZDhhMDg4YjJkLi4wNTM1MzU4NDZi
YTIgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsX2NvcmUuYw0KKysrIGIv
ZHJpdmVycy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMNCkBAIC0xNjksNyArMTY5LDcgQEAgdWFy
dF91cGRhdGVfbWN0cmwoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IHNldCwg
dW5zaWduZWQgaW50IGNsZWFyKQ0KICNkZWZpbmUgdWFydF9zZXRfbWN0cmwocG9ydCwgc2V0KQl1
YXJ0X3VwZGF0ZV9tY3RybChwb3J0LCBzZXQsIDApDQogI2RlZmluZSB1YXJ0X2NsZWFyX21jdHJs
KHBvcnQsIGNsZWFyKQl1YXJ0X3VwZGF0ZV9tY3RybChwb3J0LCAwLCBjbGVhcikNCiANCi1zdGF0
aWMgdm9pZCB1YXJ0X3BvcnRfZHRyX3J0cyhzdHJ1Y3QgdWFydF9wb3J0ICp1cG9ydCwgaW50IHJh
aXNlKQ0KK3N0YXRpYyB2b2lkIHVhcnRfcG9ydF9kdHJfcnRzKHN0cnVjdCB1YXJ0X3BvcnQgKnVw
b3J0LCBib29sIHJhaXNlKQ0KIHsNCiAJaWYgKHJhaXNlKQ0KIAkJdWFydF9zZXRfbWN0cmwodXBv
cnQsIFRJT0NNX0RUUiB8IFRJT0NNX1JUUyk7DQpAQCAtMjM5LDcgKzIzOSw3IEBAIHN0YXRpYyBp
bnQgdWFydF9wb3J0X3N0YXJ0dXAoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IHVhcnRf
c3RhdGUgKnN0YXRlLA0KIAkJICogcG9ydCBpcyBvcGVuIGFuZCByZWFkeSB0byByZXNwb25kLg0K
IAkJICovDQogCQlpZiAoaW5pdF9odyAmJiBDX0JBVUQodHR5KSkNCi0JCQl1YXJ0X3BvcnRfZHRy
X3J0cyh1cG9ydCwgMSk7DQorCQkJdWFydF9wb3J0X2R0cl9ydHModXBvcnQsIHRydWUpOw0KIAl9
DQogDQogCS8qDQpAQCAtMzAyLDcgKzMwMiw3IEBAIHN0YXRpYyB2b2lkIHVhcnRfc2h1dGRvd24o
c3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IHVhcnRfc3RhdGUgKnN0YXRlKQ0KIAkJfQ0K
IA0KIAkJaWYgKCF0dHkgfHwgQ19IVVBDTCh0dHkpKQ0KLQkJCXVhcnRfcG9ydF9kdHJfcnRzKHVw
b3J0LCAwKTsNCisJCQl1YXJ0X3BvcnRfZHRyX3J0cyh1cG9ydCwgZmFsc2UpOw0KIA0KIAkJdWFy
dF9wb3J0X3NodXRkb3duKHBvcnQpOw0KIAl9DQpAQCAtMTg4NSw3ICsxODg1LDcgQEAgc3RhdGlj
IGJvb2wgdWFydF9jYXJyaWVyX3JhaXNlZChzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQpDQogCXJldHVy
biBtY3RybCAmIFRJT0NNX0NBUjsNCiB9DQogDQotc3RhdGljIHZvaWQgdWFydF9kdHJfcnRzKHN0
cnVjdCB0dHlfcG9ydCAqcG9ydCwgaW50IHJhaXNlKQ0KK3N0YXRpYyB2b2lkIHVhcnRfZHRyX3J0
cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgcmFpc2UpDQogew0KIAlzdHJ1Y3QgdWFydF9z
dGF0ZSAqc3RhdGUgPSBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IHVhcnRfc3RhdGUsIHBvcnQp
Ow0KIAlzdHJ1Y3QgdWFydF9wb3J0ICp1cG9ydDsNCmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
eW5jbGlua19ndC5jIGIvZHJpdmVycy90dHkvc3luY2xpbmtfZ3QuYw0KaW5kZXggNGJhNzFlYzc2
NGY3Li4yYjc4NjI2NWNlN2IgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3R0eS9zeW5jbGlua19ndC5j
DQorKysgYi9kcml2ZXJzL3R0eS9zeW5jbGlua19ndC5jDQpAQCAtMzEzOCw3ICszMTM4LDcgQEAg
c3RhdGljIGJvb2wgY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1
cm4gaW5mby0+c2lnbmFscyAmIFNlcmlhbFNpZ25hbF9EQ0Q7DQogfQ0KIA0KLXN0YXRpYyB2b2lk
IGR0cl9ydHMoc3RydWN0IHR0eV9wb3J0ICpwb3J0LCBpbnQgb24pDQorc3RhdGljIHZvaWQgZHRy
X3J0cyhzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAl1bnNpZ25lZCBsb25n
IGZsYWdzOw0KIAlzdHJ1Y3Qgc2xndF9pbmZvICppbmZvID0gY29udGFpbmVyX29mKHBvcnQsIHN0
cnVjdCBzbGd0X2luZm8sIHBvcnQpOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3R0eV9wb3J0
LmMgYi9kcml2ZXJzL3R0eS90dHlfcG9ydC5jDQppbmRleCBhNTczYzUwMGY5NWIuLmE3ODhhNmJm
NDg3ZCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdHR5L3R0eV9wb3J0LmMNCisrKyBiL2RyaXZlcnMv
dHR5L3R0eV9wb3J0LmMNCkBAIC00NjMsNyArNDYzLDcgQEAgRVhQT1JUX1NZTUJPTCh0dHlfcG9y
dF9jYXJyaWVyX3JhaXNlZCk7DQogdm9pZCB0dHlfcG9ydF9yYWlzZV9kdHJfcnRzKHN0cnVjdCB0
dHlfcG9ydCAqcG9ydCkNCiB7DQogCWlmIChwb3J0LT5vcHMtPmR0cl9ydHMpDQotCQlwb3J0LT5v
cHMtPmR0cl9ydHMocG9ydCwgMSk7DQorCQlwb3J0LT5vcHMtPmR0cl9ydHMocG9ydCwgdHJ1ZSk7
DQogfQ0KIEVYUE9SVF9TWU1CT0wodHR5X3BvcnRfcmFpc2VfZHRyX3J0cyk7DQogDQpAQCAtNDc4
LDcgKzQ3OCw3IEBAIEVYUE9SVF9TWU1CT0wodHR5X3BvcnRfcmFpc2VfZHRyX3J0cyk7DQogdm9p
ZCB0dHlfcG9ydF9sb3dlcl9kdHJfcnRzKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCkNCiB7DQogCWlm
IChwb3J0LT5vcHMtPmR0cl9ydHMpDQotCQlwb3J0LT5vcHMtPmR0cl9ydHMocG9ydCwgMCk7DQor
CQlwb3J0LT5vcHMtPmR0cl9ydHMocG9ydCwgZmFsc2UpOw0KIH0NCiBFWFBPUlRfU1lNQk9MKHR0
eV9wb3J0X2xvd2VyX2R0cl9ydHMpOw0KIA0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL2NsYXNz
L2NkYy1hY20uYyBiL2RyaXZlcnMvdXNiL2NsYXNzL2NkYy1hY20uYw0KaW5kZXggMzZiZjA1MWIz
NDViLi5kNGY5MjIwYjgxNjIgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3VzYi9jbGFzcy9jZGMtYWNt
LmMNCisrKyBiL2RyaXZlcnMvdXNiL2NsYXNzL2NkYy1hY20uYw0KQEAgLTY1MSw3ICs2NTEsNyBA
QCBzdGF0aWMgaW50IGFjbV90dHlfb3BlbihzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1Y3Qg
ZmlsZSAqZmlscCkNCiAJcmV0dXJuIHR0eV9wb3J0X29wZW4oJmFjbS0+cG9ydCwgdHR5LCBmaWxw
KTsNCiB9DQogDQotc3RhdGljIHZvaWQgYWNtX3BvcnRfZHRyX3J0cyhzdHJ1Y3QgdHR5X3BvcnQg
KnBvcnQsIGludCByYWlzZSkNCitzdGF0aWMgdm9pZCBhY21fcG9ydF9kdHJfcnRzKHN0cnVjdCB0
dHlfcG9ydCAqcG9ydCwgYm9vbCByYWlzZSkNCiB7DQogCXN0cnVjdCBhY20gKmFjbSA9IGNvbnRh
aW5lcl9vZihwb3J0LCBzdHJ1Y3QgYWNtLCBwb3J0KTsNCiAJaW50IHZhbDsNCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3VzYi9zZXJpYWwvY2gzNDEuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9jaDM0MS5j
DQppbmRleCA3OTJmMDFhNGVkMjIuLjk4ZWM0ZmU0NjkxNCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMv
dXNiL3NlcmlhbC9jaDM0MS5jDQorKysgYi9kcml2ZXJzL3VzYi9zZXJpYWwvY2gzNDEuYw0KQEAg
LTQyMCw3ICs0MjAsNyBAQCBzdGF0aWMgYm9vbCBjaDM0MV9jYXJyaWVyX3JhaXNlZChzdHJ1Y3Qg
dXNiX3NlcmlhbF9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gcHJpdi0+bXNyICYgQ0gzNDFfQklUX0RD
RDsNCiB9DQogDQotc3RhdGljIHZvaWQgY2gzNDFfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9w
b3J0ICpwb3J0LCBpbnQgb24pDQorc3RhdGljIHZvaWQgY2gzNDFfZHRyX3J0cyhzdHJ1Y3QgdXNi
X3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9uKQ0KIHsNCiAJc3RydWN0IGNoMzQxX3ByaXZhdGUg
KnByaXYgPSB1c2JfZ2V0X3NlcmlhbF9wb3J0X2RhdGEocG9ydCk7DQogCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL2NwMjEweC5jIGIvZHJpdmVy
cy91c2Ivc2VyaWFsL2NwMjEweC5jDQppbmRleCA2NzM3MmFjYzIzNTIuLmZlMmNkYzQ3N2ZiOSAx
MDA2NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC9jcDIxMHguYw0KKysrIGIvZHJpdmVycy91
c2Ivc2VyaWFsL2NwMjEweC5jDQpAQCAtNDUsNyArNDUsNyBAQCBzdGF0aWMgdm9pZCBjcDIxMHhf
ZGlzY29ubmVjdChzdHJ1Y3QgdXNiX3NlcmlhbCAqKTsNCiBzdGF0aWMgdm9pZCBjcDIxMHhfcmVs
ZWFzZShzdHJ1Y3QgdXNiX3NlcmlhbCAqKTsNCiBzdGF0aWMgaW50IGNwMjEweF9wb3J0X3Byb2Jl
KHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKik7DQogc3RhdGljIHZvaWQgY3AyMTB4X3BvcnRfcmVt
b3ZlKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKik7DQotc3RhdGljIHZvaWQgY3AyMTB4X2R0cl9y
dHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKTsNCitzdGF0aWMgdm9pZCBj
cDIxMHhfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9uKTsNCiBz
dGF0aWMgdm9pZCBjcDIxMHhfcHJvY2Vzc19yZWFkX3VyYihzdHJ1Y3QgdXJiICp1cmIpOw0KIHN0
YXRpYyB2b2lkIGNwMjEweF9lbmFibGVfZXZlbnRfbW9kZShzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0
ICpwb3J0KTsNCiBzdGF0aWMgdm9pZCBjcDIxMHhfZGlzYWJsZV9ldmVudF9tb2RlKHN0cnVjdCB1
c2Jfc2VyaWFsX3BvcnQgKnBvcnQpOw0KQEAgLTE0MDIsNyArMTQwMiw3IEBAIHN0YXRpYyBpbnQg
Y3AyMTB4X3Rpb2Ntc2V0X3BvcnQoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwNCiAJcmV0
dXJuIHJldDsNCiB9DQogDQotc3RhdGljIHZvaWQgY3AyMTB4X2R0cl9ydHMoc3RydWN0IHVzYl9z
ZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRpYyB2b2lkIGNwMjEweF9kdHJfcnRzKHN0
cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAlpZiAob24pDQogCQlj
cDIxMHhfdGlvY21zZXRfcG9ydChwb3J0LCBUSU9DTV9EVFIgfCBUSU9DTV9SVFMsIDApOw0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvdXNiL3NlcmlhbC9jeXByZXNzX204LmMgYi9kcml2ZXJzL3VzYi9z
ZXJpYWwvY3lwcmVzc19tOC5jDQppbmRleCAxZTBjMDI4YzVlYzkuLjdjNjA2MGMxN2VlMCAxMDA2
NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC9jeXByZXNzX204LmMNCisrKyBiL2RyaXZlcnMv
dXNiL3NlcmlhbC9jeXByZXNzX204LmMNCkBAIC0xMTgsNyArMTE4LDcgQEAgc3RhdGljIGludCAg
Y3lwcmVzc19jYTQydjJfcG9ydF9wcm9iZShzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KTsN
CiBzdGF0aWMgdm9pZCBjeXByZXNzX3BvcnRfcmVtb3ZlKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQg
KnBvcnQpOw0KIHN0YXRpYyBpbnQgIGN5cHJlc3Nfb3BlbihzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5
LCBzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KTsNCiBzdGF0aWMgdm9pZCBjeXByZXNzX2Ns
b3NlKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQpOw0KLXN0YXRpYyB2b2lkIGN5cHJlc3Nf
ZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBpbnQgb24pOw0KK3N0YXRpYyB2
b2lkIGN5cHJlc3NfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9u
KTsNCiBzdGF0aWMgaW50ICBjeXByZXNzX3dyaXRlKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHN0
cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsDQogCQkJY29uc3QgdW5zaWduZWQgY2hhciAqYnVm
LCBpbnQgY291bnQpOw0KIHN0YXRpYyB2b2lkIGN5cHJlc3Nfc2VuZChzdHJ1Y3QgdXNiX3Nlcmlh
bF9wb3J0ICpwb3J0KTsNCkBAIC02MjEsMTIgKzYyMSwxMiBAQCBzdGF0aWMgaW50IGN5cHJlc3Nf
b3BlbihzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0
KQ0KIAlyZXR1cm4gcmVzdWx0Ow0KIH0gLyogY3lwcmVzc19vcGVuICovDQogDQotc3RhdGljIHZv
aWQgY3lwcmVzc19kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBvbikN
CitzdGF0aWMgdm9pZCBjeXByZXNzX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9y
dCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCBjeXByZXNzX3ByaXZhdGUgKnByaXYgPSB1c2JfZ2V0
X3NlcmlhbF9wb3J0X2RhdGEocG9ydCk7DQogCS8qIGRyb3AgZHRyIGFuZCBydHMgKi8NCiAJc3Bp
bl9sb2NrX2lycSgmcHJpdi0+bG9jayk7DQotCWlmIChvbiA9PSAwKQ0KKwlpZiAoIW9uKQ0KIAkJ
cHJpdi0+bGluZV9jb250cm9sID0gMDsNCiAJZWxzZSANCiAJCXByaXYtPmxpbmVfY29udHJvbCA9
IENPTlRST0xfRFRSIHwgQ09OVFJPTF9SVFM7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2Vy
aWFsL2RpZ2lfYWNjZWxlcG9ydC5jIGIvZHJpdmVycy91c2Ivc2VyaWFsL2RpZ2lfYWNjZWxlcG9y
dC5jDQppbmRleCA0NWQ2ODhlOWI5M2YuLjg5MGU0NDYyNzNkNyAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvdXNiL3NlcmlhbC9kaWdpX2FjY2VsZXBvcnQuYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFs
L2RpZ2lfYWNjZWxlcG9ydC5jDQpAQCAtMjI4LDcgKzIyOCw3IEBAIHN0YXRpYyB1bnNpZ25lZCBp
bnQgZGlnaV93cml0ZV9yb29tKHN0cnVjdCB0dHlfc3RydWN0ICp0dHkpOw0KIHN0YXRpYyB1bnNp
Z25lZCBpbnQgZGlnaV9jaGFyc19pbl9idWZmZXIoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSk7DQog
c3RhdGljIGludCBkaWdpX29wZW4oc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IHVzYl9z
ZXJpYWxfcG9ydCAqcG9ydCk7DQogc3RhdGljIHZvaWQgZGlnaV9jbG9zZShzdHJ1Y3QgdXNiX3Nl
cmlhbF9wb3J0ICpwb3J0KTsNCi1zdGF0aWMgdm9pZCBkaWdpX2R0cl9ydHMoc3RydWN0IHVzYl9z
ZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKTsNCitzdGF0aWMgdm9pZCBkaWdpX2R0cl9ydHMoc3Ry
dWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgYm9vbCBvbik7DQogc3RhdGljIGludCBkaWdpX3N0
YXJ0dXBfZGV2aWNlKHN0cnVjdCB1c2Jfc2VyaWFsICpzZXJpYWwpOw0KIHN0YXRpYyBpbnQgZGln
aV9zdGFydHVwKHN0cnVjdCB1c2Jfc2VyaWFsICpzZXJpYWwpOw0KIHN0YXRpYyB2b2lkIGRpZ2lf
ZGlzY29ubmVjdChzdHJ1Y3QgdXNiX3NlcmlhbCAqc2VyaWFsKTsNCkBAIC0xMDYwLDEwICsxMDYw
LDEwIEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgZGlnaV9jaGFyc19pbl9idWZmZXIoc3RydWN0IHR0
eV9zdHJ1Y3QgKnR0eSkNCiAJcmV0dXJuIGNoYXJzOw0KIH0NCiANCi1zdGF0aWMgdm9pZCBkaWdp
X2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRpYyB2
b2lkIGRpZ2lfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9uKQ0K
IHsNCiAJLyogQWRqdXN0IERUUiBhbmQgUlRTICovDQotCWRpZ2lfc2V0X21vZGVtX3NpZ25hbHMo
cG9ydCwgb24gKiAoVElPQ01fRFRSIHwgVElPQ01fUlRTKSwgMSk7DQorCWRpZ2lfc2V0X21vZGVt
X3NpZ25hbHMocG9ydCwgb24gPyAoVElPQ01fRFRSIHwgVElPQ01fUlRTKSA6IDAsIDEpOw0KIH0N
CiANCiBzdGF0aWMgaW50IGRpZ2lfb3BlbihzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1Y3Qg
dXNiX3NlcmlhbF9wb3J0ICpwb3J0KQ0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL3NlcmlhbC9m
ODEyMzIuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9mODEyMzIuYw0KaW5kZXggMWE4YzI5MjVjMjZm
Li4xNjU2YmU4NDc0NjAgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3VzYi9zZXJpYWwvZjgxMjMyLmMN
CisrKyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9mODEyMzIuYw0KQEAgLTc1Miw3ICs3NTIsNyBAQCBz
dGF0aWMgdm9pZCBmODEyMzJfY2xvc2Uoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCkNCiAJ
Zmx1c2hfd29yaygmcG9ydF9wcml2LT5sc3Jfd29yayk7DQogfQ0KIA0KLXN0YXRpYyB2b2lkIGY4
MTIzMl9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBvbikNCitzdGF0
aWMgdm9pZCBmODEyMzJfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29s
IG9uKQ0KIHsNCiAJaWYgKG9uKQ0KIAkJZjgxMjMyX3NldF9tY3RybChwb3J0LCBUSU9DTV9EVFIg
fCBUSU9DTV9SVFMsIDApOw0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL3NlcmlhbC9mODE1MzQu
YyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9mODE1MzQuYw0KaW5kZXggNDA4M2FlOTYxYmU0Li44YjQ0
YjA4NzUyZDYgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3VzYi9zZXJpYWwvZjgxNTM0LmMNCisrKyBi
L2RyaXZlcnMvdXNiL3NlcmlhbC9mODE1MzQuYw0KQEAgLTE0NTYsNyArMTQ1Niw3IEBAIHN0YXRp
YyBpbnQgZjgxNTM0X3Rpb2Ntc2V0KHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHVuc2lnbmVkIGlu
dCBzZXQsDQogCXJldHVybiBmODE1MzRfdXBkYXRlX21jdHJsKHBvcnQsIHNldCwgY2xlYXIpOw0K
IH0NCiANCi1zdGF0aWMgdm9pZCBmODE1MzRfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0
ICpwb3J0LCBpbnQgb24pDQorc3RhdGljIHZvaWQgZjgxNTM0X2R0cl9ydHMoc3RydWN0IHVzYl9z
ZXJpYWxfcG9ydCAqcG9ydCwgYm9vbCBvbikNCiB7DQogCWlmIChvbikNCiAJCWY4MTUzNF91cGRh
dGVfbWN0cmwocG9ydCwgVElPQ01fRFRSIHwgVElPQ01fUlRTLCAwKTsNCmRpZmYgLS1naXQgYS9k
cml2ZXJzL3VzYi9zZXJpYWwvZnRkaV9zaW8uYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9mdGRpX3Np
by5jDQppbmRleCAwNWUyOGE1Y2U0MmIuLjA5YmRmNjIzZTk0ZSAxMDA2NDQNCi0tLSBhL2RyaXZl
cnMvdXNiL3NlcmlhbC9mdGRpX3Npby5jDQorKysgYi9kcml2ZXJzL3VzYi9zZXJpYWwvZnRkaV9z
aW8uYw0KQEAgLTIzNjYsNyArMjM2Niw3IEBAIHN0YXRpYyBpbnQgZnRkaV9vcGVuKHN0cnVjdCB0
dHlfc3RydWN0ICp0dHksIHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQpDQogCXJldHVybiB1
c2Jfc2VyaWFsX2dlbmVyaWNfb3Blbih0dHksIHBvcnQpOw0KIH0NCiANCi1zdGF0aWMgdm9pZCBm
dGRpX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRp
YyB2b2lkIGZ0ZGlfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9u
KQ0KIHsNCiAJc3RydWN0IGZ0ZGlfcHJpdmF0ZSAqcHJpdiA9IHVzYl9nZXRfc2VyaWFsX3BvcnRf
ZGF0YShwb3J0KTsNCiANCmRpZmYgLS1naXQgYS9kcml2ZXJzL3VzYi9zZXJpYWwvaXB3LmMgYi9k
cml2ZXJzL3VzYi9zZXJpYWwvaXB3LmMNCmluZGV4IGQwNGM3Y2M1YzFjMi4uYjFiN2EwMzNjYzc1
IDEwMDY0NA0KLS0tIGEvZHJpdmVycy91c2Ivc2VyaWFsL2lwdy5jDQorKysgYi9kcml2ZXJzL3Vz
Yi9zZXJpYWwvaXB3LmMNCkBAIC0yMTUsNyArMjE1LDcgQEAgc3RhdGljIHZvaWQgaXB3X3JlbGVh
c2Uoc3RydWN0IHVzYl9zZXJpYWwgKnNlcmlhbCkNCiAJa2ZyZWUoZGF0YSk7DQogfQ0KIA0KLXN0
YXRpYyB2b2lkIGlwd19kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBv
bikNCitzdGF0aWMgdm9pZCBpcHdfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0
LCBib29sIG9uKQ0KIHsNCiAJc3RydWN0IHVzYl9kZXZpY2UgKnVkZXYgPSBwb3J0LT5zZXJpYWwt
PmRldjsNCiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnBvcnQtPmRldjsNCmRpZmYgLS1naXQgYS9k
cml2ZXJzL3VzYi9zZXJpYWwva2V5c3Bhbi5jIGIvZHJpdmVycy91c2Ivc2VyaWFsL2tleXNwYW4u
Yw0KaW5kZXggMjk2NmUwYzQ5NDFlLi43ZTM3NTM2NzM1NGIgMTAwNjQ0DQotLS0gYS9kcml2ZXJz
L3VzYi9zZXJpYWwva2V5c3Bhbi5jDQorKysgYi9kcml2ZXJzL3VzYi9zZXJpYWwva2V5c3Bhbi5j
DQpAQCAtMTU2NCw3ICsxNTY0LDcgQEAgc3RhdGljIGludCBrZXlzcGFuX29wZW4oc3RydWN0IHR0
eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCkNCiAJcmV0dXJuIDA7
DQogfQ0KIA0KLXN0YXRpYyB2b2lkIGtleXNwYW5fZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9w
b3J0ICpwb3J0LCBpbnQgb24pDQorc3RhdGljIHZvaWQga2V5c3Bhbl9kdHJfcnRzKHN0cnVjdCB1
c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAlzdHJ1Y3Qga2V5c3Bhbl9wb3J0
X3ByaXZhdGUgKnBfcHJpdiA9IHVzYl9nZXRfc2VyaWFsX3BvcnRfZGF0YShwb3J0KTsNCiANCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3VzYi9zZXJpYWwva2V5c3Bhbl9wZGEuYyBiL2RyaXZlcnMvdXNi
L3NlcmlhbC9rZXlzcGFuX3BkYS5jDQppbmRleCA2ZmQxNWNkOWUxZWIuLmNiMTZjNGJjODU1NSAx
MDA2NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC9rZXlzcGFuX3BkYS5jDQorKysgYi9kcml2
ZXJzL3VzYi9zZXJpYWwva2V5c3Bhbl9wZGEuYw0KQEAgLTU1MSw3ICs1NTEsNyBAQCBzdGF0aWMg
aW50IGtleXNwYW5fcGRhX3dyaXRlKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHN0cnVjdCB1c2Jf
c2VyaWFsX3BvcnQgKnBvcg0KIAlyZXR1cm4gY291bnQ7DQogfQ0KIA0KLXN0YXRpYyB2b2lkIGtl
eXNwYW5fcGRhX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0K
K3N0YXRpYyB2b2lkIGtleXNwYW5fcGRhX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAq
cG9ydCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCB1c2Jfc2VyaWFsICpzZXJpYWwgPSBwb3J0LT5z
ZXJpYWw7DQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL21jdF91MjMyLmMgYi9k
cml2ZXJzL3VzYi9zZXJpYWwvbWN0X3UyMzIuYw0KaW5kZXggZDM4NTJmZWI4MWE0Li5lYjM1MjA0
OTBkZDIgMTAwNjQ0DQotLS0gYS9kcml2ZXJzL3VzYi9zZXJpYWwvbWN0X3UyMzIuYw0KKysrIGIv
ZHJpdmVycy91c2Ivc2VyaWFsL21jdF91MjMyLmMNCkBAIC00Miw3ICs0Miw3IEBAIHN0YXRpYyBp
bnQgIG1jdF91MjMyX3BvcnRfcHJvYmUoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCk7DQog
c3RhdGljIHZvaWQgbWN0X3UyMzJfcG9ydF9yZW1vdmUoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAq
cmVtb3ZlKTsNCiBzdGF0aWMgaW50ICBtY3RfdTIzMl9vcGVuKHN0cnVjdCB0dHlfc3RydWN0ICp0
dHksIHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQpOw0KIHN0YXRpYyB2b2lkIG1jdF91MjMy
X2Nsb3NlKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQpOw0KLXN0YXRpYyB2b2lkIG1jdF91
MjMyX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKTsNCitzdGF0
aWMgdm9pZCBtY3RfdTIzMl9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJv
b2wgb24pOw0KIHN0YXRpYyB2b2lkIG1jdF91MjMyX3JlYWRfaW50X2NhbGxiYWNrKHN0cnVjdCB1
cmIgKnVyYik7DQogc3RhdGljIHZvaWQgbWN0X3UyMzJfc2V0X3Rlcm1pb3Moc3RydWN0IHR0eV9z
dHJ1Y3QgKnR0eSwNCiAJCQkJIHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsDQpAQCAtNDc3
LDcgKzQ3Nyw3IEBAIHN0YXRpYyBpbnQgIG1jdF91MjMyX29wZW4oc3RydWN0IHR0eV9zdHJ1Y3Qg
KnR0eSwgc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCkNCiAJcmV0dXJuIHJldHZhbDsNCiB9
IC8qIG1jdF91MjMyX29wZW4gKi8NCiANCi1zdGF0aWMgdm9pZCBtY3RfdTIzMl9kdHJfcnRzKHN0
cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCBtY3RfdTIz
Ml9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAl1
bnNpZ25lZCBpbnQgY29udHJvbF9zdGF0ZTsNCiAJc3RydWN0IG1jdF91MjMyX3ByaXZhdGUgKnBy
aXYgPSB1c2JfZ2V0X3NlcmlhbF9wb3J0X2RhdGEocG9ydCk7DQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy91c2Ivc2VyaWFsL214dXBvcnQuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9teHVwb3J0LmMNCmlu
ZGV4IGZhYTBlZWRmZTI0NS4uYWM3NTk0NjM1NzE5IDEwMDY0NA0KLS0tIGEvZHJpdmVycy91c2Iv
c2VyaWFsL214dXBvcnQuYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFsL214dXBvcnQuYw0KQEAg
LTY3NCw3ICs2NzQsNyBAQCBzdGF0aWMgaW50IG14dXBvcnRfc2V0X3J0cyhzdHJ1Y3QgdXNiX3Nl
cmlhbF9wb3J0ICpwb3J0LCB1OCBzdGF0ZSkNCiAJcmV0dXJuIGVycjsNCiB9DQogDQotc3RhdGlj
IHZvaWQgbXh1cG9ydF9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBv
bikNCitzdGF0aWMgdm9pZCBteHVwb3J0X2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAq
cG9ydCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCBteHVwb3J0X3BvcnQgKm14cG9ydCA9IHVzYl9n
ZXRfc2VyaWFsX3BvcnRfZGF0YShwb3J0KTsNCiAJdTggbWNyX3N0YXRlOw0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdXNiL3NlcmlhbC9wbDIzMDMuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9wbDIzMDMu
Yw0KaW5kZXggNGNiODE3NDZhMTQ5Li5jYjIwOTExZjM1YmIgMTAwNjQ0DQotLS0gYS9kcml2ZXJz
L3VzYi9zZXJpYWwvcGwyMzAzLmMNCisrKyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9wbDIzMDMuYw0K
QEAgLTkzMSw3ICs5MzEsNyBAQCBzdGF0aWMgdm9pZCBwbDIzMDNfc2V0X3Rlcm1pb3Moc3RydWN0
IHR0eV9zdHJ1Y3QgKnR0eSwNCiAJa2ZyZWUoYnVmKTsNCiB9DQogDQotc3RhdGljIHZvaWQgcGwy
MzAzX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRp
YyB2b2lkIHBsMjMwM19kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wg
b24pDQogew0KIAlzdHJ1Y3QgcGwyMzAzX3ByaXZhdGUgKnByaXYgPSB1c2JfZ2V0X3NlcmlhbF9w
b3J0X2RhdGEocG9ydCk7DQogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7DQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy91c2Ivc2VyaWFsL3F1YXRlY2gyLmMgYi9kcml2ZXJzL3VzYi9zZXJpYWwvcXVhdGVjaDIu
Yw0KaW5kZXggNmZjYTQwYWNlODNhLi42ZmQzMjlmZmVjN2UgMTAwNjQ0DQotLS0gYS9kcml2ZXJz
L3VzYi9zZXJpYWwvcXVhdGVjaDIuYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFsL3F1YXRlY2gy
LmMNCkBAIC03NzAsNyArNzcwLDcgQEAgc3RhdGljIHZvaWQgcXQyX2JyZWFrX2N0bChzdHJ1Y3Qg
dHR5X3N0cnVjdCAqdHR5LCBpbnQgYnJlYWtfc3RhdGUpDQogDQogDQogDQotc3RhdGljIHZvaWQg
cXQyX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRp
YyB2b2lkIHF0Ml9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24p
DQogew0KIAlzdHJ1Y3QgdXNiX2RldmljZSAqZGV2ID0gcG9ydC0+c2VyaWFsLT5kZXY7DQogCXN0
cnVjdCBxdDJfcG9ydF9wcml2YXRlICpwb3J0X3ByaXYgPSB1c2JfZ2V0X3NlcmlhbF9wb3J0X2Rh
dGEocG9ydCk7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL3NpZXJyYS5jIGIvZHJp
dmVycy91c2Ivc2VyaWFsL3NpZXJyYS5jDQppbmRleCAzNTNiMjU0OWVhYTguLmYyYzNhN2FmMWE0
YSAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC9zaWVycmEuYw0KKysrIGIvZHJpdmVy
cy91c2Ivc2VyaWFsL3NpZXJyYS5jDQpAQCAtODEzLDcgKzgxMyw3IEBAIHN0YXRpYyBpbnQgc2ll
cnJhX29wZW4oc3RydWN0IHR0eV9zdHJ1Y3QgKnR0eSwgc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAq
cG9ydCkNCiB9DQogDQogDQotc3RhdGljIHZvaWQgc2llcnJhX2R0cl9ydHMoc3RydWN0IHVzYl9z
ZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRpYyB2b2lkIHNpZXJyYV9kdHJfcnRzKHN0
cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAlzdHJ1Y3Qgc2llcnJh
X3BvcnRfcHJpdmF0ZSAqcG9ydGRhdGE7DQogDQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2Vy
aWFsL3NwY3A4eDUuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC9zcGNwOHg1LmMNCmluZGV4IDgxNzVk
YjZjNDU1NC4uMDI0MDJlYTNiZDFiIDEwMDY0NA0KLS0tIGEvZHJpdmVycy91c2Ivc2VyaWFsL3Nw
Y3A4eDUuYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFsL3NwY3A4eDUuYw0KQEAgLTI1Niw3ICsy
NTYsNyBAQCBzdGF0aWMgYm9vbCBzcGNwOHg1X2NhcnJpZXJfcmFpc2VkKHN0cnVjdCB1c2Jfc2Vy
aWFsX3BvcnQgKnBvcnQpDQogCXJldHVybiByZXQgfHwgbXNyICYgTVNSX1NUQVRVU19MSU5FX0RD
RDsNCiB9DQogDQotc3RhdGljIHZvaWQgc3BjcDh4NV9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFs
X3BvcnQgKnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCBzcGNwOHg1X2R0cl9ydHMoc3RydWN0
IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCBzcGNwOHg1X3By
aXZhdGUgKnByaXYgPSB1c2JfZ2V0X3NlcmlhbF9wb3J0X2RhdGEocG9ydCk7DQogCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7DQpkaWZmIC0tZ2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL3NzdTEwMC5jIGIv
ZHJpdmVycy91c2Ivc2VyaWFsL3NzdTEwMC5jDQppbmRleCAxZTE4ODhiNjYzMDUuLjRjZmYzOTg5
NTgwNCAxMDA2NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC9zc3UxMDAuYw0KKysrIGIvZHJp
dmVycy91c2Ivc2VyaWFsL3NzdTEwMC5jDQpAQCAtMzg1LDcgKzM4NSw3IEBAIHN0YXRpYyBpbnQg
c3N1MTAwX3Rpb2Ntc2V0KHN0cnVjdCB0dHlfc3RydWN0ICp0dHksDQogCXJldHVybiB1cGRhdGVf
bWN0cmwoZGV2LCBzZXQsIGNsZWFyKTsNCiB9DQogDQotc3RhdGljIHZvaWQgc3N1MTAwX2R0cl9y
dHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKQ0KK3N0YXRpYyB2b2lkIHNz
dTEwMF9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0K
IAlzdHJ1Y3QgdXNiX2RldmljZSAqZGV2ID0gcG9ydC0+c2VyaWFsLT5kZXY7DQogDQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL3VwZDc4ZjA3MzAuYyBiL2RyaXZlcnMvdXNiL3Nlcmlh
bC91cGQ3OGYwNzMwLmMNCmluZGV4IGM0NzQzOWJkOTBmYS4uMjA2NzQ5ZmUzMjYzIDEwMDY0NA0K
LS0tIGEvZHJpdmVycy91c2Ivc2VyaWFsL3VwZDc4ZjA3MzAuYw0KKysrIGIvZHJpdmVycy91c2Iv
c2VyaWFsL3VwZDc4ZjA3MzAuYw0KQEAgLTI2Miw3ICsyNjIsNyBAQCBzdGF0aWMgdm9pZCB1cGQ3
OGYwNzMwX2JyZWFrX2N0bChzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5LCBpbnQgYnJlYWtfc3RhdGUp
DQogCW11dGV4X3VubG9jaygmcHJpdmF0ZS0+bG9jayk7DQogfQ0KIA0KLXN0YXRpYyB2b2lkIHVw
ZDc4ZjA3MzBfZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBpbnQgb24pDQor
c3RhdGljIHZvaWQgdXBkNzhmMDczMF9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBv
cnQsIGJvb2wgb24pDQogew0KIAlzdHJ1Y3QgdHR5X3N0cnVjdCAqdHR5ID0gcG9ydC0+cG9ydC50
dHk7DQogCXVuc2lnbmVkIGludCBzZXQgPSAwOw0KQEAgLTMwNyw5ICszMDcsOSBAQCBzdGF0aWMg
dm9pZCB1cGQ3OGYwNzMwX3NldF90ZXJtaW9zKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksDQogCQly
ZXR1cm47DQogDQogCWlmIChDX0JBVUQodHR5KSA9PSBCMCkNCi0JCXVwZDc4ZjA3MzBfZHRyX3J0
cyhwb3J0LCAwKTsNCisJCXVwZDc4ZjA3MzBfZHRyX3J0cyhwb3J0LCBmYWxzZSk7DQogCWVsc2Ug
aWYgKG9sZF90ZXJtaW9zICYmIChvbGRfdGVybWlvcy0+Y19jZmxhZyAmIENCQVVEKSA9PSBCMCkN
Ci0JCXVwZDc4ZjA3MzBfZHRyX3J0cyhwb3J0LCAxKTsNCisJCXVwZDc4ZjA3MzBfZHRyX3J0cyhw
b3J0LCB0cnVlKTsNCiANCiAJYmF1ZF9yYXRlID0gdXBkNzhmMDczMF9nZXRfYmF1ZF9yYXRlKHR0
eSk7DQogCXJlcXVlc3Qub3Bjb2RlID0gVVBENzhGMDczMF9DTURfTElORV9DT05UUk9MOw0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvdXNiL3NlcmlhbC91c2Itc2VyaWFsLmMgYi9kcml2ZXJzL3VzYi9z
ZXJpYWwvdXNiLXNlcmlhbC5jDQppbmRleCAwMTk3MjBhNjNmYWMuLmY4NDA0MDczNTU4YiAxMDA2
NDQNCi0tLSBhL2RyaXZlcnMvdXNiL3NlcmlhbC91c2Itc2VyaWFsLmMNCisrKyBiL2RyaXZlcnMv
dXNiL3NlcmlhbC91c2Itc2VyaWFsLmMNCkBAIC03NjUsNyArNzY1LDcgQEAgc3RhdGljIGJvb2wg
c2VyaWFsX3BvcnRfY2Fycmllcl9yYWlzZWQoc3RydWN0IHR0eV9wb3J0ICpwb3J0KQ0KIAlyZXR1
cm4gdHJ1ZTsNCiB9DQogDQotc3RhdGljIHZvaWQgc2VyaWFsX3BvcnRfZHRyX3J0cyhzdHJ1Y3Qg
dHR5X3BvcnQgKnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCBzZXJpYWxfcG9ydF9kdHJfcnRz
KHN0cnVjdCB0dHlfcG9ydCAqcG9ydCwgYm9vbCBvbikNCiB7DQogCXN0cnVjdCB1c2Jfc2VyaWFs
X3BvcnQgKnAgPSBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IHVzYl9zZXJpYWxfcG9ydCwgcG9y
dCk7DQogCXN0cnVjdCB1c2Jfc2VyaWFsX2RyaXZlciAqZHJ2ID0gcC0+c2VyaWFsLT50eXBlOw0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdXNiL3NlcmlhbC91c2Itd3dhbi5oIGIvZHJpdmVycy91c2Iv
c2VyaWFsL3VzYi13d2FuLmgNCmluZGV4IDUxOTEwMTk0NTc2OS4uYjJhMDdkZDQ0MjI1IDEwMDY0
NA0KLS0tIGEvZHJpdmVycy91c2Ivc2VyaWFsL3VzYi13d2FuLmgNCisrKyBiL2RyaXZlcnMvdXNi
L3NlcmlhbC91c2Itd3dhbi5oDQpAQCAtNiw3ICs2LDcgQEANCiAjaWZuZGVmIF9fTElOVVhfVVNC
X1VTQl9XV0FODQogI2RlZmluZSBfX0xJTlVYX1VTQl9VU0JfV1dBTg0KIA0KLWV4dGVybiB2b2lk
IHVzYl93d2FuX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50IG9uKTsN
CitleHRlcm4gdm9pZCB1c2Jfd3dhbl9kdHJfcnRzKHN0cnVjdCB1c2Jfc2VyaWFsX3BvcnQgKnBv
cnQsIGJvb2wgb24pOw0KIGV4dGVybiBpbnQgdXNiX3d3YW5fb3BlbihzdHJ1Y3QgdHR5X3N0cnVj
dCAqdHR5LCBzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KTsNCiBleHRlcm4gdm9pZCB1c2Jf
d3dhbl9jbG9zZShzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KTsNCiBleHRlcm4gaW50IHVz
Yl93d2FuX3BvcnRfcHJvYmUoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCk7DQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy91c2Ivc2VyaWFsL3VzYl93d2FuLmMgYi9kcml2ZXJzL3VzYi9zZXJpYWwv
dXNiX3d3YW4uYw0KaW5kZXggMDAxN2Y2ZTk2OWUxLi4xNjhiMTFjYzAyYjYgMTAwNjQ0DQotLS0g
YS9kcml2ZXJzL3VzYi9zZXJpYWwvdXNiX3d3YW4uYw0KKysrIGIvZHJpdmVycy91c2Ivc2VyaWFs
L3VzYl93d2FuLmMNCkBAIC02OSw3ICs2OSw3IEBAIHN0YXRpYyBpbnQgdXNiX3d3YW5fc2VuZF9z
ZXR1cChzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KQ0KIAlyZXR1cm4gcmVzOw0KIH0NCiAN
Ci12b2lkIHVzYl93d2FuX2R0cl9ydHMoc3RydWN0IHVzYl9zZXJpYWxfcG9ydCAqcG9ydCwgaW50
IG9uKQ0KK3ZvaWQgdXNiX3d3YW5fZHRyX3J0cyhzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0
LCBib29sIG9uKQ0KIHsNCiAJc3RydWN0IHVzYl93d2FuX3BvcnRfcHJpdmF0ZSAqcG9ydGRhdGE7
DQogCXN0cnVjdCB1c2Jfd3dhbl9pbnRmX3ByaXZhdGUgKmludGZkYXRhOw0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdXNiL3NlcmlhbC94cl9zZXJpYWwuYyBiL2RyaXZlcnMvdXNiL3NlcmlhbC94cl9z
ZXJpYWwuYw0KaW5kZXggZmRiMGFhZTU0NmMzLi45YWFlZDA5ZDQ1ZTQgMTAwNjQ0DQotLS0gYS9k
cml2ZXJzL3VzYi9zZXJpYWwveHJfc2VyaWFsLmMNCisrKyBiL2RyaXZlcnMvdXNiL3NlcmlhbC94
cl9zZXJpYWwuYw0KQEAgLTQ5NSw3ICs0OTUsNyBAQCBzdGF0aWMgaW50IHhyX3Rpb2Ntc2V0KHN0
cnVjdCB0dHlfc3RydWN0ICp0dHksDQogCXJldHVybiB4cl90aW9jbXNldF9wb3J0KHBvcnQsIHNl
dCwgY2xlYXIpOw0KIH0NCiANCi1zdGF0aWMgdm9pZCB4cl9kdHJfcnRzKHN0cnVjdCB1c2Jfc2Vy
aWFsX3BvcnQgKnBvcnQsIGludCBvbikNCitzdGF0aWMgdm9pZCB4cl9kdHJfcnRzKHN0cnVjdCB1
c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGJvb2wgb24pDQogew0KIAlpZiAob24pDQogCQl4cl90aW9j
bXNldF9wb3J0KHBvcnQsIFRJT0NNX0RUUiB8IFRJT0NNX1JUUywgMCk7DQpAQCAtNjY5LDkgKzY2
OSw5IEBAIHN0YXRpYyB2b2lkIHhyX3NldF9mbG93X21vZGUoc3RydWN0IHR0eV9zdHJ1Y3QgKnR0
eSwNCiAJeHJfdWFydF9lbmFibGUocG9ydCk7DQogDQogCWlmIChDX0JBVUQodHR5KSA9PSBCMCkN
Ci0JCXhyX2R0cl9ydHMocG9ydCwgMCk7DQorCQl4cl9kdHJfcnRzKHBvcnQsIGZhbHNlKTsNCiAJ
ZWxzZSBpZiAob2xkX3Rlcm1pb3MgJiYgKG9sZF90ZXJtaW9zLT5jX2NmbGFnICYgQ0JBVUQpID09
IEIwKQ0KLQkJeHJfZHRyX3J0cyhwb3J0LCAxKTsNCisJCXhyX2R0cl9ydHMocG9ydCwgdHJ1ZSk7
DQogfQ0KIA0KIHN0YXRpYyB2b2lkIHhyMjF2MTQxeF9zZXRfbGluZV9zZXR0aW5ncyhzdHJ1Y3Qg
dHR5X3N0cnVjdCAqdHR5LA0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvdHR5X3BvcnQuaCBi
L2luY2x1ZGUvbGludXgvdHR5X3BvcnQuaA0KaW5kZXggY2YwOTg0NTljYjAxLi5jNDRlNDg5ZGUw
ZmYgMTAwNjQ0DQotLS0gYS9pbmNsdWRlL2xpbnV4L3R0eV9wb3J0LmgNCisrKyBiL2luY2x1ZGUv
bGludXgvdHR5X3BvcnQuaA0KQEAgLTE2LDcgKzE2LDcgQEAgc3RydWN0IHR0eV9zdHJ1Y3Q7DQog
LyoqDQogICogc3RydWN0IHR0eV9wb3J0X29wZXJhdGlvbnMgLS0gb3BlcmF0aW9ucyBvbiB0dHlf
cG9ydA0KICAqIEBjYXJyaWVyX3JhaXNlZDogcmV0dXJuIHRydWUgaWYgdGhlIGNhcnJpZXIgaXMg
cmFpc2VkIG9uIEBwb3J0DQotICogQGR0cl9ydHM6IHJhaXNlIHRoZSBEVFIgbGluZSBpZiBAcmFp
c2UgaXMgbm9uemVybywgb3RoZXJ3aXNlIGxvd2VyIERUUg0KKyAqIEBkdHJfcnRzOiByYWlzZSB0
aGUgRFRSIGxpbmUgaWYgQHJhaXNlIGlzIHRydWUsIG90aGVyd2lzZSBsb3dlciBEVFINCiAgKiBA
c2h1dGRvd246IGNhbGxlZCB3aGVuIHRoZSBsYXN0IGNsb3NlIGNvbXBsZXRlcyBvciBhIGhhbmd1
cCBmaW5pc2hlcyBJRkYgdGhlDQogICoJcG9ydCB3YXMgaW5pdGlhbGl6ZWQuIERvIG5vdCB1c2Ug
dG8gZnJlZSByZXNvdXJjZXMuIFR1cm4gb2ZmIHRoZSBkZXZpY2UNCiAgKglvbmx5LiBDYWxsZWQg
dW5kZXIgdGhlIHBvcnQgbXV0ZXggdG8gc2VyaWFsaXplIGFnYWluc3QgQGFjdGl2YXRlIGFuZA0K
QEAgLTMyLDcgKzMyLDcgQEAgc3RydWN0IHR0eV9zdHJ1Y3Q7DQogICovDQogc3RydWN0IHR0eV9w
b3J0X29wZXJhdGlvbnMgew0KIAlib29sICgqY2Fycmllcl9yYWlzZWQpKHN0cnVjdCB0dHlfcG9y
dCAqcG9ydCk7DQotCXZvaWQgKCpkdHJfcnRzKShzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGludCBy
YWlzZSk7DQorCXZvaWQgKCpkdHJfcnRzKShzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIGJvb2wgcmFp
c2UpOw0KIAl2b2lkICgqc2h1dGRvd24pKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCk7DQogCWludCAo
KmFjdGl2YXRlKShzdHJ1Y3QgdHR5X3BvcnQgKnBvcnQsIHN0cnVjdCB0dHlfc3RydWN0ICp0dHkp
Ow0KIAl2b2lkICgqZGVzdHJ1Y3QpKHN0cnVjdCB0dHlfcG9ydCAqcG9ydCk7DQpkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC91c2Ivc2VyaWFsLmggYi9pbmNsdWRlL2xpbnV4L3VzYi9zZXJpYWwu
aA0KaW5kZXggZGM3ZjkwNTIyYjQyLi5jNTk3MzU3ODUzZDkgMTAwNjQ0DQotLS0gYS9pbmNsdWRl
L2xpbnV4L3VzYi9zZXJpYWwuaA0KKysrIGIvaW5jbHVkZS9saW51eC91c2Ivc2VyaWFsLmgNCkBA
IC0yOTIsNyArMjkyLDcgQEAgc3RydWN0IHVzYl9zZXJpYWxfZHJpdmVyIHsNCiAJCQlzdHJ1Y3Qg
c2VyaWFsX2ljb3VudGVyX3N0cnVjdCAqaWNvdW50KTsNCiAJLyogQ2FsbGVkIGJ5IHRoZSB0dHkg
bGF5ZXIgZm9yIHBvcnQgbGV2ZWwgd29yay4gVGhlcmUgbWF5IG9yIG1heSBub3QNCiAJICAgYmUg
YW4gYXR0YWNoZWQgdHR5IGF0IHRoaXMgcG9pbnQgKi8NCi0Jdm9pZCAoKmR0cl9ydHMpKHN0cnVj
dCB1c2Jfc2VyaWFsX3BvcnQgKnBvcnQsIGludCBvbik7DQorCXZvaWQgKCpkdHJfcnRzKShzdHJ1
Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0LCBib29sIG9uKTsNCiAJYm9vbCAoKmNhcnJpZXJfcmFp
c2VkKShzdHJ1Y3QgdXNiX3NlcmlhbF9wb3J0ICpwb3J0KTsNCiAJLyogQ2FsbGVkIGJ5IHRoZSB1
c2Igc2VyaWFsIGhvb2tzIHRvIGFsbG93IHRoZSB1c2VyIHRvIHJld29yayB0aGUNCiAJICAgdGVy
bWlvcyBzdGF0ZSAqLw0KLS0gDQoyLjMwLjINCg0KX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KZ3JleWJ1cy1kZXYgbWFpbGluZyBsaXN0IC0tIGdyZXlidXMt
ZGV2QGxpc3RzLmxpbmFyby5vcmcKVG8gdW5zdWJzY3JpYmUgc2VuZCBhbiBlbWFpbCB0byBncmV5
YnVzLWRldi1sZWF2ZUBsaXN0cy5saW5hcm8ub3JnCg==
